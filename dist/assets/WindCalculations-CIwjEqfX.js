const i=t=>t*Math.PI/180,L=t=>t*180/Math.PI,b=(t,s)=>{const o=(s+180)%360;let n=Math.abs(t-o);return n>180&&(n=360-n),n},h=(t,s,o)=>{const n=(o+180)%360,c=i(s),e=i(n);return-t*Math.cos(c-e)},g=(t,s,o)=>{const n=(o+180)%360,c=i(s),e=i(n);return t*Math.sin(c-e)},m=(t,s,o,n)=>{const c=h(o,s,n),e=g(o,s,n),l=t-c,u=Math.abs(e)>0?-.02*Math.pow(e,2)/t:0;return l+u},R=(t,s)=>{const o=i(t.lat),n=i(t.lon),c=i(s.lat),e=i(s.lon),l=Math.sin(e-n)*Math.cos(c),u=Math.cos(o)*Math.sin(c)-Math.sin(o)*Math.cos(c)*Math.cos(e-n);let d=L(Math.atan2(l,u));return d=(d+360)%360,d},S=(t,s,o,n,c)=>{if(n===0)return t/s;const e=m(s,o,n,c);return t/e},W=(t,s,o)=>{let n=1;return o>0?n=1+Math.min(o/100,.05):o<0&&(n=1-Math.min(Math.abs(o)/150,.03)),t*s*n},j=(t,s,o,n,c)=>{const e=(n==null?void 0:n.cruiseSpeed)||145,l=(n==null?void 0:n.fuelBurn)||1100,u=(c==null?void 0:c.windSpeed)||0,d=(c==null?void 0:c.windDirection)||0,a=R(t,s),r=h(u,a,d),p=g(u,a,d),C=m(e,a,u,d),M=S(o,e,a,u,d),D=W(l,M,r);return{time:M,fuel:D,headwindComponent:r,crosswindComponent:p,groundSpeed:C,course:a}};export{R as calculateCourse,g as calculateCrosswindComponent,m as calculateGroundSpeed,h as calculateHeadwindComponent,j as calculateLegWithWind,W as calculateWindAdjustedFuel,S as calculateWindAdjustedTime,b as calculateWindAngle};
//# sourceMappingURL=WindCalculations-CIwjEqfX.js.map

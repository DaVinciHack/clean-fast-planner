{"version":3,"file":"WeatherSegmentsLayer-Bt9SUS2l.js","sources":["../../src/components/fast-planner/modules/layers/WeatherSegmentsLayer.js"],"sourcesContent":["/**\n * WeatherSegmentsLayer.js\n * \n * Map layer for displaying Norwegian weather segments with aviation-specific coloring\n */\n\nclass WeatherSegmentsLayer {\n  constructor(map) {\n    this.map = map;\n    this.layerId = 'weather-segments-layer';\n    this.alternateLayerId = 'alternate-segments-layer';\n    this.isVisible = false;\n    this.currentSegments = [];\n    this.currentAlternates = [];\n  }\n  \n  /**\n   * Add weather segments to the map\n   */\n  addWeatherSegments(weatherData) {\n    if (!weatherData || !this.map) return;\n    \n    this.currentSegments = weatherData.segments || [];\n    this.currentAlternates = weatherData.alternates || [];\n    \n    this.addMainSegments();\n    this.addAlternateSegments();\n    \n    this.isVisible = true;\n  }\n  \n  /**\n   * Add main route weather segments to map\n   */\n  addMainSegments() {\n    if (!this.currentSegments.length) return;\n    \n    this.removeMainSegments();\n    \n    const features = this.currentSegments\n      .filter(segment => segment.geoPoint)\n      .map(segment => this.createSegmentFeature(segment, 'main'));\n    \n    if (features.length === 0) return;\n    \n    // Add source and layers for main segments\n    this.map.addSource(this.layerId, {\n      type: 'geojson',\n      data: {\n        type: 'FeatureCollection',\n        features: features\n      }\n    });\n    \n    // Add circle layer for segment points with ranking colors\n    this.map.addLayer({\n      id: this.layerId,\n      type: 'circle',\n      source: this.layerId,\n      paint: {\n        'circle-radius': [\n          'case',\n          ['get', 'priority'], 1, 12, 2, 10, 3, 8, 6\n        ],\n        'circle-color': ['get', 'color'],\n        'circle-stroke-width': 2,\n        'circle-stroke-color': '#ffffff',\n        'circle-opacity': 0.8\n      }\n    });\n  }  \n  /**\n   * Create feature for a weather segment\n   */\n  createSegmentFeature(segment, type) {\n    const coords = this.parseGeoPoint(segment.geoPoint);\n    if (!coords) return null;\n    \n    return {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: coords\n      },\n      properties: {\n        airportIcao: segment.airportIcao || 'Unknown',\n        color: segment.color || '#2196F3',\n        priority: segment.priority || 5,\n        windSpeed: segment.windSpeed || 0,\n        windDirection: segment.windDirection || 0,\n        ranking: segment.alternateRanking || 0,\n        type: type,\n        warnings: segment.warnings || '',\n        isRig: segment.isRig || false,\n        araRequired: segment.araRequired || false\n      }\n    };\n  }\n  \n  /**\n   * Parse geoPoint string to coordinates\n   */\n  parseGeoPoint(geoPoint) {\n    if (!geoPoint) return null;\n    \n    try {\n      const parts = geoPoint.split(',');\n      if (parts.length === 2) {\n        const lat = parseFloat(parts[0].trim());\n        const lon = parseFloat(parts[1].trim());\n        if (!isNaN(lat) && !isNaN(lon)) {\n          return [lon, lat]; // GeoJSON format: [longitude, latitude]\n        }\n      }\n    } catch (error) {\n      console.error('WeatherSegmentsLayer: Error parsing geoPoint:', geoPoint, error);\n    }\n    \n    return null;\n  }\n  \n  /**\n   * Add alternate segments\n   */\n  addAlternateSegments() {\n    // Implementation for alternate segments\n    console.log('WeatherSegmentsLayer: Adding alternate segments');\n  }\n  \n  /**\n   * Remove main segments\n   */\n  removeMainSegments() {\n    try {\n      if (this.map.getLayer(this.layerId)) {\n        this.map.removeLayer(this.layerId);\n      }\n      if (this.map.getSource(this.layerId)) {\n        this.map.removeSource(this.layerId);\n      }\n    } catch (error) {\n      console.error('WeatherSegmentsLayer: Error removing main segments:', error);\n    }\n  }\n  \n  /**\n   * Toggle layer visibility\n   */\n  toggle() {\n    this.isVisible = !this.isVisible;\n    const visibility = this.isVisible ? 'visible' : 'none';\n    \n    if (this.map.getLayer(this.layerId)) {\n      this.map.setLayoutProperty(this.layerId, 'visibility', visibility);\n    }\n  }\n}\n\nexport default WeatherSegmentsLayer;"],"names":["WeatherSegmentsLayer","map","weatherData","features","segment","type","coords","geoPoint","parts","lat","lon","error","visibility"],"mappings":"AAMA,MAAMA,CAAqB,CACzB,YAAYC,EAAK,CACf,KAAK,IAAMA,EACX,KAAK,QAAU,yBACf,KAAK,iBAAmB,2BACxB,KAAK,UAAY,GACjB,KAAK,gBAAkB,CAAE,EACzB,KAAK,kBAAoB,CAAE,CAC/B,CAKE,mBAAmBC,EAAa,CAC1B,CAACA,GAAe,CAAC,KAAK,MAE1B,KAAK,gBAAkBA,EAAY,UAAY,CAAE,EACjD,KAAK,kBAAoBA,EAAY,YAAc,CAAE,EAErD,KAAK,gBAAiB,EACtB,KAAK,qBAAsB,EAE3B,KAAK,UAAY,GACrB,CAKE,iBAAkB,CAChB,GAAI,CAAC,KAAK,gBAAgB,OAAQ,OAElC,KAAK,mBAAoB,EAEzB,MAAMC,EAAW,KAAK,gBACnB,OAAOC,GAAWA,EAAQ,QAAQ,EAClC,IAAIA,GAAW,KAAK,qBAAqBA,EAAS,MAAM,CAAC,EAExDD,EAAS,SAAW,IAGxB,KAAK,IAAI,UAAU,KAAK,QAAS,CAC/B,KAAM,UACN,KAAM,CACJ,KAAM,oBACN,SAAUA,CAClB,CACA,CAAK,EAGD,KAAK,IAAI,SAAS,CAChB,GAAI,KAAK,QACT,KAAM,SACN,OAAQ,KAAK,QACb,MAAO,CACL,gBAAiB,CACf,OACA,CAAC,MAAO,UAAU,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,CAC1C,EACD,eAAgB,CAAC,MAAO,OAAO,EAC/B,sBAAuB,EACvB,sBAAuB,UACvB,iBAAkB,EAC1B,CACA,CAAK,EACF,CAID,qBAAqBC,EAASC,EAAM,CAClC,MAAMC,EAAS,KAAK,cAAcF,EAAQ,QAAQ,EAClD,OAAKE,EAEE,CACL,KAAM,UACN,SAAU,CACR,KAAM,QACN,YAAaA,CACd,EACD,WAAY,CACV,YAAaF,EAAQ,aAAe,UACpC,MAAOA,EAAQ,OAAS,UACxB,SAAUA,EAAQ,UAAY,EAC9B,UAAWA,EAAQ,WAAa,EAChC,cAAeA,EAAQ,eAAiB,EACxC,QAASA,EAAQ,kBAAoB,EACrC,KAAMC,EACN,SAAUD,EAAQ,UAAY,GAC9B,MAAOA,EAAQ,OAAS,GACxB,YAAaA,EAAQ,aAAe,EAC5C,CACK,EApBmB,IAqBxB,CAKE,cAAcG,EAAU,CACtB,GAAI,CAACA,EAAU,OAAO,KAEtB,GAAI,CACF,MAAMC,EAAQD,EAAS,MAAM,GAAG,EAChC,GAAIC,EAAM,SAAW,EAAG,CACtB,MAAMC,EAAM,WAAWD,EAAM,CAAC,EAAE,KAAI,CAAE,EAChCE,EAAM,WAAWF,EAAM,CAAC,EAAE,KAAI,CAAE,EACtC,GAAI,CAAC,MAAMC,CAAG,GAAK,CAAC,MAAMC,CAAG,EAC3B,MAAO,CAACA,EAAKD,CAAG,CAE1B,CACK,OAAQE,EAAO,CACd,QAAQ,MAAM,gDAAiDJ,EAAUI,CAAK,CACpF,CAEI,OAAO,IACX,CAKE,sBAAuB,CAErB,QAAQ,IAAI,iDAAiD,CACjE,CAKE,oBAAqB,CACnB,GAAI,CACE,KAAK,IAAI,SAAS,KAAK,OAAO,GAChC,KAAK,IAAI,YAAY,KAAK,OAAO,EAE/B,KAAK,IAAI,UAAU,KAAK,OAAO,GACjC,KAAK,IAAI,aAAa,KAAK,OAAO,CAErC,OAAQA,EAAO,CACd,QAAQ,MAAM,sDAAuDA,CAAK,CAChF,CACA,CAKE,QAAS,CACP,KAAK,UAAY,CAAC,KAAK,UACvB,MAAMC,EAAa,KAAK,UAAY,UAAY,OAE5C,KAAK,IAAI,SAAS,KAAK,OAAO,GAChC,KAAK,IAAI,kBAAkB,KAAK,QAAS,aAAcA,CAAU,CAEvE,CACA"}
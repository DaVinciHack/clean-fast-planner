import{N as c}from"./index-BuFAfx5M.js";import"./react-vendors-Bh7YcOHL.js";import"./osdk-vendors-uCUaU2oH.js";class o{constructor(){this.noaaService=new c,this.activeWeatherLayers=new Map,this.isInitialized=!1,this.weatherProfiles={rigOperations:{name:"Oil Rig Operations",layers:["CARIBBEAN","LIGHTNING","VISIBLE","LONGWAVE"],description:"Optimized for Gulf of Mexico offshore operations",priority:["LIGHTNING","CARIBBEAN","VISIBLE"]},stormTracking:{name:"Storm Tracking",layers:["LIGHTNING","CARIBBEAN","WATER_VAPOR","LONGWAVE"],description:"Real-time storm development and tracking",priority:["LIGHTNING","CARIBBEAN","WATER_VAPOR"]},flightPlanning:{name:"Flight Planning",layers:["VISIBLE","CARIBBEAN","LIGHTNING"],description:"Essential weather for flight safety",priority:["LIGHTNING","CARIBBEAN","VISIBLE"]},globalOperations:{name:"Global Operations",layers:["LIGHTNING","VISIBLE","LONGWAVE"],description:"Global lightning and satellite coverage",priority:["LIGHTNING","VISIBLE","LONGWAVE"]}},console.log("üå©Ô∏è Weather Suite Manager initialized")}initialize(e){if(!e)throw new Error("Map instance required for weather suite");return this.mapInstance=e,this.isInitialized=!0,console.log("‚úÖ Weather Suite Manager ready"),!0}async applyWeatherProfile(e,t={}){if(!this.isInitialized)throw new Error("Weather suite not initialized");const r=this.weatherProfiles[e];if(!r)throw new Error(`Unknown weather profile: ${e}`);console.log(`üå§Ô∏è Applying weather profile: ${r.name}`),console.log(`üìã ${r.description}`);const i={profile:e,success:[],failed:[],layersAdded:0};await this.clearAllWeatherLayers();const n=t.priorityOrder?r.priority:r.layers;for(const a of n)try{console.log(`üõ∞Ô∏è Adding ${a} layer...`),await this.addWeatherLayer(a,{opacity:t.opacity||.7,...t})?(i.success.push(a),i.layersAdded++,console.log(`‚úÖ ${a} layer added successfully`)):(i.failed.push(a),console.log(`‚ùå ${a} layer failed to add`)),await new Promise(l=>setTimeout(l,500))}catch(s){console.error(`‚ùå Error adding ${a}:`,s.message),i.failed.push(a)}return this.activeProfile=e,console.log(`üéâ Weather profile applied: ${i.layersAdded}/${n.length} layers successful`),i}async addWeatherLayer(e,t={}){if(!this.isInitialized)throw new Error("Weather suite not initialized");try{if(e==="LIGHTNING"){const i=await this.addLightningLayer(t);return i&&this.activeWeatherLayers.set(e,{type:"lightning",layerId:"noaa-lightning-layer",sourceId:"noaa-lightning",addedAt:new Date}),i}const r=await this.noaaService.addTestOverlay(this.mapInstance,e);return r&&(this.activeWeatherLayers.set(e,{type:this.getLayerType(e),layerId:"noaa-satellite-layer",sourceId:"noaa-satellite",addedAt:new Date}),t.opacity!==void 0&&this.setLayerOpacity(e,t.opacity)),r}catch(r){return console.error(`Error adding weather layer ${e}:`,r),!1}}async addLightningLayer(e={}){try{const t=this.noaaService.lightningLayers.LIGHTNING,r={type:"raster",tiles:[this.noaaService.getWMSUrl(t,{bbox:"{bbox-epsg-3857}",width:512,height:512})],tileSize:512,attribution:"¬© NOAA Lightning Detection Network"};return this.mapInstance.getSource("noaa-lightning")&&(this.mapInstance.removeLayer("noaa-lightning-layer"),this.mapInstance.removeSource("noaa-lightning")),this.mapInstance.addSource("noaa-lightning",r),this.mapInstance.addLayer({id:"noaa-lightning-layer",type:"raster",source:"noaa-lightning",paint:{"raster-opacity":e.opacity||.8}}),console.log("‚ö° Lightning detection layer added successfully"),!0}catch(t){return console.error("‚ùå Failed to add lightning layer:",t),!1}}async clearAllWeatherLayers(){console.log("üßπ Clearing all weather layers..."),this.noaaService.removeOverlay(this.mapInstance),this.mapInstance.getSource("noaa-lightning")&&(this.mapInstance.removeLayer("noaa-lightning-layer"),this.mapInstance.removeSource("noaa-lightning")),this.activeWeatherLayers.clear(),this.activeProfile=null,console.log("‚úÖ All weather layers cleared")}setLayerOpacity(e,t){const r=this.activeWeatherLayers.get(e);if(!r)return console.warn(`Layer ${e} not found`),!1;try{return this.mapInstance.setPaintProperty(r.layerId,"raster-opacity",t),console.log(`üé® ${e} opacity set to ${t}`),!0}catch(i){return console.error(`Error setting opacity for ${e}:`,i),!1}}toggleLayerVisibility(e,t=null){const r=this.activeWeatherLayers.get(e);if(!r)return console.warn(`Layer ${e} not found`),!1;try{return t===null&&(t=this.mapInstance.getLayoutProperty(r.layerId,"visibility")!=="visible"),this.mapInstance.setLayoutProperty(r.layerId,"visibility",t?"visible":"none"),console.log(`üëÅÔ∏è ${e} visibility: ${t?"visible":"hidden"}`),!0}catch(i){return console.error(`Error toggling visibility for ${e}:`,i),!1}}getWeatherStatus(){const e={initialized:this.isInitialized,activeProfile:this.activeProfile,activeLayers:Array.from(this.activeWeatherLayers.keys()),layerCount:this.activeWeatherLayers.size,profiles:Object.keys(this.weatherProfiles)};return console.log("üå§Ô∏è Weather Suite Status:",e),e}getLayerType(e){return Object.keys(this.noaaService.satelliteLayers).includes(e)?"satellite":Object.keys(this.noaaService.radarLayers).includes(e)?"radar":Object.keys(this.noaaService.lightningLayers).includes(e)?"lightning":"unknown"}async setupForRigOperations(){return console.log("üõ¢Ô∏è Setting up weather for oil rig operations..."),await this.applyWeatherProfile("rigOperations",{opacity:.7,priorityOrder:!0})}async setupForStormTracking(){return console.log("‚õàÔ∏è Setting up weather for storm tracking..."),await this.applyWeatherProfile("stormTracking",{opacity:.8,priorityOrder:!0})}}typeof window<"u"&&(window.WeatherSuiteManager=o,window.weatherSuite=new o,console.log("üå©Ô∏è Weather Suite Manager available at: window.weatherSuite"),console.log("üõ¢Ô∏è Setup for rig ops: window.weatherSuite.setupForRigOperations()"),console.log("‚õàÔ∏è Setup for storms: window.weatherSuite.setupForStormTracking()"));export{o as default};
//# sourceMappingURL=WeatherSuiteManager-ZiAd9X10.js.map

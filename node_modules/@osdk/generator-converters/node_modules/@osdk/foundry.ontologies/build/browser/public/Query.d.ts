import type { SharedClient as $OldClient, SharedClientContext as $OldClientContext } from "@osdk/shared.client";
import type { SharedClient as $Client, SharedClientContext as $ClientContext } from "@osdk/shared.client2";
import type * as _Ontologies from "../_components.js";
/**
 * Executes a Query using the given parameters.
 *
 * Optional parameters do not need to be supplied.
 *
 * Third-party applications using this endpoint via OAuth2 must request the
 * following operation scopes: `api:ontologies-read`.
 *
 * @public
 *
 * Required Scopes: [api:ontologies-read]
 * URL: /v2/ontologies/{ontology}/queries/{queryApiName}/execute
 */
export declare function execute($ctx: $Client | $ClientContext | $OldClient | $OldClientContext, ...args: [
    ontology: _Ontologies.OntologyIdentifier,
    queryApiName: _Ontologies.QueryApiName,
    $body: _Ontologies.ExecuteQueryRequest,
    $queryParams?: {
        artifactRepository?: _Ontologies.ArtifactRepositoryRid | undefined;
        packageName?: _Ontologies.SdkPackageName | undefined;
    }
]): Promise<_Ontologies.ExecuteQueryResponse>;
//# sourceMappingURL=Query.d.ts.map
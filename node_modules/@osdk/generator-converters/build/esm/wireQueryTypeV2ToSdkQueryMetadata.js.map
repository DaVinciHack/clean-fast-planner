{"version":3,"file":"wireQueryTypeV2ToSdkQueryMetadata.js","names":["wireQueryDataTypeToQueryDataTypeDefinition","wireQueryTypeV2ToSdkQueryMetadata","input","type","apiName","description","displayName","version","parameters","Object","fromEntries","entries","map","name","parameter","wireQueryParameterV2ToQueryParameterDefinition","output","rid","wireQueryTypeV2ToSdkQueryDefinitionNoParams","dataType"],"sources":["wireQueryTypeV2ToSdkQueryMetadata.ts"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { QueryMetadata, QueryParameterDefinition } from \"@osdk/api\";\nimport type { QueryParameterV2, QueryTypeV2 } from \"@osdk/foundry.ontologies\";\nimport {\n  wireQueryDataTypeToQueryDataTypeDefinition,\n} from \"./wireQueryDataTypeToQueryDataTypeDefinition.js\";\n\nexport function wireQueryTypeV2ToSdkQueryMetadata(\n  input: QueryTypeV2,\n): QueryMetadata {\n  return {\n    type: \"query\",\n    apiName: input.apiName,\n    description: input.description,\n    displayName: input.displayName,\n    version: input.version,\n    parameters: Object.fromEntries(\n      Object.entries(input.parameters).map((\n        [name, parameter],\n      ) => [name, wireQueryParameterV2ToQueryParameterDefinition(parameter)]),\n    ),\n    output: wireQueryDataTypeToQueryDataTypeDefinition(input.output),\n    rid: input.rid,\n  };\n}\n\nexport function wireQueryTypeV2ToSdkQueryDefinitionNoParams(\n  input: QueryTypeV2,\n): {\n  type: string;\n  apiName: string;\n  description: string | undefined;\n  displayName: string | undefined;\n  version: string;\n  rid: string;\n} {\n  return {\n    type: \"query\",\n    apiName: input.apiName,\n    description: input.description,\n    displayName: input.displayName,\n    version: input.version,\n    rid: input.rid,\n  };\n}\n\nexport function wireQueryParameterV2ToQueryParameterDefinition(\n  parameter: QueryParameterV2,\n): QueryParameterDefinition<any> {\n  return {\n    description: parameter.description,\n    ...wireQueryDataTypeToQueryDataTypeDefinition(parameter.dataType),\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,SACEA,0CAA0C,QACrC,iDAAiD;AAExD,OAAO,SAASC,iCAAiCA,CAC/CC,KAAkB,EACH;EACf,OAAO;IACLC,IAAI,EAAE,OAAO;IACbC,OAAO,EAAEF,KAAK,CAACE,OAAO;IACtBC,WAAW,EAAEH,KAAK,CAACG,WAAW;IAC9BC,WAAW,EAAEJ,KAAK,CAACI,WAAW;IAC9BC,OAAO,EAAEL,KAAK,CAACK,OAAO;IACtBC,UAAU,EAAEC,MAAM,CAACC,WAAW,CAC5BD,MAAM,CAACE,OAAO,CAACT,KAAK,CAACM,UAAU,CAAC,CAACI,GAAG,CAAC,CACnC,CAACC,IAAI,EAAEC,SAAS,CAAC,KACd,CAACD,IAAI,EAAEE,8CAA8C,CAACD,SAAS,CAAC,CAAC,CACxE,CAAC;IACDE,MAAM,EAAEhB,0CAA0C,CAACE,KAAK,CAACc,MAAM,CAAC;IAChEC,GAAG,EAAEf,KAAK,CAACe;EACb,CAAC;AACH;AAEA,OAAO,SAASC,2CAA2CA,CACzDhB,KAAkB,EAQlB;EACA,OAAO;IACLC,IAAI,EAAE,OAAO;IACbC,OAAO,EAAEF,KAAK,CAACE,OAAO;IACtBC,WAAW,EAAEH,KAAK,CAACG,WAAW;IAC9BC,WAAW,EAAEJ,KAAK,CAACI,WAAW;IAC9BC,OAAO,EAAEL,KAAK,CAACK,OAAO;IACtBU,GAAG,EAAEf,KAAK,CAACe;EACb,CAAC;AACH;AAEA,OAAO,SAASF,8CAA8CA,CAC5DD,SAA2B,EACI;EAC/B,OAAO;IACLT,WAAW,EAAES,SAAS,CAACT,WAAW;IAClC,GAAGL,0CAA0C,CAACc,SAAS,CAACK,QAAQ;EAClE,CAAC;AACH","ignoreList":[]}
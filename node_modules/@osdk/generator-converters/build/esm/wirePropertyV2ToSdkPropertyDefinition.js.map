{"version":3,"file":"wirePropertyV2ToSdkPropertyDefinition.js","names":["wirePropertyV2ToSdkPropertyDefinition","input","isNullable","log","sdkPropDefinition","objectPropertyTypeToSdkPropertyDefinition","dataType","undefined","type","displayName","multiplicity","description","nullable","info","JSON","stringify","propertyType","subType","itemType","structFieldTypes","reduce","structMap","structField","apiName"],"sources":["wirePropertyV2ToSdkPropertyDefinition.ts"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  BaseWirePropertyTypes,\n  ObjectMetadata,\n  WirePropertyTypes,\n} from \"@osdk/api\";\nimport type {\n  ObjectPropertyType,\n  PropertyV2,\n  SharedPropertyType,\n} from \"@osdk/foundry.ontologies\";\n\nexport function wirePropertyV2ToSdkPropertyDefinition(\n  input: (PropertyV2 | SharedPropertyType) & { nullable?: boolean },\n  isNullable: boolean = true,\n  log?: { info: (msg: string) => void },\n): ObjectMetadata.Property | undefined {\n  const sdkPropDefinition = objectPropertyTypeToSdkPropertyDefinition(\n    input.dataType,\n    log,\n  );\n  if (sdkPropDefinition == null) {\n    return undefined;\n  }\n  switch (input.dataType.type) {\n    case \"integer\":\n    case \"string\":\n    case \"byte\":\n    case \"decimal\":\n    case \"double\":\n    case \"float\":\n    case \"long\":\n    case \"short\":\n    case \"boolean\":\n    case \"date\":\n    case \"attachment\":\n    case \"mediaReference\":\n    case \"geopoint\":\n    case \"geoshape\":\n    case \"timestamp\":\n    case \"timeseries\":\n    case \"marking\":\n    case \"geotimeSeriesReference\":\n    case \"struct\":\n      return {\n        displayName: input.displayName,\n        multiplicity: false,\n        description: input.description,\n        type: sdkPropDefinition,\n        nullable: input.nullable == null ? isNullable : input.nullable,\n      };\n    case \"array\": {\n      return {\n        displayName: input.displayName,\n        multiplicity: true,\n        description: input.description,\n        type: sdkPropDefinition,\n        nullable: true,\n      };\n    }\n    case \"cipherText\":\n    case \"vector\": {\n      log?.info(\n        `${JSON.stringify(input.dataType.type)} is not a supported dataType`,\n      );\n\n      return undefined;\n    }\n    default:\n      const _: never = input.dataType;\n      log?.info(\n        `${JSON.stringify(input.dataType)} is not a supported dataType`,\n      );\n\n      return undefined;\n  }\n}\n\nfunction objectPropertyTypeToSdkPropertyDefinition(\n  propertyType: ObjectPropertyType,\n  log?: { info: (msg: string) => void },\n): WirePropertyTypes | undefined {\n  switch (propertyType.type) {\n    case \"integer\":\n    case \"string\":\n    case \"byte\":\n    case \"decimal\":\n    case \"double\":\n    case \"float\":\n    case \"long\":\n    case \"short\":\n    case \"boolean\":\n    case \"attachment\":\n    case \"geopoint\":\n    case \"geoshape\":\n    case \"timestamp\":\n    case \"marking\":\n    case \"geotimeSeriesReference\":\n    case \"mediaReference\":\n      return propertyType.type;\n    case \"date\":\n      return \"datetime\";\n    case \"array\":\n      return objectPropertyTypeToSdkPropertyDefinition(propertyType.subType);\n    case \"timeseries\":\n      if (propertyType.itemType?.type === \"string\") {\n        return \"stringTimeseries\";\n      } else if (propertyType.itemType?.type === \"double\") {\n        return \"numericTimeseries\";\n      } else return \"sensorTimeseries\";\n    case \"struct\": {\n      return propertyType.structFieldTypes.reduce(\n        (structMap: Record<string, BaseWirePropertyTypes>, structField) => {\n          structMap[structField.apiName] =\n            objectPropertyTypeToSdkPropertyDefinition(\n              structField.dataType,\n            ) as BaseWirePropertyTypes;\n          return structMap;\n        },\n        {},\n      );\n    }\n    case \"cipherText\":\n    case \"vector\": {\n      log?.info(\n        `${JSON.stringify(propertyType.type)} is not a supported propertyType`,\n      );\n\n      return undefined;\n    }\n    default: {\n      const _: never = propertyType;\n      log?.info(\n        `${JSON.stringify(propertyType)} is not a supported propertyType`,\n      );\n\n      return undefined;\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}
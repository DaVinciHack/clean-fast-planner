{"version":3,"sources":["../../src/wirePropertyV2ToSdkPropertyDefinition.ts","../../src/__UNSTABLE_wireInterfaceTypeV2ToSdkObjectDefinition.ts","../../src/getEditedEntities.ts","../../src/wireActionTypeV2ToSdkActionMetadata.ts","../../src/wirePropertyV2ToSdkPrimaryKeyTypeDefinition.ts","../../src/wireObjectTypeFullMetadataToSdkObjectMetadata.ts","../../src/isNullableQueryDataType.ts","../../src/wireQueryDataTypeToQueryDataTypeDefinition.ts","../../src/wireQueryTypeV2ToSdkQueryMetadata.ts"],"names":[],"mappings":"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","file":"index.cjs","sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function wirePropertyV2ToSdkPropertyDefinition(input, isNullable = true, log) {\n  const sdkPropDefinition = objectPropertyTypeToSdkPropertyDefinition(input.dataType, log);\n  if (sdkPropDefinition == null) {\n    return undefined;\n  }\n  switch (input.dataType.type) {\n    case \"integer\":\n    case \"string\":\n    case \"byte\":\n    case \"decimal\":\n    case \"double\":\n    case \"float\":\n    case \"long\":\n    case \"short\":\n    case \"boolean\":\n    case \"date\":\n    case \"attachment\":\n    case \"mediaReference\":\n    case \"geopoint\":\n    case \"geoshape\":\n    case \"timestamp\":\n    case \"timeseries\":\n    case \"marking\":\n    case \"geotimeSeriesReference\":\n    case \"struct\":\n      return {\n        displayName: input.displayName,\n        multiplicity: false,\n        description: input.description,\n        type: sdkPropDefinition,\n        nullable: input.nullable == null ? isNullable : input.nullable\n      };\n    case \"array\":\n      {\n        return {\n          displayName: input.displayName,\n          multiplicity: true,\n          description: input.description,\n          type: sdkPropDefinition,\n          nullable: true\n        };\n      }\n    case \"cipherText\":\n    case \"vector\":\n      {\n        log?.info(`${JSON.stringify(input.dataType.type)} is not a supported dataType`);\n        return undefined;\n      }\n    default:\n      const _ = input.dataType;\n      log?.info(`${JSON.stringify(input.dataType)} is not a supported dataType`);\n      return undefined;\n  }\n}\nfunction objectPropertyTypeToSdkPropertyDefinition(propertyType, log) {\n  switch (propertyType.type) {\n    case \"integer\":\n    case \"string\":\n    case \"byte\":\n    case \"decimal\":\n    case \"double\":\n    case \"float\":\n    case \"long\":\n    case \"short\":\n    case \"boolean\":\n    case \"attachment\":\n    case \"geopoint\":\n    case \"geoshape\":\n    case \"timestamp\":\n    case \"marking\":\n    case \"geotimeSeriesReference\":\n    case \"mediaReference\":\n      return propertyType.type;\n    case \"date\":\n      return \"datetime\";\n    case \"array\":\n      return objectPropertyTypeToSdkPropertyDefinition(propertyType.subType);\n    case \"timeseries\":\n      if (propertyType.itemType?.type === \"string\") {\n        return \"stringTimeseries\";\n      } else if (propertyType.itemType?.type === \"double\") {\n        return \"numericTimeseries\";\n      } else return \"sensorTimeseries\";\n    case \"struct\":\n      {\n        return propertyType.structFieldTypes.reduce((structMap, structField) => {\n          structMap[structField.apiName] = objectPropertyTypeToSdkPropertyDefinition(structField.dataType);\n          return structMap;\n        }, {});\n      }\n    case \"cipherText\":\n    case \"vector\":\n      {\n        log?.info(`${JSON.stringify(propertyType.type)} is not a supported propertyType`);\n        return undefined;\n      }\n    default:\n      {\n        const _ = propertyType;\n        log?.info(`${JSON.stringify(propertyType)} is not a supported propertyType`);\n        return undefined;\n      }\n  }\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { wirePropertyV2ToSdkPropertyDefinition } from \"./wirePropertyV2ToSdkPropertyDefinition.js\";\nexport function __UNSTABLE_wireInterfaceTypeV2ToSdkObjectDefinition(interfaceType, v2, log) {\n  return {\n    type: \"interface\",\n    rid: interfaceType.rid,\n    apiName: interfaceType.apiName,\n    displayName: interfaceType.displayName,\n    description: interfaceType.description,\n    implements: interfaceType.allExtendsInterfaces ?? interfaceType.extendsInterfaces,\n    properties: Object.fromEntries(Object.entries(interfaceType.allProperties ?? interfaceType.properties).map(([key, value]) => {\n      return [key, wirePropertyV2ToSdkPropertyDefinition(value, true, log)];\n    }).filter(([key, value]) => value != null)),\n    links: {},\n    implementedBy: interfaceType.implementedByObjectTypes\n  };\n}","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function getModifiedEntityTypes(action) {\n  const addedObjects = new Set();\n  const modifiedObjects = new Set();\n  for (const operation of action.operations) {\n    switch (operation.type) {\n      case \"createObject\":\n        addedObjects.add(operation.objectTypeApiName);\n        break;\n      case \"modifyObject\":\n        modifiedObjects.add(operation.objectTypeApiName);\n        break;\n      case \"deleteObject\":\n      case \"createLink\":\n      case \"deleteLink\":\n      case \"createInterfaceObject\":\n      case \"modifyInterfaceObject\":\n      case \"deleteInterfaceObject\":\n        break;\n      default:\n        const _ = operation;\n    }\n  }\n  return {\n    addedObjects,\n    modifiedObjects\n  };\n}","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModifiedEntityTypes } from \"./getEditedEntities.js\";\nexport function wireActionTypeV2ToSdkActionMetadata(input) {\n  const modifiedEntityTypes = getModifiedEntityTypes(input);\n  return {\n    type: \"action\",\n    apiName: input.apiName,\n    parameters: Object.fromEntries(Object.entries(input.parameters).map(([key, value]) => [key, wireActionParameterV2ToSdkParameterDefinition(value)])),\n    displayName: input.displayName,\n    description: input.description,\n    modifiedEntities: createModifiedEntities(modifiedEntityTypes.addedObjects, modifiedEntityTypes.modifiedObjects),\n    rid: input.rid,\n    status: input.status\n  };\n}\nfunction wireActionParameterV2ToSdkParameterDefinition(value) {\n  return {\n    multiplicity: value.dataType.type === \"array\",\n    type: actionPropertyToSdkPropertyDefinition(value.dataType.type === \"array\" ? value.dataType.subType : value.dataType),\n    nullable: !value.required,\n    description: value.description\n  };\n}\nfunction actionPropertyToSdkPropertyDefinition(parameterType) {\n  switch (parameterType.type) {\n    case \"string\":\n    case \"boolean\":\n    case \"attachment\":\n    case \"double\":\n    case \"integer\":\n    case \"long\":\n    case \"timestamp\":\n    case \"mediaReference\":\n    case \"marking\":\n    case \"objectType\":\n    case \"geohash\":\n    case \"geoshape\":\n      return parameterType.type;\n    case \"date\":\n      return \"datetime\";\n    case \"objectSet\":\n      return {\n        type: \"objectSet\",\n        objectSet: parameterType.objectTypeApiName\n      };\n    case \"object\":\n      return {\n        type: \"object\",\n        object: parameterType.objectTypeApiName\n      };\n    case \"array\":\n      return actionPropertyToSdkPropertyDefinition(parameterType.subType);\n    case \"interfaceObject\":\n      return {\n        type: \"interface\",\n        interface: parameterType.interfaceTypeApiName\n      };\n    case \"struct\":\n      return {\n        type: \"struct\",\n        struct: parameterType.fields.reduce((structMap, structField) => {\n          structMap[structField.name] = actionPropertyToSdkPropertyDefinition(structField.fieldType);\n          return structMap;\n        }, {})\n      };\n    default:\n      throw new Error(`Unsupported action parameter type: ${JSON.stringify(parameterType)}`);\n  }\n}\nfunction createModifiedEntities(addedObjects, modifiedObjects) {\n  const entities = {};\n  for (const key of addedObjects) {\n    entities[key] = {\n      created: true,\n      modified: false\n    };\n  }\n  for (const key of modifiedObjects) {\n    if (entities[key]) {\n      entities[key].modified = true;\n    } else {\n      entities[key] = {\n        created: false,\n        modified: true\n      };\n    }\n  }\n  return entities;\n}","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function wirePropertyV2ToSdkPrimaryKeyTypeDefinition(input) {\n  switch (input.dataType.type) {\n    case \"integer\":\n    case \"double\":\n    case \"string\":\n    case \"byte\":\n    case \"long\":\n    case \"short\":\n    case \"timestamp\":\n      {\n        return input.dataType.type;\n      }\n    case \"date\":\n      {\n        return \"datetime\";\n      }\n    case \"boolean\":\n    case \"geopoint\":\n    case \"geoshape\":\n    case \"decimal\":\n    case \"attachment\":\n    case \"timeseries\":\n    case \"array\":\n    case \"marking\":\n    case \"float\":\n    case \"geotimeSeriesReference\":\n    case \"mediaReference\":\n    case \"struct\":\n    case \"cipherText\":\n    case \"vector\":\n      throw new Error(`Primary key of type ${input.dataType.type} is not supported`);\n    default:\n      const _ = input.dataType;\n      throw new Error(`Unknown type encountered for primaryKey: ${input.dataType}`);\n  }\n}","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { wirePropertyV2ToSdkPrimaryKeyTypeDefinition } from \"./wirePropertyV2ToSdkPrimaryKeyTypeDefinition.js\";\nimport { wirePropertyV2ToSdkPropertyDefinition } from \"./wirePropertyV2ToSdkPropertyDefinition.js\";\nexport function wireObjectTypeFullMetadataToSdkObjectMetadata(objectTypeWithLink, v2, log) {\n  if (objectTypeWithLink.objectType.properties[objectTypeWithLink.objectType.primaryKey] === undefined) {\n    throw new Error(`Primary key ${objectTypeWithLink.objectType.primaryKey} not found in ${objectTypeWithLink.objectType.apiName}`);\n  }\n\n  // saved ontology.json files may not have this implementsInterfaces2 so we need to handle\n  if (objectTypeWithLink.implementsInterfaces2 == null && objectTypeWithLink.implementsInterfaces != null) {\n    throw new Error(\"Your ontology.json file is missing the implementsInterfaces2 field. Please regenerate it.\");\n  }\n  const interfaceMap = objectTypeWithLink.implementsInterfaces2 ? Object.fromEntries(Object.entries(objectTypeWithLink.implementsInterfaces2).map(([interfaceApiName, impl]) => [interfaceApiName, impl.properties])) : {};\n  return {\n    type: \"object\",\n    apiName: objectTypeWithLink.objectType.apiName,\n    description: objectTypeWithLink.objectType.description,\n    primaryKeyApiName: objectTypeWithLink.objectType.primaryKey,\n    primaryKeyType: wirePropertyV2ToSdkPrimaryKeyTypeDefinition(objectTypeWithLink.objectType.properties[objectTypeWithLink.objectType.primaryKey]),\n    links: Object.fromEntries(objectTypeWithLink.linkTypes.map(linkType => {\n      return [linkType.apiName, {\n        multiplicity: linkType.cardinality === \"MANY\",\n        targetType: linkType.objectTypeApiName\n      }];\n    })),\n    properties: Object.fromEntries(Object.entries(objectTypeWithLink.objectType.properties).map(([key, value]) => [key, wirePropertyV2ToSdkPropertyDefinition(value, !(v2 && objectTypeWithLink.objectType.primaryKey === key), log)]).filter(([key, value]) => value != null)),\n    implements: objectTypeWithLink.implementsInterfaces,\n    interfaceMap,\n    inverseInterfaceMap: Object.fromEntries(Object.entries(interfaceMap).map(([interfaceApiName, props]) => [interfaceApiName, invertProps(props)])),\n    icon: supportedIconTypes.includes(objectTypeWithLink.objectType.icon.type) ? objectTypeWithLink.objectType.icon : undefined,\n    titleProperty: objectTypeWithLink.objectType.titleProperty,\n    displayName: objectTypeWithLink.objectType.displayName,\n    pluralDisplayName: objectTypeWithLink.objectType.pluralDisplayName,\n    status: objectTypeWithLink.objectType.status,\n    rid: objectTypeWithLink.objectType.rid,\n    visibility: objectTypeWithLink.objectType.visibility\n  };\n}\nfunction invertProps(a) {\n  return a ? Object.fromEntries(Object.entries(a).map(([k, v]) => [v, k])) : undefined;\n}\nconst supportedIconTypes = [\"blueprint\"];","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function isNullableQueryDataType(input) {\n  if (input.type === \"null\") {\n    return true;\n  }\n  if (input.type === \"union\") {\n    return input.unionTypes.some(t => isNullableQueryDataType(t));\n  }\n  return false;\n}","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNullableQueryDataType } from \"./isNullableQueryDataType.js\";\nexport function wireQueryDataTypeToQueryDataTypeDefinition(input) {\n  switch (input.type) {\n    case \"double\":\n    case \"float\":\n    case \"integer\":\n    case \"long\":\n    case \"attachment\":\n    case \"boolean\":\n    case \"date\":\n    case \"string\":\n    case \"timestamp\":\n      return {\n        type: input.type,\n        nullable: false\n      };\n    case \"object\":\n      return {\n        type: \"object\",\n        object: input.objectTypeApiName,\n        nullable: false\n      };\n    case \"objectSet\":\n      return {\n        type: \"objectSet\",\n        objectSet: input.objectTypeApiName,\n        nullable: false\n      };\n    case \"array\":\n      return {\n        ...wireQueryDataTypeToQueryDataTypeDefinition(input.subType),\n        multiplicity: true\n      };\n    case \"set\":\n      return {\n        type: \"set\",\n        set: wireQueryDataTypeToQueryDataTypeDefinition(input.subType),\n        nullable: false\n      };\n    case \"union\":\n      const allowNulls = isNullableQueryDataType(input);\n\n      // special case for a union where one half is nullable to skip the union step and just allow nulls directly\n      if (allowNulls && input.unionTypes.length === 2) {\n        const nonNull = input.unionTypes.find(t => t.type != null);\n        if (nonNull) {\n          return {\n            ...wireQueryDataTypeToQueryDataTypeDefinition(nonNull),\n            nullable: true\n          };\n        }\n      }\n      return {\n        type: \"union\",\n        union: input.unionTypes.reduce((acc, t) => {\n          if (t.type === \"null\") {\n            return acc;\n          }\n          acc.push(wireQueryDataTypeToQueryDataTypeDefinition(t));\n          return acc;\n        }, []),\n        nullable: allowNulls\n      };\n    case \"struct\":\n      return {\n        type: \"struct\",\n        struct: Object.fromEntries(input.fields.map(f => [f.name, wireQueryDataTypeToQueryDataTypeDefinition(f.fieldType)])),\n        nullable: false\n      };\n    case \"twoDimensionalAggregation\":\n      return {\n        type: \"twoDimensionalAggregation\",\n        twoDimensionalAggregation: get2DQueryAggregationProps(input),\n        nullable: false\n      };\n    case \"threeDimensionalAggregation\":\n      return {\n        type: \"threeDimensionalAggregation\",\n        threeDimensionalAggregation: get3DQueryAggregationProps(input),\n        nullable: false\n      };\n    case \"entrySet\":\n      const keyType = wireQueryDataTypeToQueryDataTypeDefinition(input.keyType);\n      if (!validMapKeyTypes.includes(keyType.type)) {\n        throw new Error(\"Map types with a key type of \" + keyType.type + \" are not supported\" + validMapKeyTypes.toString());\n      }\n      if (keyType.multiplicity === true) {\n        throw new Error(\"Map types cannot have keys as arrays\");\n      }\n      return {\n        type: \"map\",\n        nullable: false,\n        keyType,\n        valueType: wireQueryDataTypeToQueryDataTypeDefinition(input.valueType)\n      };\n    case \"null\":\n    case \"unsupported\":\n      throw new Error(`Unable to process query because the server indicated an unsupported QueryDataType.type: ${input.type}. Please check that your query is using supported types.`);\n    default:\n      const _ = input;\n      throw new Error(`Unsupported QueryDataType.type ${input.type}`);\n  }\n}\nfunction get2DQueryAggregationProps(input) {\n  if (input.keyType.type === \"range\") {\n    return {\n      keyType: input.keyType.type,\n      keySubtype: input.keyType.subType.type,\n      valueType: input.valueType.type\n    };\n  } else {\n    if (guardInvalidKeyTypes(input.keyType)) {\n      return {\n        keyType: input.keyType.type,\n        valueType: input.valueType.type\n      };\n    }\n    throw new Error(`Cannot create 2D aggregation with ${input.keyType.type} as its type`);\n  }\n}\nfunction get3DQueryAggregationProps(input) {\n  if (input.keyType.type === \"range\") {\n    return {\n      keyType: input.keyType.type,\n      keySubtype: input.keyType.subType.type,\n      valueType: get2DQueryAggregationProps(input.valueType)\n    };\n  } else {\n    if (guardInvalidKeyTypes(input.keyType)) {\n      return {\n        keyType: input.keyType.type,\n        valueType: get2DQueryAggregationProps(input.valueType)\n      };\n    }\n    throw new Error(`Cannot create 3D aggregation with ${input.keyType.type} as its type`);\n  }\n}\n\n/**\n * Guard against aggregation key types that are allowed by the backend types but are illegal to actually use\n */\nfunction guardInvalidKeyTypes(key) {\n  return key.type === \"string\" || key.type === \"boolean\";\n}\n\n/**\n * The set of all valid key types for maps. This includes all types that are represented by strings or numbers in the OSDK, and  Ontology Objects.\n */\nconst validMapKeyTypes = [\"string\", \"object\", \"double\", \"float\", \"integer\", \"long\", \"date\", \"timestamp\", \"byte\", \"datetime\", \"decimal\", \"marking\", \"short\", \"objectType\"];","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { wireQueryDataTypeToQueryDataTypeDefinition } from \"./wireQueryDataTypeToQueryDataTypeDefinition.js\";\nexport function wireQueryTypeV2ToSdkQueryMetadata(input) {\n  return {\n    type: \"query\",\n    apiName: input.apiName,\n    description: input.description,\n    displayName: input.displayName,\n    version: input.version,\n    parameters: Object.fromEntries(Object.entries(input.parameters).map(([name, parameter]) => [name, wireQueryParameterV2ToQueryParameterDefinition(parameter)])),\n    output: wireQueryDataTypeToQueryDataTypeDefinition(input.output),\n    rid: input.rid\n  };\n}\nexport function wireQueryTypeV2ToSdkQueryDefinitionNoParams(input) {\n  return {\n    type: \"query\",\n    apiName: input.apiName,\n    description: input.description,\n    displayName: input.displayName,\n    version: input.version,\n    rid: input.rid\n  };\n}\nexport function wireQueryParameterV2ToQueryParameterDefinition(parameter) {\n  return {\n    description: parameter.description,\n    ...wireQueryDataTypeToQueryDataTypeDefinition(parameter.dataType)\n  };\n}"]}
{"version":3,"file":"createFetchOrThrow.js","names":["PalantirApiError","UnknownError","createFetchOrThrow","fetchFn","fetch","url","requestInit","response","e","convertError","ok","fallbackMessage","status","statusText","headers","get","unknownError","text","Error","body","json","undefined","message","errorName","errorCode","errorInstanceId","parameters","msgIfNotError","statusCode","originalError"],"sources":["createFetchOrThrow.ts"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PalantirApiError, UnknownError } from \"@osdk/shared.net.errors\";\n\n/**\n * Wraps a fetch plugin so that all errors (including when statusCode is not in the 200s) are converted to either PalantirApiError or UnknownError.\n *\n * If the returned promise does not have an error state, you are free to immediately call `.json()` or equivalent.\n *\n * @param fetchFn\n * @returns\n */\nexport function createFetchOrThrow(fetchFn: typeof fetch = fetch) {\n  return async function fetchOrThrow(\n    url: RequestInfo | URL,\n    requestInit?: RequestInit,\n  ): Promise<Response> {\n    let response;\n\n    try {\n      response = await fetchFn(url, requestInit);\n    } catch (e) {\n      throw convertError(e, \"A network error occurred\");\n    }\n\n    if (!response.ok) {\n      const fallbackMessage =\n        `Failed to fetch ${response.status} ${response.statusText}`;\n\n      if (response.headers.get(\"Content-Type\") === \"text/plain\") {\n        throw unknownError(await response.text(), response.status);\n      }\n\n      if (response.headers.get(\"Content-Type\") === \"text/html\") {\n        throw unknownError(\n          fallbackMessage,\n          response.status,\n          new Error(\"Received HTML error page: \" + await response.text()),\n        );\n      }\n\n      let body;\n      try {\n        body = await response.json();\n      } catch (e) {\n        throw unknownError(\n          fallbackMessage,\n          response.status,\n          e instanceof Error ? e : undefined,\n        );\n      }\n\n      throw new PalantirApiError(\n        body?.message\n          ?? fallbackMessage,\n        body?.errorName,\n        body?.errorCode,\n        response.status,\n        body?.errorInstanceId,\n        body?.parameters,\n      );\n    }\n    return response;\n  };\n}\n\nfunction convertError(\n  e: any,\n  msgIfNotError: string = \"An unknown error occurred\",\n) {\n  if (e instanceof Error) {\n    return unknownError(e.message, undefined, e);\n  }\n  return unknownError(msgIfNotError, undefined);\n}\n\nfunction unknownError(\n  message: string,\n  statusCode?: number,\n  originalError?: Error,\n) {\n  return new UnknownError(message, undefined, originalError, statusCode);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,gBAAgB,EAAEC,YAAY,QAAQ,yBAAyB;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,kBAAkBA,CAACC,OAAqB,GAAGC,KAAK,EAAE;EAChE,OAAO,gBACLC,GAAsB,EACtBC,WAAyB,EACN;IACnB,IAAIC,QAAQ;IAEZ,IAAI;MACFA,QAAQ,GAAG,MAAMJ,OAAO,CAACE,GAAG,EAAEC,WAAW,CAAC;IAC5C,CAAC,CAAC,OAAOE,CAAC,EAAE;MACV,MAAMC,YAAY,CAACD,CAAC,EAAE,0BAA0B,CAAC;IACnD;IAEA,IAAI,CAACD,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAMC,eAAe,GACnB,mBAAmBJ,QAAQ,CAACK,MAAM,IAAIL,QAAQ,CAACM,UAAU,EAAE;MAE7D,IAAIN,QAAQ,CAACO,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,KAAK,YAAY,EAAE;QACzD,MAAMC,YAAY,CAAC,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC,EAAEV,QAAQ,CAACK,MAAM,CAAC;MAC5D;MAEA,IAAIL,QAAQ,CAACO,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,KAAK,WAAW,EAAE;QACxD,MAAMC,YAAY,CAChBL,eAAe,EACfJ,QAAQ,CAACK,MAAM,EACf,IAAIM,KAAK,CAAC,4BAA4B,IAAG,MAAMX,QAAQ,CAACU,IAAI,CAAC,CAAC,EAChE,CAAC;MACH;MAEA,IAAIE,IAAI;MACR,IAAI;QACFA,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAOZ,CAAC,EAAE;QACV,MAAMQ,YAAY,CAChBL,eAAe,EACfJ,QAAQ,CAACK,MAAM,EACfJ,CAAC,YAAYU,KAAK,GAAGV,CAAC,GAAGa,SAC3B,CAAC;MACH;MAEA,MAAM,IAAIrB,gBAAgB,CACxBmB,IAAI,EAAEG,OAAO,IACRX,eAAe,EACpBQ,IAAI,EAAEI,SAAS,EACfJ,IAAI,EAAEK,SAAS,EACfjB,QAAQ,CAACK,MAAM,EACfO,IAAI,EAAEM,eAAe,EACrBN,IAAI,EAAEO,UACR,CAAC;IACH;IACA,OAAOnB,QAAQ;EACjB,CAAC;AACH;AAEA,SAASE,YAAYA,CACnBD,CAAM,EACNmB,aAAqB,GAAG,2BAA2B,EACnD;EACA,IAAInB,CAAC,YAAYU,KAAK,EAAE;IACtB,OAAOF,YAAY,CAACR,CAAC,CAACc,OAAO,EAAED,SAAS,EAAEb,CAAC,CAAC;EAC9C;EACA,OAAOQ,YAAY,CAACW,aAAa,EAAEN,SAAS,CAAC;AAC/C;AAEA,SAASL,YAAYA,CACnBM,OAAe,EACfM,UAAmB,EACnBC,aAAqB,EACrB;EACA,OAAO,IAAI5B,YAAY,CAACqB,OAAO,EAAED,SAAS,EAAEQ,aAAa,EAAED,UAAU,CAAC;AACxE","ignoreList":[]}
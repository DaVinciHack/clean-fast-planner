{"version":3,"sources":["../../src/createFetchHeaderMutator.ts","../../src/createFetchOrThrow.ts","../../src/createRetryingFetch.ts"],"names":["PalantirApiError","UnknownError","fetch","fetchRetry"],"mappings":"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","file":"index.cjs","sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function createFetchHeaderMutator(fetchFn = fetch, mutator) {\n  return async function headerMutatedFetch(url, requestInit) {\n    if (!requestInit) {\n      return fetchFn(url, {\n        headers: await mutator(new Headers())\n      });\n    }\n    return fetchFn(url, {\n      ...requestInit,\n      headers: await mutator(new Headers(requestInit.headers))\n    });\n  };\n}","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PalantirApiError, UnknownError } from \"@osdk/shared.net.errors\";\n\n/**\n * Wraps a fetch plugin so that all errors (including when statusCode is not in the 200s) are converted to either PalantirApiError or UnknownError.\n *\n * If the returned promise does not have an error state, you are free to immediately call `.json()` or equivalent.\n *\n * @param fetchFn\n * @returns\n */\nexport function createFetchOrThrow(fetchFn = fetch) {\n  return async function fetchOrThrow(url, requestInit) {\n    let response;\n    try {\n      response = await fetchFn(url, requestInit);\n    } catch (e) {\n      throw convertError(e, \"A network error occurred\");\n    }\n    if (!response.ok) {\n      const fallbackMessage = `Failed to fetch ${response.status} ${response.statusText}`;\n      if (response.headers.get(\"Content-Type\") === \"text/plain\") {\n        throw unknownError(await response.text(), response.status);\n      }\n      if (response.headers.get(\"Content-Type\") === \"text/html\") {\n        throw unknownError(fallbackMessage, response.status, new Error(\"Received HTML error page: \" + (await response.text())));\n      }\n      let body;\n      try {\n        body = await response.json();\n      } catch (e) {\n        throw unknownError(fallbackMessage, response.status, e instanceof Error ? e : undefined);\n      }\n      throw new PalantirApiError(body?.message ?? fallbackMessage, body?.errorName, body?.errorCode, response.status, body?.errorInstanceId, body?.parameters);\n    }\n    return response;\n  };\n}\nfunction convertError(e, msgIfNotError = \"An unknown error occurred\") {\n  if (e instanceof Error) {\n    return unknownError(e.message, undefined, e);\n  }\n  return unknownError(msgIfNotError, undefined);\n}\nfunction unknownError(message, statusCode, originalError) {\n  return new UnknownError(message, undefined, originalError, statusCode);\n}","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PalantirApiError } from \"@osdk/shared.net.errors\";\nimport fetchRetry from \"fetch-retry\";\nconst INITIAL_DELAY = 1_000;\nconst JITTER_FACTOR = 0.5;\nconst MAX_RETRIES = 3;\nexport function createRetryingFetch(fetch) {\n  return fetchRetry(fetch, {\n    retryDelay(attempt) {\n      const delay = INITIAL_DELAY * 2 ** attempt;\n      const jitter = delay * JITTER_FACTOR * (Math.random() * 2 - 1);\n      return delay + jitter;\n    },\n    retryOn(attempt, error, response) {\n      const status = response?.status ?? 0;\n      return !(status >= 200 && status < 300) && isRetryable(error) && attempt < MAX_RETRIES;\n    }\n  });\n}\nfunction isRetryable(e) {\n  if (e instanceof PalantirApiError) {\n    if (e.statusCode !== SERVICE_UNAVAILABLE && e.statusCode !== TOO_MANY_REQUESTS) {\n      return false;\n    }\n  }\n  return true; // I think this logic is flawed?\n}\nconst SERVICE_UNAVAILABLE = 503;\nconst TOO_MANY_REQUESTS = 429;"]}
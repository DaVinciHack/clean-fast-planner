{"version":3,"file":"createClient.js","names":["__EXPERIMENTAL__NOT_SUPPORTED_YET__createMediaReference","__EXPERIMENTAL__NOT_SUPPORTED_YET__fetchOneByRid","__EXPERIMENTAL__NOT_SUPPORTED_YET__fetchPageByRid","__EXPERIMENTAL__NOT_SUPPORTED_YET__getBulkLinks","OntologiesV2","symbolClientContext","oldSymbolClientContext","createBulkLinksAsyncIterFactory","applyAction","additionalContext","createMinimalClient","fetchMetadataInternal","MinimalLogger","fetchPage","fetchSingle","createObjectSet","applyQuery","ActionInvoker","constructor","clientCtx","actionDef","bind","undefined","batchApplyAction","QueryInvoker","queryDef","executeFunction","createClientInternal","objectSetFactory","baseUrl","ontologyRid","tokenProvider","options","fetchFn","fetch","startsWith","Error","then","logger","fetchMetadata","client","Object","defineProperties","o","type","name","getBulkLinks","fetchOneByRid","objectType","rid","createWithRid","createMediaReference","args","data","fileName","propertyType","MediaReferenceProperties","upload","apiName","mediaItemPath","preview","fetchPageByRid","objectOrInterfaceType","rids","value","createClient"],"sources":["createClient.ts"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  ActionDefinition,\n  FetchPageArgs,\n  FilteredPropertyKeys,\n  InterfaceDefinition,\n  NullabilityAdherence,\n  ObjectOrInterfaceDefinition,\n  ObjectSet,\n  ObjectTypeDefinition,\n  Osdk,\n  PropertyKeys,\n  QueryDefinition,\n  SelectArg,\n} from \"@osdk/api\";\nimport type {\n  Experiment,\n  ExperimentFns,\n  MinimalObjectSet,\n} from \"@osdk/api/unstable\";\nimport {\n  __EXPERIMENTAL__NOT_SUPPORTED_YET__createMediaReference,\n  __EXPERIMENTAL__NOT_SUPPORTED_YET__fetchOneByRid,\n  __EXPERIMENTAL__NOT_SUPPORTED_YET__fetchPageByRid,\n  __EXPERIMENTAL__NOT_SUPPORTED_YET__getBulkLinks,\n} from \"@osdk/api/unstable\";\nimport type { ObjectSet as WireObjectSet } from \"@osdk/foundry.ontologies\";\nimport * as OntologiesV2 from \"@osdk/foundry.ontologies\";\nimport { symbolClientContext as oldSymbolClientContext } from \"@osdk/shared.client\";\nimport { createBulkLinksAsyncIterFactory } from \"./__unstable/createBulkLinksAsyncIterFactory.js\";\nimport type { ActionSignatureFromDef } from \"./actions/applyAction.js\";\nimport { applyAction } from \"./actions/applyAction.js\";\nimport { additionalContext, type Client } from \"./Client.js\";\nimport { createMinimalClient } from \"./createMinimalClient.js\";\nimport { fetchMetadataInternal } from \"./fetchMetadata.js\";\nimport { type Logger } from \"./logger/Logger.js\";\nimport { MinimalLogger } from \"./logger/MinimalLogger.js\";\nimport type { MinimalClient } from \"./MinimalClientContext.js\";\nimport { fetchPage } from \"./object/fetchPage.js\";\nimport { fetchSingle } from \"./object/fetchSingle.js\";\nimport { createObjectSet } from \"./objectSet/createObjectSet.js\";\nimport type { ObjectSetFactory } from \"./objectSet/ObjectSetFactory.js\";\nimport { applyQuery } from \"./queries/applyQuery.js\";\nimport type { QuerySignatureFromDef } from \"./queries/types.js\";\n\n// We import it this way to keep compatible with CJS. If we referenced the\n// value of `symbolClientContext` directly, then we would have to a dynamic import\n// in `createClientInternal` which would make it async and a break.\n// Since this is just a string in `@osdk/shared.client2` instead of a symbol,\n// we can safely perform this trick.\ntype newSymbolClientContext =\n  // eslint-disable-next-line @typescript-eslint/consistent-type-imports\n  typeof import(\"@osdk/shared.client2\").symbolClientContext;\n\nclass ActionInvoker<Q extends ActionDefinition<any>>\n  implements ActionSignatureFromDef<Q>\n{\n  constructor(\n    clientCtx: MinimalClient,\n    actionDef: ActionDefinition<any>,\n  ) {\n    // We type the property as a generic function as binding `applyAction`\n    // doesn't return a type thats all that useful anyway\n    // The implements covers us for the most part here as this exact type doesn't\n    // escape this file\n    this.applyAction = applyAction.bind(undefined, clientCtx, actionDef);\n    this.batchApplyAction = applyAction.bind(undefined, clientCtx, actionDef);\n  }\n\n  applyAction: (...args: any[]) => any;\n  batchApplyAction: (...args: any[]) => any;\n}\n\nclass QueryInvoker<Q extends QueryDefinition<any>>\n  implements QuerySignatureFromDef<Q>\n{\n  constructor(\n    clientCtx: MinimalClient,\n    queryDef: QueryDefinition<any>,\n  ) {\n    this.executeFunction = applyQuery.bind(undefined, clientCtx, queryDef);\n  }\n\n  executeFunction: (...args: any[]) => any;\n}\n\n/** @internal */\nexport function createClientInternal(\n  objectSetFactory: ObjectSetFactory<any, any>, // first so i can bind\n  baseUrl: string,\n  ontologyRid: string | Promise<string>,\n  tokenProvider: () => Promise<string>,\n  options: { logger?: Logger } | undefined = undefined,\n  fetchFn: typeof globalThis.fetch = fetch,\n): Client {\n  if (typeof ontologyRid === \"string\") {\n    if (!ontologyRid.startsWith(\"ri.\")) {\n      throw new Error(\"Invalid ontology RID\");\n    }\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ontologyRid.then((ontologyRid) => {\n      if (!ontologyRid.startsWith(\"ri.\")) {\n        // FIXME this promise is not await so this just shows up as an unhandled promise rejection\n        throw new Error(\"Invalid ontology RID\");\n      }\n    });\n  }\n\n  const clientCtx: MinimalClient = createMinimalClient(\n    { ontologyRid },\n    baseUrl,\n    tokenProvider,\n    { ...options, logger: options?.logger ?? new MinimalLogger() },\n    fetchFn,\n    objectSetFactory,\n  );\n\n  function clientFn<\n    T extends\n      | ObjectOrInterfaceDefinition\n      | ActionDefinition<any>\n      | QueryDefinition<any>\n      | Experiment<\"2.0.8\">\n      | Experiment<\"2.1.0\">,\n  >(o: T): T extends ObjectTypeDefinition ? ObjectSet<T>\n    : T extends InterfaceDefinition ? MinimalObjectSet<T>\n    : T extends ActionDefinition<any> ? ActionSignatureFromDef<T>\n    : T extends QueryDefinition<any> ? QuerySignatureFromDef<T>\n    : T extends Experiment<\"2.0.8\"> | Experiment<\"2.1.0\">\n      ? { invoke: ExperimentFns<T> }\n    : never\n  {\n    if (o.type === \"object\" || o.type === \"interface\") {\n      return objectSetFactory(o, clientCtx) as any;\n    } else if (o.type === \"action\") {\n      return new ActionInvoker(\n        clientCtx,\n        o,\n      ) as (T extends ActionDefinition<any>\n        // first `as` to the action definition for our \"real\" typecheck\n        ? ActionSignatureFromDef<T>\n        : never) as any; // then as any for dealing with the conditional return value\n    } else if (o.type === \"query\") {\n      return new QueryInvoker(\n        clientCtx,\n        o,\n      ) as (T extends QueryDefinition<any> ? QuerySignatureFromDef<T>\n        : never) as any;\n    } else if (o.type === \"experiment\") {\n      switch (o.name) {\n        case __EXPERIMENTAL__NOT_SUPPORTED_YET__getBulkLinks.name:\n          return {\n            getBulkLinks: createBulkLinksAsyncIterFactory(\n              clientCtx,\n            ),\n          } as any;\n        case __EXPERIMENTAL__NOT_SUPPORTED_YET__fetchOneByRid.name:\n          return {\n            fetchOneByRid: async <\n              Q extends ObjectTypeDefinition,\n              const L extends PropertyKeys<Q>,\n              const R extends boolean,\n              const S extends false | \"throw\" = NullabilityAdherence.Default,\n            >(\n              objectType: Q,\n              rid: string,\n              options: SelectArg<Q, L, R, S>,\n            ) => {\n              return await fetchSingle(\n                clientCtx,\n                objectType,\n                options,\n                createWithRid(\n                  [rid],\n                ),\n              ) as Osdk<Q>;\n            },\n          } as any;\n        case __EXPERIMENTAL__NOT_SUPPORTED_YET__createMediaReference.name:\n          return {\n            createMediaReference: async <\n              Q extends ObjectTypeDefinition,\n              const L extends FilteredPropertyKeys<Q, \"mediaReference\">,\n            >(args: {\n              data: Blob;\n              fileName: string;\n              objectType: Q;\n              propertyType: L;\n            }) => {\n              const { data, fileName, objectType, propertyType } = args;\n              return await OntologiesV2.MediaReferenceProperties.upload(\n                clientCtx,\n                await clientCtx.ontologyRid,\n                objectType.apiName,\n                propertyType as string,\n                data,\n                {\n                  mediaItemPath: fileName,\n                  preview: true,\n                },\n              );\n            },\n          } as any;\n\n        case __EXPERIMENTAL__NOT_SUPPORTED_YET__fetchPageByRid.name:\n          return {\n            fetchPageByRid: async <\n              Q extends ObjectOrInterfaceDefinition,\n              const L extends PropertyKeys<Q>,\n              const R extends boolean,\n              const S extends false | \"throw\" = NullabilityAdherence.Default,\n            >(\n              objectOrInterfaceType: Q,\n              rids: string[],\n              options: FetchPageArgs<Q, L, R, any, S> = {},\n            ) => {\n              return await fetchPage(\n                clientCtx,\n                objectOrInterfaceType,\n                options,\n                createWithRid(rids),\n              );\n            },\n          } as any;\n      }\n\n      throw new Error(\"not implemented\");\n    } else {\n      throw new Error(\"not implemented\");\n    }\n  }\n\n  const fetchMetadata = fetchMetadataInternal.bind(\n    undefined,\n    clientCtx,\n  );\n\n  const symbolClientContext: newSymbolClientContext = \"__osdkClientContext\";\n\n  const client: Client = Object.defineProperties<Client>(\n    clientFn as Client,\n    {\n      [oldSymbolClientContext]: {\n        value: clientCtx,\n      },\n      [symbolClientContext]: {\n        value: clientCtx,\n      },\n      [additionalContext]: {\n        value: clientCtx,\n      },\n      fetchMetadata: {\n        value: fetchMetadata,\n      },\n    } satisfies Record<keyof Client, PropertyDescriptor>,\n  );\n\n  return client;\n}\n\nexport const createClient: (\n  baseUrl: string,\n  ontologyRid: string | Promise<string>,\n  tokenProvider: () => Promise<string>,\n  options?: {\n    logger?: Logger;\n  } | undefined,\n  fetchFn?: typeof fetch | undefined,\n) => Client = createClientInternal.bind(\n  undefined,\n  createObjectSet,\n);\n\nfunction createWithRid(\n  rids: string[],\n) {\n  const withRid: WireObjectSet = {\n    type: \"static\",\n    \"objects\": rids,\n  };\n\n  return withRid;\n}\n"],"mappings":"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","ignoreList":[]}
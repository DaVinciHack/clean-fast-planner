{"version":3,"file":"toDataValue.test.js","names":["Employee","Task","LegacyFauxFoundry","startNodeApiServer","stubData","beforeAll","describe","expect","it","vi","createClient","createMinimalClient","createAttachmentUpload","getWireObjectSet","toDataValue","client","clientCtx","fn","testSetup","ontologyRid","fauxFoundry","defaultOntologyRid","baseUrl","auth","apiServer","close","basic","null","undefined","boolean","date","integer","string","timestamp","convertedBasic","toEqual","attachment","attachmentArray","attachmentSet","Set","recursiveConversion","inner","employee","employee1","ontologyConversion","__primaryKey","task","fetchOne","$primaryKey","clientObjectSet","where","id","definition","expected","objectSetConversion","toMatchInlineSnapshot","definitionConversion","blob","Blob","JSON","stringify","attachmentUpload","converted","toMatch","file","Object","assign","name","type","mediaReference","mimeType","reference","mediaSetViewItem","mediaItemRid","mediaSetRid","mediaSetViewRid"],"sources":["toDataValue.test.ts"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Employee, Task } from \"@osdk/client.test.ontology\";\nimport type { MediaReference } from \"@osdk/foundry.core\";\nimport {\n  LegacyFauxFoundry,\n  startNodeApiServer,\n  stubData,\n} from \"@osdk/shared.test\";\nimport type { MockedFunction } from \"vitest\";\nimport { beforeAll, describe, expect, it, vi } from \"vitest\";\nimport type { Client } from \"../Client.js\";\nimport { createClient } from \"../createClient.js\";\nimport { createMinimalClient } from \"../createMinimalClient.js\";\nimport type { MinimalClient } from \"../MinimalClientContext.js\";\nimport { createAttachmentUpload } from \"../object/AttachmentUpload.js\";\nimport { getWireObjectSet } from \"../objectSet/createObjectSet.js\";\nimport { toDataValue } from \"./toDataValue.js\";\n\ndescribe(toDataValue, () => {\n  let client: Client;\n  let clientCtx: MinimalClient;\n\n  const mockFetch: MockedFunction<typeof globalThis.fetch> = vi.fn();\n\n  beforeAll(() => {\n    const testSetup = startNodeApiServer(new LegacyFauxFoundry(), createClient);\n    ({ client } = testSetup);\n\n    clientCtx = createMinimalClient(\n      { ontologyRid: testSetup.fauxFoundry.defaultOntologyRid },\n      testSetup.fauxFoundry.baseUrl,\n      testSetup.auth,\n      {},\n    );\n\n    return () => {\n      testSetup.apiServer.close();\n    };\n  });\n\n  it(\"converts passthrough values correctly\", async () => {\n    // basic pass through types\n    const basic = {\n      null: undefined,\n      boolean: false,\n      date: \"2024-01-01\",\n      integer: 0,\n      string: \"string\",\n      timestamp: \"2024-01-01T00:00:00Z\",\n    };\n    const convertedBasic = await toDataValue(basic, clientCtx);\n    expect(convertedBasic).toEqual(basic);\n  });\n\n  it(\"recursively converts arrays and sets into array types\", async () => {\n    const attachment = \"rid\";\n    const attachmentArray = [attachment];\n    const attachmentSet = new Set(attachmentArray);\n\n    const recursiveConversion = await toDataValue({\n      attachment,\n      attachmentArray,\n      attachmentSet,\n    }, clientCtx);\n\n    expect(recursiveConversion).toEqual({\n      attachment: \"rid\",\n      attachmentArray: [\"rid\"],\n      attachmentSet: [\"rid\"],\n    });\n  });\n\n  it(\"recursively handles structs\", async () => {\n    const struct = {\n      inner: {\n        attachment: \"rid\",\n      },\n    };\n\n    const recursiveConversion = await toDataValue(struct, clientCtx);\n\n    expect(recursiveConversion).toEqual({\n      inner: { attachment: \"rid\" },\n    });\n  });\n\n  it(\"maps an ontology object into just its primary key\", async () => {\n    const employee = stubData.employee1;\n    const ontologyConversion = await toDataValue(employee, clientCtx);\n    expect(ontologyConversion).toEqual(\n      stubData.employee1.__primaryKey,\n    );\n  });\n\n  it(\"maps an ontology object into just its primary key with osdk wrapper\", async () => {\n    const task = await client(Employee).fetchOne(50030);\n    const ontologyConversion = await toDataValue(task, clientCtx);\n    expect(ontologyConversion).toEqual(\n      task.$primaryKey,\n    );\n  });\n\n  it(\"passes through object set definitions\", async () => {\n    const clientObjectSet = client(Task).where({ id: 0 });\n    const definition = getWireObjectSet(clientObjectSet);\n\n    const expected = `\n    {\n      \"objectSet\": {\n        \"objectType\": \"Task\",\n        \"type\": \"base\",\n      },\n      \"type\": \"filter\",\n      \"where\": {\n        \"field\": \"id\",\n        \"type\": \"eq\",\n        \"value\": 0,\n      },\n    }\n  `;\n    const objectSetConversion = await toDataValue(clientObjectSet, clientCtx);\n    expect(objectSetConversion).toMatchInlineSnapshot(\n      expected,\n    );\n\n    const definitionConversion = await toDataValue(definition, clientCtx);\n    expect(definitionConversion).toMatchInlineSnapshot(expected);\n  });\n\n  it(\"converts blob attachment uploads correctly\", async () => {\n    const blob = new Blob([JSON.stringify({ \"hi\": \"mom\" })]);\n    const attachmentUpload = createAttachmentUpload(blob, \"file1.txt\");\n    const converted = await toDataValue(attachmentUpload, clientCtx);\n\n    expect(converted).toMatch(/ri\\.attachments.main.attachment\\.[a-z0-9\\-]+/i);\n  });\n\n  it(\"converts file attachment uploads correctly\", async () => {\n    // Mimics the Web file API (https://developer.mozilla.org/en-US/docs/Web/API/File). The File constructor is only available in Node 19.2.0 and above\n    const file = Object.assign(\n      new Blob([\n        JSON.stringify({ name: \"Hello World\" }, null, 2),\n      ], {\n        type: \"application/json\",\n      }),\n      { name: \"file1.txt\" },\n    );\n\n    const converted = await toDataValue(file, clientCtx);\n    expect(converted).toMatch(/ri\\.attachments.main.attachment\\.[a-z0-9\\-]+/i);\n  });\n\n  it(\"converts media reference correctly\", async () => {\n    const mediaReference: MediaReference = {\n      mimeType: \"application/json\",\n      reference: {\n        type: \"mediaSetViewItem\",\n        mediaSetViewItem: {\n          mediaItemRid: \"media-item-rid\",\n          mediaSetRid: \"media-set-rid\",\n          mediaSetViewRid: \"media-set-view-rid\",\n        },\n      },\n    };\n\n    const converted = await toDataValue(mediaReference, clientCtx);\n    expect(converted).toEqual(mediaReference);\n  });\n});\n"],"mappings":"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","ignoreList":[]}
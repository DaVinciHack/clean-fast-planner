{"version":3,"file":"createMinimalClient.js","names":["createSharedClientContext","convertWireToOsdkObjects","convertWireToOsdkObjects2","createObjectSet","createStandardOntologyProviderFactory","USER_AGENT","createMinimalClient","metadata","baseUrl","tokenProvider","options","fetchFn","global","fetch","objectSetFactory","createOntologyProviderFactory","process","env","NODE_ENV","URL","e","hint","startsWith","Error","processedBaseUrl","pathname","endsWith","minimalClient","toString","objectFactory","objectFactory2","ontologyRid","logger","clientCacheKey","requestContext","Object","freeze","assign","ontologyProvider"],"sources":["createMinimalClient.ts"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Logger } from \"@osdk/api\";\nimport { createSharedClientContext } from \"@osdk/shared.client.impl\";\nimport type {\n  ClientCacheKey,\n  MinimalClient,\n  MinimalClientParams,\n} from \"./MinimalClientContext.js\";\nimport {\n  convertWireToOsdkObjects,\n  convertWireToOsdkObjects2,\n} from \"./object/convertWireToOsdkObjects.js\";\nimport { createObjectSet } from \"./objectSet/createObjectSet.js\";\nimport type { ObjectSetFactory } from \"./objectSet/ObjectSetFactory.js\";\nimport type { OntologyProvider } from \"./ontology/OntologyProvider.js\";\nimport {\n  createStandardOntologyProviderFactory,\n  type OntologyCachingOptions,\n} from \"./ontology/StandardOntologyProvider.js\";\nimport { USER_AGENT } from \"./util/UserAgent.js\";\n\n/** @internal */\nexport function createMinimalClient(\n  metadata: MinimalClientParams[\"metadata\"],\n  baseUrl: string,\n  tokenProvider: () => Promise<string>,\n  options: OntologyCachingOptions & { logger?: Logger } = {},\n  fetchFn: (\n    input: Request | URL | string,\n    init?: RequestInit | undefined,\n  ) => Promise<Response> = global.fetch,\n  objectSetFactory: ObjectSetFactory<any, any> = createObjectSet,\n  createOntologyProviderFactory: (\n    a: OntologyCachingOptions & { logger?: Logger },\n  ) => (minimalClient: MinimalClient) => OntologyProvider =\n    createStandardOntologyProviderFactory,\n) {\n  if (process.env.NODE_ENV !== \"production\") {\n    try {\n      new URL(baseUrl);\n    } catch (e) {\n      const hint =\n        !baseUrl.startsWith(\"http://\") || !baseUrl.startsWith(\"https://\")\n          ? \". Did you forget to add 'http://' or 'https://'?\"\n          : \"\";\n      throw new Error(`Invalid stack URL: ${baseUrl}${hint}`);\n    }\n  }\n  const processedBaseUrl = new URL(baseUrl);\n  processedBaseUrl.pathname += processedBaseUrl.pathname.endsWith(\"/\")\n    ? \"\"\n    : \"/\";\n  const minimalClient: MinimalClient = {\n    ...createSharedClientContext(\n      processedBaseUrl.toString(),\n      tokenProvider,\n      USER_AGENT,\n      fetchFn,\n    ),\n    objectSetFactory,\n    objectFactory: convertWireToOsdkObjects,\n    objectFactory2: convertWireToOsdkObjects2,\n    ontologyRid: metadata.ontologyRid,\n    logger: options.logger,\n    clientCacheKey: {} as ClientCacheKey,\n    requestContext: {},\n  } satisfies Omit<\n    MinimalClient,\n    \"ontologyProvider\"\n  > as any;\n\n  return Object.freeze(Object.assign(minimalClient, {\n    ontologyProvider: createOntologyProviderFactory(\n      options,\n    )(minimalClient),\n  }));\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASA,yBAAyB,QAAQ,0BAA0B;AAMpE,SACEC,wBAAwB,EACxBC,yBAAyB,QACpB,sCAAsC;AAC7C,SAASC,eAAe,QAAQ,gCAAgC;AAGhE,SACEC,qCAAqC,QAEhC,wCAAwC;AAC/C,SAASC,UAAU,QAAQ,qBAAqB;;AAEhD;AACA,OAAO,SAASC,mBAAmBA,CACjCC,QAAyC,EACzCC,OAAe,EACfC,aAAoC,EACpCC,OAAqD,GAAG,CAAC,CAAC,EAC1DC,OAGsB,GAAGC,MAAM,CAACC,KAAK,EACrCC,gBAA4C,GAAGX,eAAe,EAC9DY,6BAEuD,GACrDX,qCAAqC,EACvC;EACA,IAAIY,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAI;MACF,IAAIC,GAAG,CAACX,OAAO,CAAC;IAClB,CAAC,CAAC,OAAOY,CAAC,EAAE;MACV,MAAMC,IAAI,GACR,CAACb,OAAO,CAACc,UAAU,CAAC,SAAS,CAAC,IAAI,CAACd,OAAO,CAACc,UAAU,CAAC,UAAU,CAAC,GAC7D,kDAAkD,GAClD,EAAE;MACR,MAAM,IAAIC,KAAK,CAAC,sBAAsBf,OAAO,GAAGa,IAAI,EAAE,CAAC;IACzD;EACF;EACA,MAAMG,gBAAgB,GAAG,IAAIL,GAAG,CAACX,OAAO,CAAC;EACzCgB,gBAAgB,CAACC,QAAQ,IAAID,gBAAgB,CAACC,QAAQ,CAACC,QAAQ,CAAC,GAAG,CAAC,GAChE,EAAE,GACF,GAAG;EACP,MAAMC,aAA4B,GAAG;IACnC,GAAG3B,yBAAyB,CAC1BwB,gBAAgB,CAACI,QAAQ,CAAC,CAAC,EAC3BnB,aAAa,EACbJ,UAAU,EACVM,OACF,CAAC;IACDG,gBAAgB;IAChBe,aAAa,EAAE5B,wBAAwB;IACvC6B,cAAc,EAAE5B,yBAAyB;IACzC6B,WAAW,EAAExB,QAAQ,CAACwB,WAAW;IACjCC,MAAM,EAAEtB,OAAO,CAACsB,MAAM;IACtBC,cAAc,EAAE,CAAC,CAAmB;IACpCC,cAAc,EAAE,CAAC;EACnB,CAGQ;EAER,OAAOC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACE,MAAM,CAACV,aAAa,EAAE;IAChDW,gBAAgB,EAAEvB,6BAA6B,CAC7CL,OACF,CAAC,CAACiB,aAAa;EACjB,CAAC,CAAC,CAAC;AACL","ignoreList":[]}
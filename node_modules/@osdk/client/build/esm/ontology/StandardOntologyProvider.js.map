{"version":3,"file":"StandardOntologyProvider.js","names":["createAsyncClientCache","loadActionMetadata","loadFullObjectMetadata","loadInterfaceMetadata","loadQueryMetadata","InterfaceDefinitions","createStandardOntologyProviderFactory","client","makeGetter","fn","cache","key","apiName","get","ret","getObjectDefinition","objectDef","interfaceDefs","Object","fromEntries","Promise","all","implements","map","i","getInterfaceDefinition","def","handler","undefined","fullObjectDef","getQueryDefinition","r","getActionDefinition"],"sources":["StandardOntologyProvider.ts"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  ActionMetadata,\n  InterfaceMetadata,\n  ObjectOrInterfaceDefinition,\n  QueryMetadata,\n} from \"@osdk/api\";\nimport type { MinimalClient } from \"../MinimalClientContext.js\";\nimport { createAsyncClientCache } from \"../object/Cache.js\";\nimport { loadActionMetadata } from \"./loadActionMetadata.js\";\nimport { loadFullObjectMetadata } from \"./loadFullObjectMetadata.js\";\nimport { loadInterfaceMetadata } from \"./loadInterfaceMetadata.js\";\nimport { loadQueryMetadata } from \"./loadQueryMetadata.js\";\nimport {\n  type FetchedObjectTypeDefinition,\n  InterfaceDefinitions,\n  type OntologyProviderFactory,\n} from \"./OntologyProvider.js\";\n\nexport interface OntologyCachingOptions {\n}\n\nexport const createStandardOntologyProviderFactory: (\n  opts: OntologyCachingOptions,\n) => OntologyProviderFactory = (client) => {\n  return (client) => {\n    async function loadObject(\n      client: MinimalClient,\n      key: string,\n    ): Promise<FetchedObjectTypeDefinition> {\n      let objectDef = await loadFullObjectMetadata(client, key);\n\n      // ensure we have all of the interfaces loaded\n      const interfaceDefs = Object.fromEntries<\n        { def: InterfaceMetadata; handler: undefined }\n      >(\n        (await Promise.all<InterfaceMetadata>(\n          objectDef.implements?.map((i) => ret.getInterfaceDefinition(i)) ?? [],\n        )).map(i => [i.apiName, { def: i, handler: undefined }]),\n      );\n\n      const fullObjectDef = {\n        ...objectDef,\n        [InterfaceDefinitions]: interfaceDefs,\n      };\n\n      return fullObjectDef;\n    }\n\n    async function loadInterface(\n      client: MinimalClient,\n      key: string,\n    ) {\n      return loadInterfaceMetadata(client, key);\n    }\n\n    async function loadQuery(\n      client: MinimalClient,\n      key: string,\n    ) {\n      const r = await loadQueryMetadata(client, key);\n      return r;\n    }\n\n    async function loadAction(\n      client: MinimalClient,\n      key: string,\n    ) {\n      const r = await loadActionMetadata(client, key);\n      return r;\n    }\n\n    function makeGetter<\n      N extends\n        | ObjectOrInterfaceDefinition\n        | QueryMetadata\n        | ActionMetadata,\n    >(\n      fn: (\n        client: MinimalClient,\n        key: string,\n        skipCache?: boolean,\n      ) => Promise<N>,\n    ) {\n      const cache = createAsyncClientCache<string, N>((client, key) =>\n        fn(client, key, false)\n      );\n      return async (apiName: string) => {\n        return await cache.get(client, apiName);\n      };\n    }\n\n    const ret = {\n      getObjectDefinition: makeGetter(loadObject),\n      getInterfaceDefinition: makeGetter(loadInterface),\n      getQueryDefinition: makeGetter(loadQuery),\n      getActionDefinition: makeGetter(loadAction),\n    };\n    return ret;\n  };\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA,SAASA,sBAAsB,QAAQ,oBAAoB;AAC3D,SAASC,kBAAkB,QAAQ,yBAAyB;AAC5D,SAASC,sBAAsB,QAAQ,6BAA6B;AACpE,SAASC,qBAAqB,QAAQ,4BAA4B;AAClE,SAASC,iBAAiB,QAAQ,wBAAwB;AAC1D,SAEEC,oBAAoB,QAEf,uBAAuB;AAK9B,OAAO,MAAMC,qCAEe,GAAGA,CAAA,KAAY;EACzC,OAAQC,MAAM,IAAK;IA+CjB,SAASC,UAAUA,CAMjBC,EAIe,EACf;MACA,MAAMC,KAAK,GAAGV,sBAAsB,CAAY,CAACO,MAAM,EAAEI,GAAG,KAC1DF,EAAE,CAACF,MAAM,EAAEI,GAAG,EAAE,KAAK,CACvB,CAAC;MACD,OAAO,MAAOC,OAAe,IAAK;QAChC,OAAO,MAAMF,KAAK,CAACG,GAAG,CAACN,MAAM,EAAEK,OAAO,CAAC;MACzC,CAAC;IACH;IAEA,MAAME,GAAG,GAAG;MACVC,mBAAmB,EAAEP,UAAU,CAnEjC,gBACED,MAAqB,EACrBI,GAAW,EAC2B;QACtC,IAAIK,SAAS,GAAG,MAAMd,sBAAsB,CAACK,MAAM,EAAEI,GAAG,CAAC;;QAEzD;QACA,MAAMM,aAAa,GAAGC,MAAM,CAACC,WAAW,CAGtC,CAAC,MAAMC,OAAO,CAACC,GAAG,CAChBL,SAAS,CAACM,UAAU,EAAEC,GAAG,CAAEC,CAAC,IAAKV,GAAG,CAACW,sBAAsB,CAACD,CAAC,CAAC,CAAC,IAAI,EACrE,CAAC,EAAED,GAAG,CAACC,CAAC,IAAI,CAACA,CAAC,CAACZ,OAAO,EAAE;UAAEc,GAAG,EAAEF,CAAC;UAAEG,OAAO,EAAEC;QAAU,CAAC,CAAC,CACzD,CAAC;QAED,MAAMC,aAAa,GAAG;UACpB,GAAGb,SAAS;UACZ,CAACX,oBAAoB,GAAGY;QAC1B,CAAC;QAED,OAAOY,aAAa;MACtB,CA8C4C,CAAC;MAC3CJ,sBAAsB,EAAEjB,UAAU,CA7CpC,gBACED,MAAqB,EACrBI,GAAW,EACX;QACA,OAAOR,qBAAqB,CAACI,MAAM,EAAEI,GAAG,CAAC;MAC3C,CAwCkD,CAAC;MACjDmB,kBAAkB,EAAEtB,UAAU,CAvChC,gBACED,MAAqB,EACrBI,GAAW,EACX;QACA,MAAMoB,CAAC,GAAG,MAAM3B,iBAAiB,CAACG,MAAM,EAAEI,GAAG,CAAC;QAC9C,OAAOoB,CAAC;MACV,CAiC0C,CAAC;MACzCC,mBAAmB,EAAExB,UAAU,CAhCjC,gBACED,MAAqB,EACrBI,GAAW,EACX;QACA,MAAMoB,CAAC,GAAG,MAAM9B,kBAAkB,CAACM,MAAM,EAAEI,GAAG,CAAC;QAC/C,OAAOoB,CAAC;MACV,CA0B4C;IAC5C,CAAC;IACD,OAAOjB,GAAG;EACZ,CAAC;AACH,CAAC","ignoreList":[]}
{"version":3,"file":"getDollarAs.js","names":["InterfaceDefinitions","createSimpleCache","createOsdkInterface","UnderlyingOsdkObject","get$as","WeakMap","$asFactory","get","osdkObjectToInterfaceView","Map","objDef","targetMinDef","targetInterfaceApiName","apiName","interfaceMap","Error","type","def","underlying","existing","deref","osdkInterface","set","WeakRef"],"sources":["getDollarAs.ts"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ObjectOrInterfaceDefinition, OsdkBase } from \"@osdk/api\";\nimport {\n  type FetchedObjectTypeDefinition,\n  InterfaceDefinitions,\n} from \"../../ontology/OntologyProvider.js\";\nimport { createSimpleCache } from \"../SimpleCache.js\";\nimport { createOsdkInterface } from \"./createOsdkInterface.js\";\nimport type { InterfaceHolder } from \"./InterfaceHolder.js\";\nimport { UnderlyingOsdkObject } from \"./InternalSymbols.js\";\nimport type { ObjectHolder } from \"./ObjectHolder.js\";\n\n/** @internal */\nexport type DollarAsFn = <\n  Q extends FetchedObjectTypeDefinition,\n  NEW_Q extends ObjectOrInterfaceDefinition,\n>(\n  this: InterfaceHolder | ObjectHolder,\n  newDef: string | NEW_Q,\n) => OsdkBase<any>;\n\nexport const get$as: (key: FetchedObjectTypeDefinition) => DollarAsFn =\n  createSimpleCache<\n    FetchedObjectTypeDefinition,\n    DollarAsFn\n  >(new WeakMap(), $asFactory).get;\n\nconst osdkObjectToInterfaceView = createSimpleCache(\n  new WeakMap<\n    OsdkBase<any>,\n    Map<string, WeakRef<OsdkBase<any>>>\n  >(),\n  () =>\n    new Map<\n      /* interface api name */ string,\n      /* $as'd object */ WeakRef<OsdkBase<any>>\n    >(),\n);\n\nfunction $asFactory(\n  objDef: FetchedObjectTypeDefinition,\n): DollarAsFn {\n  // We use the exact same logic for both the interface rep and the underlying rep\n\n  return function $as<\n    NEW_Q extends ObjectOrInterfaceDefinition,\n  >(\n    this: OsdkBase<any> & { [UnderlyingOsdkObject]: any },\n    targetMinDef: NEW_Q | string,\n  ): OsdkBase<any> {\n    let targetInterfaceApiName: string;\n\n    if (typeof targetMinDef === \"string\") {\n      if (targetMinDef === objDef.apiName) {\n        return this[UnderlyingOsdkObject];\n      }\n\n      // this is sufficient to determine if we implement the interface\n      if (objDef.interfaceMap?.[targetMinDef] == null) {\n        throw new Error(\n          `Object does not implement interface '${targetMinDef}'.`,\n        );\n      }\n\n      targetInterfaceApiName = targetMinDef;\n    } else if (targetMinDef.apiName === objDef.apiName) {\n      return this[UnderlyingOsdkObject];\n    } else {\n      if (targetMinDef.type === \"object\") {\n        throw new Error(\n          `'${targetMinDef.apiName}' is not an interface nor is it '${objDef.apiName}', which is the object type.`,\n        );\n      }\n      targetInterfaceApiName = targetMinDef.apiName;\n    }\n\n    const def = objDef[InterfaceDefinitions][targetInterfaceApiName];\n    if (!def) {\n      throw new Error(\n        `Object does not implement interface '${targetInterfaceApiName}'.`,\n      );\n    }\n\n    const underlying = this[UnderlyingOsdkObject];\n\n    const existing = osdkObjectToInterfaceView\n      .get(underlying)\n      .get(targetInterfaceApiName)?.deref();\n    if (existing) return existing;\n\n    const osdkInterface = createOsdkInterface(underlying, def.def);\n    osdkObjectToInterfaceView.get(underlying).set(\n      targetInterfaceApiName,\n      new WeakRef(osdkInterface),\n    );\n    return osdkInterface;\n  };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAEEA,oBAAoB,QACf,oCAAoC;AAC3C,SAASC,iBAAiB,QAAQ,mBAAmB;AACrD,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,SAASC,oBAAoB,QAAQ,sBAAsB;;AAG3D;;AASA,OAAO,MAAMC,MAAwD,GACnEH,iBAAiB,CAGf,IAAII,OAAO,CAAC,CAAC,EAAEC,UAAU,CAAC,CAACC,GAAG;AAElC,MAAMC,yBAAyB,GAAGP,iBAAiB,CACjD,IAAII,OAAO,CAGT,CAAC,EACH,MACE,IAAII,GAAG,CAGL,CACN,CAAC;AAED,SAASH,UAAUA,CACjBI,MAAmC,EACvB;EACZ;;EAEA,OAAO,UAILC,YAA4B,EACb;IACf,IAAIC,sBAA8B;IAElC,IAAI,OAAOD,YAAY,KAAK,QAAQ,EAAE;MACpC,IAAIA,YAAY,KAAKD,MAAM,CAACG,OAAO,EAAE;QACnC,OAAO,IAAI,CAACV,oBAAoB,CAAC;MACnC;;MAEA;MACA,IAAIO,MAAM,CAACI,YAAY,GAAGH,YAAY,CAAC,IAAI,IAAI,EAAE;QAC/C,MAAM,IAAII,KAAK,CACb,wCAAwCJ,YAAY,IACtD,CAAC;MACH;MAEAC,sBAAsB,GAAGD,YAAY;IACvC,CAAC,MAAM,IAAIA,YAAY,CAACE,OAAO,KAAKH,MAAM,CAACG,OAAO,EAAE;MAClD,OAAO,IAAI,CAACV,oBAAoB,CAAC;IACnC,CAAC,MAAM;MACL,IAAIQ,YAAY,CAACK,IAAI,KAAK,QAAQ,EAAE;QAClC,MAAM,IAAID,KAAK,CACb,IAAIJ,YAAY,CAACE,OAAO,oCAAoCH,MAAM,CAACG,OAAO,8BAC5E,CAAC;MACH;MACAD,sBAAsB,GAAGD,YAAY,CAACE,OAAO;IAC/C;IAEA,MAAMI,GAAG,GAAGP,MAAM,CAACV,oBAAoB,CAAC,CAACY,sBAAsB,CAAC;IAChE,IAAI,CAACK,GAAG,EAAE;MACR,MAAM,IAAIF,KAAK,CACb,wCAAwCH,sBAAsB,IAChE,CAAC;IACH;IAEA,MAAMM,UAAU,GAAG,IAAI,CAACf,oBAAoB,CAAC;IAE7C,MAAMgB,QAAQ,GAAGX,yBAAyB,CACvCD,GAAG,CAACW,UAAU,CAAC,CACfX,GAAG,CAACK,sBAAsB,CAAC,EAAEQ,KAAK,CAAC,CAAC;IACvC,IAAID,QAAQ,EAAE,OAAOA,QAAQ;IAE7B,MAAME,aAAa,GAAGnB,mBAAmB,CAACgB,UAAU,EAAED,GAAG,CAACA,GAAG,CAAC;IAC9DT,yBAAyB,CAACD,GAAG,CAACW,UAAU,CAAC,CAACI,GAAG,CAC3CV,sBAAsB,EACtB,IAAIW,OAAO,CAACF,aAAa,CAC3B,CAAC;IACD,OAAOA,aAAa;EACtB,CAAC;AACH","ignoreList":[]}
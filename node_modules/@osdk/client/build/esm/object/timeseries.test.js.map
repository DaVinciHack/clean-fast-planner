{"version":3,"file":"timeseries.test.js","names":["Employee","LegacyFauxFoundry","startNodeApiServer","formatISO","sub","beforeAll","describe","expect","it","createClient","client","statusTimeseriesData","time","Date","now","value","sensorTimeseriesData","testSetup","fauxFoundry","getDefaultDataStore","registerTimeSeriesData","apiServer","close","employee","fetchOne","$primaryKey","toEqual","point","employeeStatus","getFirstPoint","getLastPoint","firstPoint","employeeSensor","lastPoint","points","getAllPoints","$before","$unit","toBeDefined","objectContaining","$after","$startTime","$endTime","pointsIter","asyncIterPoints","push"],"sources":["timeseries.test.ts"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-1.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { TimeSeriesPoint } from \"@osdk/api\";\nimport { Employee } from \"@osdk/client.test.ontology\";\nimport { LegacyFauxFoundry, startNodeApiServer } from \"@osdk/shared.test\";\nimport { formatISO, sub } from \"date-fns\";\nimport { beforeAll, describe, expect, it } from \"vitest\";\nimport type { Client } from \"../Client.js\";\nimport { createClient } from \"../createClient.js\";\n\ndescribe(\"Timeseries\", () => {\n  let client: Client;\n  const statusTimeseriesData = [\n    { time: formatISO(sub(Date.now(), { \"years\": 2 })), value: -365 },\n    { time: formatISO(sub(Date.now(), { \"months\": 2 })), value: -30 },\n    { time: formatISO(sub(Date.now(), { \"weeks\": 2 })), value: -7 },\n    { time: formatISO(sub(Date.now(), { \"days\": 2 })), value: -1 },\n  ];\n\n  const sensorTimeseriesData = [\n    { time: formatISO(sub(Date.now(), { \"years\": 3 })), value: -365 },\n    { time: formatISO(sub(Date.now(), { \"months\": 3 })), value: -30 },\n    { time: formatISO(sub(Date.now(), { \"weeks\": 3 })), value: -7 },\n    { time: formatISO(sub(Date.now(), { \"days\": 3 })), value: -1 },\n  ];\n\n  beforeAll(() => {\n    const testSetup = startNodeApiServer(\n      new LegacyFauxFoundry(),\n      createClient,\n    );\n    ({ client } = testSetup);\n\n    testSetup.fauxFoundry.getDefaultDataStore()\n      .registerTimeSeriesData(\n        \"Employee\",\n        \"50030\",\n        \"employeeStatus\",\n        statusTimeseriesData,\n      );\n\n    testSetup.fauxFoundry.getDefaultDataStore()\n      .registerTimeSeriesData(\n        \"Employee\",\n        \"50030\",\n        \"employeeSensor\",\n        sensorTimeseriesData,\n      );\n\n    return () => {\n      testSetup.apiServer.close();\n    };\n  });\n\n  it(\"get first points works\", async () => {\n    const employee = await client(Employee).fetchOne(50030);\n    expect(employee.$primaryKey).toEqual(50030);\n    const point = await employee.employeeStatus?.getFirstPoint();\n    expect(point?.time).toEqual(statusTimeseriesData[0].time);\n    expect(point?.value).toEqual(statusTimeseriesData[0].value);\n  });\n\n  it(\"get last points works\", async () => {\n    const employee = await client(Employee).fetchOne(50030);\n    expect(employee.$primaryKey).toEqual(50030);\n    const point = await employee.employeeStatus?.getLastPoint();\n    expect(point?.time).toEqual(statusTimeseriesData[3].time);\n    expect(point?.value).toEqual(statusTimeseriesData[3].value);\n  });\n\n  it(\"get last and first points works with sensor object\", async () => {\n    const employee = await client(Employee).fetchOne(50030);\n    expect(employee.$primaryKey).toEqual(50030);\n\n    const firstPoint = await employee.employeeSensor?.getFirstPoint();\n    const lastPoint = await employee.employeeSensor?.getLastPoint();\n\n    expect(firstPoint?.time).toEqual(sensorTimeseriesData[0].time);\n    expect(firstPoint?.value).toEqual(sensorTimeseriesData[0].value);\n\n    expect(lastPoint?.time).toEqual(sensorTimeseriesData[3].time);\n    expect(lastPoint?.value).toEqual(sensorTimeseriesData[3].value);\n  });\n\n  it(\"getAll points with before works\", async () => {\n    const employee = await client(Employee).fetchOne(50030);\n    expect(employee.$primaryKey).toEqual(50030);\n\n    const points = await employee.employeeStatus?.getAllPoints({\n      $before: 1,\n      $unit: \"month\",\n    });\n    expect(points).toBeDefined();\n    expect(points!).toEqual([\n      expect.objectContaining({ value: -7 }),\n      expect.objectContaining({ value: -1 }),\n    ]);\n  });\n\n  it(\"getAll points with after works\", async () => {\n    const employee = await client(Employee).fetchOne(50030);\n    expect(employee.$primaryKey).toEqual(50030);\n    const points = await employee.employeeStatus?.getAllPoints({\n      $after: 1,\n      $unit: \"month\",\n    });\n    expect(points).toBeDefined();\n    expect(points!).toEqual([\n      expect.objectContaining({ value: -365 }),\n      expect.objectContaining({ value: -30 }),\n      expect.objectContaining({ value: -7 }),\n      expect.objectContaining({ value: -1 }),\n    ]);\n  });\n\n  it(\"getAll points with absolute range works\", async () => {\n    const employee = await client(Employee).fetchOne(50030);\n    expect(employee.$primaryKey).toEqual(50030);\n    const points = await employee.employeeStatus?.getAllPoints({\n      $startTime: formatISO(sub(Date.now(), { \"months\": 3 })),\n      $endTime: formatISO(sub(Date.now(), { \"days\": 10 })),\n    });\n    expect(points).toBeDefined();\n    expect(points!).toEqual([\n      expect.objectContaining({ value: -30 }),\n      expect.objectContaining({ value: -7 }),\n    ]);\n  });\n\n  it(\"getAll points with no query works\", async () => {\n    const employee = await client(Employee).fetchOne(50030);\n    expect(employee.$primaryKey).toEqual(50030);\n    const points = await employee.employeeStatus?.getAllPoints();\n    expect(points).toBeDefined();\n    expect(points!).toEqual([\n      expect.objectContaining({ value: -365 }),\n      expect.objectContaining({ value: -30 }),\n      expect.objectContaining({ value: -7 }),\n      expect.objectContaining({ value: -1 }),\n    ]);\n  });\n\n  it(\"async iter points with absolute range works\", async () => {\n    const employee = await client(Employee).fetchOne(50030);\n    expect(employee.$primaryKey).toEqual(50030);\n    const pointsIter = employee.employeeStatus?.asyncIterPoints({\n      $startTime: formatISO(sub(Date.now(), { \"months\": 3 })),\n      $endTime: formatISO(sub(Date.now(), { \"days\": 10 })),\n    });\n\n    const points: TimeSeriesPoint<string>[] = [];\n    for await (const point of pointsIter!) {\n      points.push(point);\n    }\n    expect(points).toBeDefined();\n    expect(points!).toEqual([\n      expect.objectContaining({ value: -30 }),\n      expect.objectContaining({ value: -7 }),\n    ]);\n  });\n\n  it(\"async iter points with no query\", async () => {\n    const employee = await client(Employee).fetchOne(50030);\n    expect(employee.$primaryKey).toEqual(50030);\n    const pointsIter = employee.employeeStatus?.asyncIterPoints();\n\n    const points: TimeSeriesPoint<string>[] = [];\n    for await (const point of pointsIter!) {\n      points.push(point);\n    }\n    expect(points).toBeDefined();\n    expect(points!).toEqual([\n      expect.objectContaining({ value: -365 }),\n      expect.objectContaining({ value: -30 }),\n      expect.objectContaining({ value: -7 }),\n      expect.objectContaining({ value: -1 }),\n    ]);\n  });\n});\n"],"mappings":"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","ignoreList":[]}
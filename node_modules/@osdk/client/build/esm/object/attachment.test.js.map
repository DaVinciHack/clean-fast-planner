{"version":3,"file":"attachment.test.js","names":["objectTypeWithAllPropertyTypes","LegacyFauxFoundry","startNodeApiServer","stubData","afterAll","beforeAll","describe","expect","it","createClient","fauxFoundry","apiServer","client","attachments","registerAttachment","filename","mediaType","rid","buffer","TextEncoder","encode","JSON","stringify","name","close","result","where","id","objectWithAllPropertyTypes1","fetchPage","object1","data","attachment","toBeDefined","attachmentMetadata","fetchMetadata","toEqual","sizeBytes","attachmentContent","fetchContents","attachmentText","text","parse"],"sources":["attachment.test.ts"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectTypeWithAllPropertyTypes } from \"@osdk/client.test.ontology\";\nimport {\n  LegacyFauxFoundry,\n  startNodeApiServer,\n  stubData,\n} from \"@osdk/shared.test\";\nimport { type SetupServer } from \"@osdk/shared.test\";\nimport { afterAll, beforeAll, describe, expect, it } from \"vitest\";\nimport type { Client } from \"../Client.js\";\nimport { createClient } from \"../createClient.js\";\n\ndescribe(\"attachments\", () => {\n  let fauxFoundry: LegacyFauxFoundry;\n  let apiServer: SetupServer;\n  let client: Client;\n\n  beforeAll(async () => {\n    ({ client, apiServer, fauxFoundry } = startNodeApiServer(\n      new LegacyFauxFoundry(),\n      createClient,\n    ));\n\n    fauxFoundry.attachments.registerAttachment({\n      filename: \"file1.txt\",\n      mediaType: \"application/json\",\n      rid:\n        \"ri.attachments.main.attachment.86016861-707f-4292-b258-6a7108915a75\",\n      buffer: new TextEncoder().encode(\n        JSON.stringify({ name: \"Hello World\" }, null, 2),\n      ),\n    });\n  });\n\n  afterAll(() => {\n    apiServer.close();\n  });\n\n  it(\"reads attachment metadata successfully\", async () => {\n    const result = await client(\n      objectTypeWithAllPropertyTypes,\n    )\n      .where({ id: stubData.objectWithAllPropertyTypes1.id }).fetchPage();\n\n    const object1 = result.data[0];\n    expect(object1.attachment).toBeDefined();\n    const attachmentMetadata = await object1.attachment?.fetchMetadata();\n    expect(attachmentMetadata).toBeDefined();\n    expect(attachmentMetadata?.filename).toEqual(\"file1.txt\");\n    expect(attachmentMetadata?.mediaType).toEqual(\"application/json\");\n    expect(attachmentMetadata?.sizeBytes).toEqual(27);\n    expect(attachmentMetadata?.rid).toEqual(\n      stubData.objectWithAllPropertyTypes1.attachment.rid,\n    );\n  });\n\n  it(\"reads attachment successfully\", async () => {\n    const result = await client(objectTypeWithAllPropertyTypes)\n      .where({ id: stubData.objectWithAllPropertyTypes1.id }).fetchPage();\n\n    const object1 = result.data[0];\n    expect(object1.attachment).toBeDefined();\n    const attachmentContent = await object1?.attachment?.fetchContents();\n    const attachmentText = await attachmentContent!.text();\n    expect(JSON.parse(attachmentText)).toEqual({\n      name: \"Hello World\",\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]}
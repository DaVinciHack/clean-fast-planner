{"version":3,"file":"fetchSingle.js","names":["PalantirApiError","fetchPage","fetchSingle","client","objectType","args","objectSet","result","$pageSize","data","length","nextPageToken","fetchSingleWithErrors","value","e","Error","error"],"sources":["fetchSingle.ts"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  FetchPageArgs,\n  ObjectOrInterfaceDefinition,\n  Result,\n  SingleOsdkResult,\n} from \"@osdk/api\";\nimport type { ObjectSet } from \"@osdk/foundry.ontologies\";\nimport { PalantirApiError } from \"@osdk/shared.net.errors\";\nimport type { MinimalClient } from \"../MinimalClientContext.js\";\nimport { fetchPage } from \"./fetchPage.js\";\n\n/** @internal */\nexport async function fetchSingle<\n  Q extends ObjectOrInterfaceDefinition,\n  const A extends FetchPageArgs<Q, any, any>,\n>(\n  client: MinimalClient,\n  objectType: Q,\n  args: A,\n  objectSet: ObjectSet,\n): Promise<\n  A extends FetchPageArgs<Q, infer L, infer R, any, infer S>\n    ? SingleOsdkResult<Q, L, R, S>\n    : SingleOsdkResult<Q, any, any, any>\n> {\n  const result = await fetchPage(\n    client,\n    objectType,\n    { ...args, $pageSize: 1 },\n    objectSet,\n  );\n\n  if (result.data.length !== 1 || result.nextPageToken != null) {\n    throw new PalantirApiError(\n      `Expected a single result but got ${result.data.length} instead${\n        result.nextPageToken != null ? \" with nextPageToken set\" : \"\"\n      }`,\n    );\n  }\n\n  return result.data[0] as any;\n}\n\n/** @internal */\nexport async function fetchSingleWithErrors<\n  Q extends ObjectOrInterfaceDefinition,\n  const A extends FetchPageArgs<Q, any, any>,\n>(\n  client: MinimalClient,\n  objectType: Q,\n  args: A,\n  objectSet: ObjectSet,\n): Promise<\n  Result<\n    A extends FetchPageArgs<Q, infer L, infer R, any, infer S>\n      ? SingleOsdkResult<Q, L, R, S>\n      : SingleOsdkResult<Q, any, any, any>\n  >\n> {\n  try {\n    const result = await fetchSingle(client, objectType, args, objectSet);\n    return { value: result as any };\n  } catch (e) {\n    if (e instanceof Error) {\n      return { error: e };\n    }\n    return { error: e as Error };\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA,SAASA,gBAAgB,QAAQ,yBAAyB;AAE1D,SAASC,SAAS,QAAQ,gBAAgB;;AAE1C;AACA,OAAO,eAAeC,WAAWA,CAI/BC,MAAqB,EACrBC,UAAa,EACbC,IAAO,EACPC,SAAoB,EAKpB;EACA,MAAMC,MAAM,GAAG,MAAMN,SAAS,CAC5BE,MAAM,EACNC,UAAU,EACV;IAAE,GAAGC,IAAI;IAAEG,SAAS,EAAE;EAAE,CAAC,EACzBF,SACF,CAAC;EAED,IAAIC,MAAM,CAACE,IAAI,CAACC,MAAM,KAAK,CAAC,IAAIH,MAAM,CAACI,aAAa,IAAI,IAAI,EAAE;IAC5D,MAAM,IAAIX,gBAAgB,CACxB,oCAAoCO,MAAM,CAACE,IAAI,CAACC,MAAM,WACpDH,MAAM,CAACI,aAAa,IAAI,IAAI,GAAG,yBAAyB,GAAG,EAAE,EAEjE,CAAC;EACH;EAEA,OAAOJ,MAAM,CAACE,IAAI,CAAC,CAAC,CAAC;AACvB;;AAEA;AACA,OAAO,eAAeG,qBAAqBA,CAIzCT,MAAqB,EACrBC,UAAa,EACbC,IAAO,EACPC,SAAoB,EAOpB;EACA,IAAI;IACF,MAAMC,MAAM,GAAG,MAAML,WAAW,CAACC,MAAM,EAAEC,UAAU,EAAEC,IAAI,EAAEC,SAAS,CAAC;IACrE,OAAO;MAAEO,KAAK,EAAEN;IAAc,CAAC;EACjC,CAAC,CAAC,OAAOO,CAAC,EAAE;IACV,IAAIA,CAAC,YAAYC,KAAK,EAAE;MACtB,OAAO;QAAEC,KAAK,EAAEF;MAAE,CAAC;IACrB;IACA,OAAO;MAAEE,KAAK,EAAEF;IAAW,CAAC;EAC9B;AACF","ignoreList":[]}
{"version":3,"file":"legacyToModernSingleAggregationResult.js","names":["invariant","legacyToModernSingleAggregationResult","entry","metrics","reduce","accumulator","curValue","parts","name","split","length","process","env","NODE_ENV","property","metricType","value"],"sources":["legacyToModernSingleAggregationResult.ts"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  AggregationClause,\n  AggregationResultsWithoutGroups,\n  ObjectOrInterfaceDefinition,\n} from \"@osdk/api\";\nimport type { AggregateObjectsResponseV2 } from \"@osdk/foundry.ontologies\";\nimport invariant from \"tiny-invariant\";\nimport type { ArrayElement } from \"../../util/ArrayElement.js\";\n\n/** @internal */\nexport function legacyToModernSingleAggregationResult<\n  Q extends ObjectOrInterfaceDefinition,\n  AC extends AggregationClause<Q>,\n>(\n  entry: ArrayElement<AggregateObjectsResponseV2[\"data\"]>,\n): AggregationResultsWithoutGroups<Q, AC> {\n  return entry.metrics.reduce(\n    (accumulator: AggregationResultsWithoutGroups<Q, AC>, curValue) => {\n      const parts = curValue.name.split(\".\");\n      if (parts[0] === \"count\") {\n        return accumulator;\n      }\n      invariant(\n        parts.length === 2,\n        \"assumed we were getting a `${key}.${type}`\",\n      );\n      const property = parts[0] as keyof AggregationResultsWithoutGroups<Q, AC>;\n      const metricType = parts[1];\n      if (!(property in accumulator)) {\n        accumulator[property] = {} as any; // fixme?\n      }\n      (accumulator[property] as any)[metricType] = curValue.value; // fixme?\n\n      return accumulator;\n    },\n    {} as AggregationResultsWithoutGroups<Q, AC>,\n  );\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA,OAAOA,SAAS,MAAM,gBAAgB;AAGtC;AACA,OAAO,SAASC,qCAAqCA,CAInDC,KAAuD,EACf;EACxC,OAAOA,KAAK,CAACC,OAAO,CAACC,MAAM,CACzB,CAACC,WAAmD,EAAEC,QAAQ,KAAK;IACjE,MAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;IACtC,IAAIF,KAAK,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;MACxB,OAAOF,WAAW;IACpB;IACA,EACEE,KAAK,CAACG,MAAM,KAAK,CAAC,IAAAC,OAAA,CAAAC,GAAA,CAAAC,QAAA,oBADpBb,SAAS,QAEP,4CAA4C,IAF9CA,SAAS;IAIT,MAAMc,QAAQ,GAAGP,KAAK,CAAC,CAAC,CAAiD;IACzE,MAAMQ,UAAU,GAAGR,KAAK,CAAC,CAAC,CAAC;IAC3B,IAAI,EAAEO,QAAQ,IAAIT,WAAW,CAAC,EAAE;MAC9BA,WAAW,CAACS,QAAQ,CAAC,GAAG,CAAC,CAAQ,CAAC,CAAC;IACrC;IACCT,WAAW,CAACS,QAAQ,CAAC,CAASC,UAAU,CAAC,GAAGT,QAAQ,CAACU,KAAK,CAAC,CAAC;;IAE7D,OAAOX,WAAW;EACpB,CAAC,EACD,CAAC,CACH,CAAC;AACH","ignoreList":[]}
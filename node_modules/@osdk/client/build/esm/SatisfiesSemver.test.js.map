{"version":3,"file":"SatisfiesSemver.test.js","names":["describe","expectTypeOf","it","toEqualTypeOf"],"sources":["SatisfiesSemver.test.ts"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { describe, expectTypeOf, it } from \"vitest\";\nimport type { SatisfiesSemver } from \"./SatisfiesSemver.js\";\n\ndescribe(\"SatisfiesSemver\", () => {\n  describe(\"SatisfiesSemver type alias\", () => {\n    it(\"has simple examples to review\", () => {\n      expectTypeOf<SatisfiesSemver<\"0.0.0\", \"0.0.0\">>().toEqualTypeOf(true);\n      expectTypeOf<SatisfiesSemver<\"1.0.0\", \"1.1.0\">>().toEqualTypeOf(true);\n      expectTypeOf<SatisfiesSemver<\"1.1.0\", \"1.1.1\">>().toEqualTypeOf(true);\n      expectTypeOf<SatisfiesSemver<\"1.5.0\", \"1.4.0\">>().toEqualTypeOf(false);\n      expectTypeOf<SatisfiesSemver<\"1.0.0\", \"2.0.0\">>().toEqualTypeOf(false);\n    });\n\n    it(\"is true eq major, eq minor, eq patch\", () => {\n      expectTypeOf<SatisfiesSemver<\"0.0.0\", \"0.0.0\">>().toEqualTypeOf(true);\n      expectTypeOf<SatisfiesSemver<\"1.0.0\", \"1.0.0\">>().toEqualTypeOf(true);\n      expectTypeOf<SatisfiesSemver<\"2.2.0\", \"2.2.0\">>().toEqualTypeOf(true);\n      expectTypeOf<SatisfiesSemver<\"3.3.3\", \"3.3.3\">>().toEqualTypeOf(true);\n    });\n\n    it(\"is true for eq major, eq minor, gt patch\", () => {\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"5.5.6\">>().toEqualTypeOf(true);\n    });\n\n    it(\"is true for eq major, gt minor, any patch\", () => {\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"5.6.4\">>().toEqualTypeOf(true);\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"5.6.5\">>().toEqualTypeOf(true);\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"5.6.6\">>().toEqualTypeOf(true);\n    });\n\n    it(\"is false for eq major, lt minor, any patch\", () => {\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"5.4.4\">>().toEqualTypeOf(false);\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"5.4.5\">>().toEqualTypeOf(false);\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"5.4.6\">>().toEqualTypeOf(false);\n    });\n\n    it(\"is false for gt major, any minor, any patch\", () => {\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"6.4.4\">>().toEqualTypeOf(false);\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"6.4.5\">>().toEqualTypeOf(false);\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"6.4.6\">>().toEqualTypeOf(false);\n\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"6.5.4\">>().toEqualTypeOf(false);\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"6.5.5\">>().toEqualTypeOf(false);\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"6.5.6\">>().toEqualTypeOf(false);\n\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"6.6.4\">>().toEqualTypeOf(false);\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"6.6.5\">>().toEqualTypeOf(false);\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"6.6.6\">>().toEqualTypeOf(false);\n    });\n\n    it(\"is false for lt major, any minor, any patch\", () => {\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"4.4.4\">>().toEqualTypeOf(false);\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"4.4.5\">>().toEqualTypeOf(false);\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"4.4.6\">>().toEqualTypeOf(false);\n\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"4.5.4\">>().toEqualTypeOf(false);\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"4.5.5\">>().toEqualTypeOf(false);\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"4.5.6\">>().toEqualTypeOf(false);\n\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"4.6.4\">>().toEqualTypeOf(false);\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"4.6.5\">>().toEqualTypeOf(false);\n      expectTypeOf<SatisfiesSemver<\"5.5.5\", \"4.6.6\">>().toEqualTypeOf(false);\n    });\n  });\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,EAAEC,YAAY,EAAEC,EAAE,QAAQ,QAAQ;AAGnDF,QAAQ,CAAC,iBAAiB,EAAE,MAAM;EAChCA,QAAQ,CAAC,4BAA4B,EAAE,MAAM;IAC3CE,EAAE,CAAC,+BAA+B,EAAE,MAAM;MACxCD,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,IAAI,CAAC;MACrEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,IAAI,CAAC;MACrEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,IAAI,CAAC;MACrEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;MACtEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;IACxE,CAAC,CAAC;IAEFD,EAAE,CAAC,sCAAsC,EAAE,MAAM;MAC/CD,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,IAAI,CAAC;MACrEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,IAAI,CAAC;MACrEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,IAAI,CAAC;MACrEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,IAAI,CAAC;IACvE,CAAC,CAAC;IAEFD,EAAE,CAAC,0CAA0C,EAAE,MAAM;MACnDD,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,IAAI,CAAC;IACvE,CAAC,CAAC;IAEFD,EAAE,CAAC,2CAA2C,EAAE,MAAM;MACpDD,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,IAAI,CAAC;MACrEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,IAAI,CAAC;MACrEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,IAAI,CAAC;IACvE,CAAC,CAAC;IAEFD,EAAE,CAAC,4CAA4C,EAAE,MAAM;MACrDD,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;MACtEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;MACtEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;IACxE,CAAC,CAAC;IAEFD,EAAE,CAAC,6CAA6C,EAAE,MAAM;MACtDD,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;MACtEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;MACtEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;MAEtEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;MACtEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;MACtEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;MAEtEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;MACtEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;MACtEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;IACxE,CAAC,CAAC;IAEFD,EAAE,CAAC,6CAA6C,EAAE,MAAM;MACtDD,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;MACtEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;MACtEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;MAEtEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;MACtEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;MACtEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;MAEtEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;MACtEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;MACtEF,YAAY,CAAoC,CAAC,CAACE,aAAa,CAAC,KAAK,CAAC;IACxE,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}
{"version":3,"file":"Changes.js","names":["MultiMap","DEBUG_ONLY__cacheKeyToString","Changes","modifiedObjects","addedObjects","added","Set","modified","deleted","registerObject","cacheKey","data","isNew","set","$apiName","add","deleteObject","registerList","key","isEmpty","size","createChangedObjects","DEBUG_ONLY__changesToString","changes","process","env","NODE_ENV","JSON","stringify","multimapHelper","listHelper","Error","Array","from","map","multimap","Object","fromEntries","associations","type","objects","o","$primaryKey"],"sources":["Changes.ts"],"sourcesContent":["/*\n * Copyright 2025 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MultiMap } from \"mnemonist\";\nimport type { ObjectHolder } from \"../../object/convertWireToOsdkObjects/ObjectHolder.js\";\nimport type { CacheKey } from \"./CacheKey.js\";\nimport { DEBUG_ONLY__cacheKeyToString } from \"./CacheKey.js\";\nimport type { ListCacheKey } from \"./ListQuery.js\";\nimport type { ObjectCacheKey } from \"./ObjectQuery.js\";\n\nexport class Changes {\n  modifiedObjects: MultiMap<string, ObjectHolder> = new MultiMap();\n  addedObjects: MultiMap<string, ObjectHolder> = new MultiMap();\n\n  added: Set<ListCacheKey | ObjectCacheKey> = new Set();\n  modified: Set<ListCacheKey | ObjectCacheKey> = new Set();\n  deleted: Set<ListCacheKey | ObjectCacheKey> = new Set();\n\n  registerObject = (\n    cacheKey: ObjectCacheKey,\n    data: ObjectHolder,\n    isNew: boolean,\n  ): void => {\n    this[isNew ? \"addedObjects\" : \"modifiedObjects\"].set(data.$apiName, data);\n    this[isNew ? \"added\" : \"modified\"].add(cacheKey);\n  };\n\n  deleteObject = (cacheKey: ObjectCacheKey): void => {\n    this.deleted.add(cacheKey);\n  };\n\n  registerList = (key: ListCacheKey): void => {\n    this.modified.add(key);\n  };\n\n  isEmpty(): boolean {\n    return (\n      this.modifiedObjects.size === 0\n      && this.addedObjects.size === 0\n      && this.added.size === 0\n      && this.modified.size === 0\n      && this.deleted.size === 0\n    );\n  }\n}\n\nexport function createChangedObjects(): Changes {\n  return new Changes();\n}\n\nexport function DEBUG_ONLY__changesToString(changes: Changes): string {\n  if (process.env.NODE_ENV !== \"production\") {\n    return JSON.stringify(\n      {\n        modifiedObjects: multimapHelper(changes.modifiedObjects),\n        addedObjects: multimapHelper(changes.addedObjects),\n        added: listHelper(changes.added),\n        modified: listHelper(changes.modified),\n      },\n      null,\n      2,\n    );\n  } else {\n    throw new Error(\"not implemented\");\n  }\n}\n\nfunction listHelper(set: Set<CacheKey>) {\n  return Array.from(set).map(DEBUG_ONLY__cacheKeyToString);\n}\n\nfunction multimapHelper(\n  multimap: MultiMap<string, ObjectHolder>,\n) {\n  return Object.fromEntries(\n    Array.from(multimap.associations()).map(\n      ([type, objects]) => {\n        return [type, objects.map(o => o.$primaryKey)];\n      },\n    ),\n  );\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,QAAQ,WAAW;AAGpC,SAASC,4BAA4B,QAAQ,eAAe;AAI5D,OAAO,MAAMC,OAAO,CAAC;EACnBC,eAAe,GAAmC,IAAIH,QAAQ,CAAC,CAAC;EAChEI,YAAY,GAAmC,IAAIJ,QAAQ,CAAC,CAAC;EAE7DK,KAAK,GAAuC,IAAIC,GAAG,CAAC,CAAC;EACrDC,QAAQ,GAAuC,IAAID,GAAG,CAAC,CAAC;EACxDE,OAAO,GAAuC,IAAIF,GAAG,CAAC,CAAC;EAEvDG,cAAc,GAAGA,CACfC,QAAwB,EACxBC,IAAkB,EAClBC,KAAc,KACL;IACT,IAAI,CAACA,KAAK,GAAG,cAAc,GAAG,iBAAiB,CAAC,CAACC,GAAG,CAACF,IAAI,CAACG,QAAQ,EAAEH,IAAI,CAAC;IACzE,IAAI,CAACC,KAAK,GAAG,OAAO,GAAG,UAAU,CAAC,CAACG,GAAG,CAACL,QAAQ,CAAC;EAClD,CAAC;EAEDM,YAAY,GAAIN,QAAwB,IAAW;IACjD,IAAI,CAACF,OAAO,CAACO,GAAG,CAACL,QAAQ,CAAC;EAC5B,CAAC;EAEDO,YAAY,GAAIC,GAAiB,IAAW;IAC1C,IAAI,CAACX,QAAQ,CAACQ,GAAG,CAACG,GAAG,CAAC;EACxB,CAAC;EAEDC,OAAOA,CAAA,EAAY;IACjB,OACE,IAAI,CAAChB,eAAe,CAACiB,IAAI,KAAK,CAAC,IAC5B,IAAI,CAAChB,YAAY,CAACgB,IAAI,KAAK,CAAC,IAC5B,IAAI,CAACf,KAAK,CAACe,IAAI,KAAK,CAAC,IACrB,IAAI,CAACb,QAAQ,CAACa,IAAI,KAAK,CAAC,IACxB,IAAI,CAACZ,OAAO,CAACY,IAAI,KAAK,CAAC;EAE9B;AACF;AAEA,OAAO,SAASC,oBAAoBA,CAAA,EAAY;EAC9C,OAAO,IAAInB,OAAO,CAAC,CAAC;AACtB;AAEA,OAAO,SAASoB,2BAA2BA,CAACC,OAAgB,EAAU;EACpE,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,OAAOC,IAAI,CAACC,SAAS,CACnB;MACEzB,eAAe,EAAE0B,cAAc,CAACN,OAAO,CAACpB,eAAe,CAAC;MACxDC,YAAY,EAAEyB,cAAc,CAACN,OAAO,CAACnB,YAAY,CAAC;MAClDC,KAAK,EAAEyB,UAAU,CAACP,OAAO,CAAClB,KAAK,CAAC;MAChCE,QAAQ,EAAEuB,UAAU,CAACP,OAAO,CAAChB,QAAQ;IACvC,CAAC,EACD,IAAI,EACJ,CACF,CAAC;EACH,CAAC,MAAM;IACL,MAAM,IAAIwB,KAAK,CAAC,iBAAiB,CAAC;EACpC;AACF;AAEA,SAASD,UAAUA,CAACjB,GAAkB,EAAE;EACtC,OAAOmB,KAAK,CAACC,IAAI,CAACpB,GAAG,CAAC,CAACqB,GAAG,CAACjC,4BAA4B,CAAC;AAC1D;AAEA,SAAS4B,cAAcA,CACrBM,QAAwC,EACxC;EACA,OAAOC,MAAM,CAACC,WAAW,CACvBL,KAAK,CAACC,IAAI,CAACE,QAAQ,CAACG,YAAY,CAAC,CAAC,CAAC,CAACJ,GAAG,CACrC,CAAC,CAACK,IAAI,EAAEC,OAAO,CAAC,KAAK;IACnB,OAAO,CAACD,IAAI,EAAEC,OAAO,CAACN,GAAG,CAACO,CAAC,IAAIA,CAAC,CAACC,WAAW,CAAC,CAAC;EAChD,CACF,CACF,CAAC;AACH","ignoreList":[]}
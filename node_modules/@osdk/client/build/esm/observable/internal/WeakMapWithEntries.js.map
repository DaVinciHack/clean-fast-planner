{"version":3,"file":"WeakMapWithEntries.js","names":["WeakMapWithEntries","map","WeakMap","list","toClean","needsCleaning","registry","FinalizationRegistry","push","WeakRef","constructor","weakThis","intervalId","setInterval","self","deref","clean","clearInterval","#clean","filter","ref","undefined","delete","key","ret","get","has","set","value","Symbol","toStringTag","iterator","entries","keys","values"],"sources":["WeakMapWithEntries.ts"],"sourcesContent":["/*\n * Copyright 2025 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ninterface WeakMapIterables<K extends WeakKey, V> {\n  /** Returns an iterable of entries in the map. */\n  [Symbol.iterator](): IterableIterator<[K, V]>;\n\n  /**\n   * Returns an iterable of key, value pairs for every entry in the map.\n   */\n  entries(): IterableIterator<[K, V]>;\n\n  /**\n   * Returns an iterable of keys in the map\n   */\n  keys(): IterableIterator<K>;\n\n  /**\n   * Returns an iterable of values in the map\n   */\n  values(): IterableIterator<V>;\n}\n\nexport class WeakMapWithEntries<K extends WeakKey, V>\n  implements WeakMap<K, V>, WeakMapIterables<K, V>\n{\n  #map = new WeakMap<K, V>();\n  #list: WeakRef<K>[] = [];\n  #toClean: WeakRef<WeakKey>[] = [];\n  #needsCleaning = false;\n\n  #registry = new FinalizationRegistry(() => {\n    this.#toClean.push(new WeakRef({}));\n    this.#needsCleaning = true;\n  });\n\n  constructor() {\n    const weakThis = new WeakRef(this);\n    const intervalId = setInterval(() => {\n      const self = weakThis.deref();\n      if (self) {\n        if (this.#needsCleaning) {\n          this.#clean();\n        }\n      } else {\n        clearInterval(intervalId);\n      }\n    }, 1000);\n  }\n\n  #clean() {\n    this.#list = this.#list.filter((ref) => ref.deref() !== undefined);\n  }\n\n  // functions for WeakMap\n  delete(key: K): boolean {\n    const ret = this.#map.delete(key);\n    this.#toClean.push(new WeakRef(key));\n    this.#needsCleaning = true;\n\n    return ret;\n  }\n\n  get(key: K): V | undefined {\n    return this.#map.get(key);\n  }\n\n  has(key: K): boolean {\n    return this.#map.has(key);\n  }\n\n  /**\n   * Adds a new element with a specified key and value.\n   * @param key Must be an object or symbol.\n   */\n  set(key: K, value: V): this {\n    if (!this.#map.has(key)) {\n      this.#list.push(new WeakRef(key));\n    }\n    this.#map.set(key, value);\n\n    return this;\n  }\n\n  [Symbol.toStringTag] = \"WeakMap\";\n\n  // functions for iterables\n  /** Returns an iterable of entries in the map. */\n  [Symbol.iterator](): IterableIterator<[K, V]> {\n    return this.entries();\n  }\n\n  /**\n   * Returns an iterable of key, value pairs for every entry in the map.\n   */\n  entries(): IterableIterator<[K, V]> {\n    const self = this;\n    function* iter(): IterableIterator<[K, V]> {\n      for (const ref of self.#list) {\n        const key = ref.deref();\n        if (key !== undefined) {\n          yield [key, self.#map.get(key)] as [K, V];\n        }\n      }\n    }\n    return iter();\n  }\n\n  /**\n   * Returns an iterable of keys in the map\n   */\n  keys(): IterableIterator<K> {\n    const self = this;\n    function* iter(): IterableIterator<K> {\n      for (const ref of self.#list) {\n        const key = ref.deref();\n        if (key !== undefined) {\n          yield key;\n        }\n      }\n    }\n    return iter();\n  }\n\n  /**\n   * Returns an iterable of values in the map\n   */\n  values(): IterableIterator<V> {\n    const self = this;\n    function* iter(): IterableIterator<V> {\n      for (const ref of self.#list) {\n        const key = ref.deref();\n        if (key !== undefined) {\n          const value = self.#map.get(key);\n          if (value !== undefined) {\n            yield value;\n          }\n        }\n      }\n    }\n    return iter();\n  }\n}\n"],"mappings":"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","ignoreList":[]}
{"version":3,"file":"OptimisticJob.js","names":["additionalContext","createOptimisticId","OptimisticJob","result","constructor","store","optimisticId","updatedObjects","addedObjectPromises","getResult","addedObjects","Promise","allSettled","batchResult","batch","obj","status","getObjectQuery","value","$objectType","$primaryKey","writeToStore","changes","context","updateObject","push","createObject","type","pk","properties","create","client","objectFactory2","$apiName","apiName","undefined","then","objs","runOptimisticJob","optimisticUpdate","resolve","job","optimisticApplicationDone","finally","removeLayer"],"sources":["OptimisticJob.ts"],"sourcesContent":["/*\n * Copyright 2025 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { additionalContext } from \"../../Client.js\";\nimport type { ObjectHolder } from \"../../object/convertWireToOsdkObjects/ObjectHolder.js\";\nimport type { OptimisticBuilder } from \"../OptimisticBuilder.js\";\nimport { type Changes } from \"./Changes.js\";\nimport { createOptimisticId, type OptimisticId } from \"./OptimisticId.js\";\nimport type { Store } from \"./Store.js\";\n\nexport class OptimisticJob {\n  context: OptimisticBuilder;\n  getResult: () => Promise<Changes>;\n  #result!: Promise<Changes>;\n\n  constructor(store: Store, optimisticId: OptimisticId) {\n    const updatedObjects: Array<\n      ObjectHolder\n    > = [];\n\n    // due to potentially needing to fetch the object metadata,\n    // the creation of objects needs to be async. In practice, the\n    // metadata is cached.\n    const addedObjectPromises: Array<\n      Promise<ObjectHolder>\n    > = [];\n\n    // TODO, this code needs to be refactored. its weird right now\n    // but the contract for `runOptimisticJob` is good.\n\n    // todo memoize this\n    this.getResult = () => {\n      return this.#result ??= (async () => {\n        const addedObjects = await Promise.allSettled(\n          addedObjectPromises,\n        );\n\n        const { batchResult } = store.batch({ optimisticId }, (batch) => {\n          for (const obj of addedObjects) {\n            if (obj.status === \"fulfilled\") {\n              store.getObjectQuery(obj.value.$objectType, obj.value.$primaryKey)\n                .writeToStore(obj.value, \"loading\", batch);\n            } else {\n              // TODO FIXME\n              throw obj;\n            }\n          }\n\n          for (const obj of updatedObjects) {\n            store.getObjectQuery(obj.$objectType, obj.$primaryKey)\n              .writeToStore(obj, \"loading\", batch);\n          }\n        });\n\n        return batchResult.changes;\n      })();\n    };\n\n    this.context = {\n      updateObject(value) {\n        updatedObjects.push(value as unknown as ObjectHolder<typeof value>);\n        return this;\n      },\n      createObject(type, pk, properties) {\n        const create = store.client[additionalContext].objectFactory2(\n          store.client[additionalContext],\n          [{\n            $primaryKey: pk,\n            $apiName: type.apiName,\n            $objectType: type.apiName,\n            ...properties,\n          }],\n          undefined,\n          {},\n        ).then(objs => {\n          return objs[0];\n        });\n\n        addedObjectPromises.push(create);\n        return this;\n      },\n    };\n  }\n}\n\nexport function runOptimisticJob(\n  store: Store,\n  optimisticUpdate: undefined | ((ctx: OptimisticBuilder) => void),\n): () => Promise<void> {\n  if (!optimisticUpdate) {\n    return () => Promise.resolve();\n  }\n\n  const optimisticId = createOptimisticId();\n  const job = new OptimisticJob(store, optimisticId);\n  optimisticUpdate(job.context);\n  const optimisticApplicationDone = job.getResult();\n\n  return () => {\n    return optimisticApplicationDone.then(\n      // we don't want to leak the result\n      () => undefined,\n    ).finally(() => {\n      store.removeLayer(optimisticId);\n    });\n  };\n}\n"],"mappings":"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","ignoreList":[]}
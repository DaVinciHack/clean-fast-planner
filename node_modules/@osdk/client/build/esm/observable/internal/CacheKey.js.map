{"version":3,"file":"CacheKey.js","names":["DEBUG_ONLY__cacheKeyToString","x","process","env","NODE_ENV","type","otherKeys","map","xx","JSON","stringify","join","replaceAll","Error","DEBUG_ONLY__cacheKeysToString"],"sources":["CacheKey.ts"],"sourcesContent":["/*\n * Copyright 2025 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Query } from \"./Query.js\";\n\nexport type CacheKey<\n  X extends string = string,\n  T_StoreValue = unknown,\n  T_Query extends Query<any, any, any> = Query<any, any, any>,\n  T_KeyFactoryArgs extends any[] = any[],\n> = {\n  type: X;\n  otherKeys: T_KeyFactoryArgs;\n  __cacheKey: {\n    value: T_StoreValue;\n    query: T_Query;\n    args: T_KeyFactoryArgs;\n  };\n};\n\n/**\n * This isn't performant and should only be used for debug logging!\n * @internal\n */\nexport function DEBUG_ONLY__cacheKeyToString(x: CacheKey) {\n  if (process.env.NODE_ENV !== \"production\") {\n    return `${x.type}CacheKey<${\n      x.otherKeys.map(xx => JSON.stringify(xx)).join(\", \")\n    }>`.replaceAll(\"\\\"\", \"'\");\n  } else {\n    throw new Error(\"not implemented\");\n  }\n}\n/**\n * This isn't performant and should only be used for debug logging!\n * @internal\n */\nexport function DEBUG_ONLY__cacheKeysToString(x: CacheKey[]) {\n  if (process.env.NODE_ENV !== \"production\") {\n    return \"\\n  - \" + x.map(DEBUG_ONLY__cacheKeyToString).join(\"\\n  - \");\n  } else {\n    throw new Error(\"not implemented\");\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAmBA;AACA;AACA;AACA;AACA,OAAO,SAASA,4BAA4BA,CAACC,CAAW,EAAE;EACxD,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,OAAO,GAAGH,CAAC,CAACI,IAAI,YACdJ,CAAC,CAACK,SAAS,CAACC,GAAG,CAACC,EAAE,IAAIC,IAAI,CAACC,SAAS,CAACF,EAAE,CAAC,CAAC,CAACG,IAAI,CAAC,IAAI,CAAC,GACnD,CAACC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC;EAC3B,CAAC,MAAM;IACL,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;EACpC;AACF;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,6BAA6BA,CAACb,CAAa,EAAE;EAC3D,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,OAAO,QAAQ,GAAGH,CAAC,CAACM,GAAG,CAACP,4BAA4B,CAAC,CAACW,IAAI,CAAC,QAAQ,CAAC;EACtE,CAAC,MAAM;IACL,MAAM,IAAIE,KAAK,CAAC,iBAAiB,CAAC;EACpC;AACF","ignoreList":[]}
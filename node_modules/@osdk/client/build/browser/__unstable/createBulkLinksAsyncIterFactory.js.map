{"version":3,"file":"createBulkLinksAsyncIterFactory.js","names":["getBulkLinksPage","invariant","conjureUnionType","makeConjureContext","applyPageToken","getResults","pageRequestAsAsyncIter","metadataCacheClient","createBulkLinksAsyncIterFactory","ctx","objs","linkTypes","length","logger","debug","every","a","$objectType","process","env","NODE_ENV","mcc","helper","forObjectByApiName","objectTypeRid","propertyMapping","fullLinkMapping","Promise","all","getRid","getPropertyMapping","getLinkMapping","linkMapping","Object","fromEntries","entries","filter","apiName","includes","linkType","req","objectSetContext","forkRid","undefined","objectSetFilterContext","parameterOverrides","ontologyBranchRid","owningRid","reportUsage","workstateRid","responseOptions","includeObjectSetEntities","includeUsageCost","pageSize","pageToken","linksRequests","directedLinkTypes","values","map","directedLinkTypeRid","objects","o","objectPrimaryKey","pk","rid","type","$primaryKey","bulkLinksIter","bind","item","objectIdentifier","obj","findObject","link","links","ref","linkSide","getPrimaryKeyOrThrow","otherObjectApiName","forObjectByRid","getApiName","mappedLink","find","linkTypeRid","Error","object","linkApiName","otherObjectPk","pkValue","pks","objectLocatorV2"],"sources":["createBulkLinksAsyncIterFactory.ts"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { OsdkBase } from \"@osdk/api\";\nimport type { EXPERIMENTAL_BulkLinkResult as BulkLinkResult } from \"@osdk/api/unstable\";\nimport type {\n  DirectedLinkTypeRid,\n  FoundryObjectReference,\n  GetBulkLinksPageRequest,\n  ObjectIdentifier,\n} from \"@osdk/client.unstable\";\nimport { getBulkLinksPage } from \"@osdk/client.unstable\";\nimport invariant from \"tiny-invariant\";\nimport type { MinimalClient } from \"../MinimalClientContext.js\";\nimport { conjureUnionType } from \"../objectSet/conjureUnionType.js\";\nimport { makeConjureContext } from \"../ontology/makeConjureContext.js\";\nimport {\n  applyPageToken,\n  getResults,\n  pageRequestAsAsyncIter,\n} from \"../pageRequestAsAsyncIter.js\";\nimport { metadataCacheClient } from \"./ConjureSupport.js\";\n\nexport function createBulkLinksAsyncIterFactory(ctx: MinimalClient) {\n  return async function*(\n    objs: Array<OsdkBase<any>>,\n    linkTypes: string[],\n  ): AsyncGenerator<BulkLinkResult, void, unknown> {\n    if (objs.length === 0) {\n      return;\n    }\n\n    ctx.logger?.debug(\"Preparing to fetch bulk links\");\n\n    // require all objects to be the same type for now\n    invariant(objs.every(a => a.$objectType === objs[0].$objectType));\n\n    const mcc = await metadataCacheClient(ctx);\n    const helper = await mcc.forObjectByApiName(objs[0].$objectType);\n\n    const [objectTypeRid, propertyMapping, fullLinkMapping] = await Promise.all(\n      [\n        helper.getRid(),\n        helper.getPropertyMapping(),\n        helper.getLinkMapping(),\n      ],\n    );\n\n    const linkMapping = Object.fromEntries(\n      Object.entries(fullLinkMapping)\n        .filter(([apiName]) => linkTypes.includes(apiName)),\n    );\n\n    // make sure the link being requested exists\n    for (const linkType of linkTypes) {\n      if (linkMapping[linkType] == null) {\n        throw \"Unable to find link type: \" + linkType;\n      }\n    }\n\n    const req: GetBulkLinksPageRequest = {\n      objectSetContext: {\n        forkRid: undefined,\n        objectSetFilterContext: { parameterOverrides: {} },\n        ontologyBranchRid: undefined,\n        owningRid: undefined,\n        reportUsage: undefined,\n        workstateRid: undefined,\n      },\n      responseOptions: {\n        includeObjectSetEntities: true,\n        includeUsageCost: false,\n      },\n      pageSize: 1000,\n      pageToken: undefined,\n      linksRequests: [{\n        directedLinkTypes: Object.values(linkMapping)\n          .map<DirectedLinkTypeRid>(({ directedLinkTypeRid }) =>\n            directedLinkTypeRid\n          ),\n        objects: conjureUnionType(\n          \"objects\",\n          objs.map<ObjectIdentifier>(o =>\n            conjureUnionType(\"objectLocatorV2\", {\n              objectTypeRid,\n              objectPrimaryKey: {\n                [propertyMapping.pk.rid]: conjureUnionType(\n                  propertyMapping.pk.type.type as \"string\",\n                  o.$primaryKey as string,\n                ),\n              },\n            })\n          ),\n        ),\n      }],\n    };\n\n    const bulkLinksIter = pageRequestAsAsyncIter(\n      getBulkLinksPage.bind(\n        undefined,\n        makeConjureContext(ctx, \"object-set-service/api\"),\n      ),\n      getResults,\n      applyPageToken,\n      req,\n    );\n\n    for await (const item of bulkLinksIter) {\n      const { objectIdentifier } = item;\n      const obj = findObject(objectIdentifier, objs);\n\n      for (const link of item.links) {\n        const ref = link.link[\n          link.linkSide === \"SOURCE\"\n            ? \"objectSideB\"\n            : \"objectSideA\"\n        ];\n        const pk = getPrimaryKeyOrThrow(ref);\n        const otherObjectApiName =\n          await (await mcc.forObjectByRid(pk.objectTypeRid))\n            .getApiName();\n\n        const mappedLink = Object.values(linkMapping).find(a =>\n          a.directedLinkTypeRid.linkTypeRid === link.link.linkTypeRid\n          && a.directedLinkTypeRid.linkSide === link.linkSide\n        );\n        if (!mappedLink) throw new Error(\"Could not find link type\"); // should not happens\n\n        yield {\n          object: obj,\n          linkApiName: mappedLink.apiName,\n          otherObjectApiName: otherObjectApiName,\n          otherObjectPk: pk.pkValue,\n        };\n      }\n    }\n  };\n}\n\nfunction findObject(\n  objectIdentifier: ObjectIdentifier,\n  objs: (OsdkBase<any>)[],\n) {\n  const { pkValue } = getPrimaryKeyOrThrow(objectIdentifier);\n\n  const obj = objs.find(o => o.$primaryKey === pkValue);\n  if (obj == null) {\n    throw new Error(\n      `Needed to find object with pk ${pkValue}} and could not`,\n    );\n  }\n  return obj;\n}\n\nfunction getPrimaryKeyOrThrow(\n  ref: FoundryObjectReference | ObjectIdentifier,\n) {\n  if (\"type\" in ref && ref.type !== \"objectLocatorV2\") {\n    throw new Error(\"We do not support looking up object by rid\");\n  }\n\n  const pks = Object.entries(ref.objectLocatorV2.objectPrimaryKey);\n  if (pks.length !== 1) {\n    throw new Error(\n      \"Unable to support this request due to multiple pks\",\n    );\n  }\n\n  return {\n    objectTypeRid: ref.objectLocatorV2.objectTypeRid,\n    pkValue: (pks[0][1] as any)[pks[0][1].type] as unknown,\n  };\n}\n"],"mappings":"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","ignoreList":[]}
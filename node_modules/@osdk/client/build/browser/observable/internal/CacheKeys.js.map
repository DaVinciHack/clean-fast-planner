{"version":3,"file":"CacheKeys.js","names":["Trie","invariant","DEBUG_CACHE_KEYS","CacheKeys","cacheKeys","keys","ret","type","otherKeys","slice","onCreate","cacheKeyFactories","Map","constructor","whereCanonicalizer","orderByCanonicalizer","registerCacheKeyFactory","apiName","pk","process","env","NODE_ENV","console","debug","peekArray","lookupArray","where","orderBy","JSON","stringify","canonicalize","#registerCacheKeyFactory","factory","set","get","args","remove","cacheKey"],"sources":["CacheKeys.ts"],"sourcesContent":["/*\n * Copyright 2025 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Trie } from \"@wry/trie\";\nimport invariant from \"tiny-invariant\";\nimport { DEBUG_CACHE_KEYS } from \"../DebugFlags.js\";\nimport type { CacheKey } from \"./CacheKey.js\";\nimport type { ListCacheKey } from \"./ListQuery.js\";\nimport type { ObjectCacheKey } from \"./ObjectQuery.js\";\nimport type { OrderByCanonicalizer } from \"./OrderByCanonicalizer.js\";\nimport type { WhereClauseCanonicalizer } from \"./WhereClauseCanonicalizer.js\";\n\ntype CacheKeyArgs<K extends CacheKey> = [K[\"type\"], ...K[\"otherKeys\"]];\n\nexport class CacheKeys {\n  #cacheKeys = new Trie<CacheKey<string, any, any>>(false, (keys) => {\n    const ret = {\n      type: keys[0],\n      otherKeys: keys.slice(1),\n    } as unknown as CacheKey<\n      string,\n      any,\n      any\n    >;\n    this.#onCreate(ret);\n    return ret;\n  });\n  #cacheKeyFactories = new Map<string, (...args: any[]) => CacheKey>();\n  #onCreate: (cacheKey: CacheKey) => void;\n\n  constructor(\n    whereCanonicalizer: WhereClauseCanonicalizer,\n    orderByCanonicalizer: OrderByCanonicalizer,\n    onCreate: (cacheKey: CacheKey) => void,\n  ) {\n    this.#onCreate = onCreate;\n    this.#registerCacheKeyFactory<ObjectCacheKey>(\n      \"object\",\n      (apiName, pk) => {\n        if (process.env.NODE_ENV !== \"production\" && DEBUG_CACHE_KEYS) {\n          // eslint-disable-next-line no-console\n          console.debug(\n            `CacheKeys.get([object, ${apiName}, ${pk}]) -- already exists? `,\n            this.#cacheKeys.peekArray([\n              \"object\",\n              apiName,\n              pk,\n            ]) != null,\n          );\n        }\n        return this.#cacheKeys.lookupArray([\n          \"object\",\n          apiName,\n          pk,\n        ]) as ObjectCacheKey;\n      },\n    );\n    this.#registerCacheKeyFactory<ListCacheKey>(\n      \"list\",\n      (type, apiName, where, orderBy) => {\n        if (process.env.NODE_ENV !== \"production\" && DEBUG_CACHE_KEYS) {\n          // eslint-disable-next-line no-console\n          console.debug(\n            `CacheKeys.get([list, ${apiName}, ${JSON.stringify(where)}, ${\n              JSON.stringify(orderBy)\n            }]) -- already exists? `,\n            this.#cacheKeys.peekArray([\n              \"list\",\n              apiName,\n              whereCanonicalizer.canonicalize(where),\n              orderByCanonicalizer.canonicalize(orderBy),\n            ]) != null,\n          );\n        }\n        return this.#cacheKeys.lookupArray<\n          CacheKeyArgs<ListCacheKey>\n        >([\n          \"list\",\n          type,\n          apiName,\n          whereCanonicalizer.canonicalize(where),\n          orderByCanonicalizer.canonicalize(orderBy),\n        ]) as ListCacheKey;\n      },\n    );\n  }\n\n  #registerCacheKeyFactory<K extends CacheKey>(\n    type: K[\"type\"],\n    factory: (...args: K[\"__cacheKey\"][\"args\"]) => K,\n  ): void {\n    this.#cacheKeyFactories.set(type, factory);\n  }\n\n  get<K extends CacheKey<string, any, any>>(\n    type: K[\"type\"],\n    ...args: K[\"__cacheKey\"][\"args\"]\n  ): K {\n    const factory = this.#cacheKeyFactories.get(type);\n    invariant(factory, `no cache key factory for type \"${type}\"`);\n    return factory(...args) as K;\n  }\n\n  remove<K extends CacheKey<string, any, any>>(\n    cacheKey: K,\n  ): void {\n    this.#cacheKeys.remove(cacheKey.type, ...cacheKey.otherKeys);\n  }\n}\n"],"mappings":"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","ignoreList":[]}
{"version":3,"file":"objectMatchesWhereClause.js","names":["deepEqual","invariant","is$and","whereClause","process","env","NODE_ENV","Array","isArray","$and","Object","keys","length","is$or","$or","is$not","objectSortaMatchesWhereClause","o","strict","every","w","some","$not","entries","key","filter","realValue","f","expected","$in","includes","startsWith"],"sources":["objectMatchesWhereClause.ts"],"sourcesContent":["/*\n * Copyright 2025 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { PossibleWhereClauseFilters } from \"@osdk/api\";\nimport deepEqual from \"fast-deep-equal\";\nimport invariant from \"tiny-invariant\";\nimport type { InterfaceHolder } from \"../../object/convertWireToOsdkObjects/InterfaceHolder.js\";\nimport type { ObjectHolder } from \"../../object/convertWireToOsdkObjects/ObjectHolder.js\";\nimport type { SimpleWhereClause } from \"./SimpleWhereClause.js\";\n\nfunction is$and(\n  whereClause: SimpleWhereClause,\n): whereClause is { $and: SimpleWhereClause[] } {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (\"$and\" in whereClause) {\n      invariant(\n        Array.isArray(whereClause.$and),\n        \"expected $and to be an array\",\n      );\n      invariant(\n        Object.keys(whereClause).length === 1,\n        \"expected only $and to be present\",\n      );\n    }\n  }\n  return \"$and\" in whereClause;\n}\n\nfunction is$or(\n  whereClause: SimpleWhereClause,\n): whereClause is { $or: SimpleWhereClause[] } {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (\"$or\" in whereClause) {\n      invariant(\n        Array.isArray(whereClause.$or),\n        \"expected $or to be an array\",\n      );\n      invariant(\n        Object.keys(whereClause).length === 1,\n        \"expected only $or to be present\",\n      );\n    }\n  }\n  return \"$or\" in whereClause;\n}\n\nfunction is$not(\n  whereClause: SimpleWhereClause,\n): whereClause is { $not: SimpleWhereClause } {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (\"$not\" in whereClause) {\n      invariant(\n        Object.keys(whereClause).length === 1,\n        \"expected only $not to be present\",\n      );\n    }\n  }\n\n  return \"$not\" in whereClause;\n}\n\nexport function objectSortaMatchesWhereClause(\n  o: ObjectHolder | InterfaceHolder,\n  whereClause: SimpleWhereClause,\n  strict: boolean,\n): boolean {\n  if (deepEqual({}, whereClause)) {\n    return true;\n  }\n\n  if (is$and(whereClause)) {\n    return whereClause.$and.every(w =>\n      objectSortaMatchesWhereClause(o, w, strict)\n    );\n  }\n  if (is$or(whereClause)) {\n    return whereClause.$or.some(w =>\n      objectSortaMatchesWhereClause(o, w, strict)\n    );\n  }\n  if (is$not(whereClause)) {\n    return !objectSortaMatchesWhereClause(o, whereClause.$not, strict);\n  }\n\n  return Object.entries(whereClause).every(([key, filter]) => {\n    if (typeof filter === \"object\") {\n      const realValue: any = o[key as keyof typeof o];\n      const [f] = Object.keys(filter) as Array<PossibleWhereClauseFilters>;\n      const expected = (filter as any)[f];\n      switch (f) {\n        case \"$eq\":\n          return realValue === expected;\n        case \"$gt\":\n          return realValue > expected;\n        case \"$lt\":\n          return realValue < expected;\n        case \"$gte\":\n          return realValue >= expected;\n        case \"$lte\":\n          return realValue <= expected;\n        case \"$ne\":\n          return realValue !== expected;\n        case \"$in\":\n          return expected.$in.includes(realValue);\n        case \"$isNull\":\n          return realValue == null;\n        case \"$startsWith\":\n          return realValue.startsWith(\n            expected,\n          );\n        case \"$contains\":\n        case \"$containsAllTerms\":\n        case \"$containsAllTermsInOrder\":\n        case \"$containsAnyTerm\":\n        case \"$intersects\":\n        case \"$within\":\n          // for these we will strictly say no and loosely say yes\n          // so that they don't change things now but may if reloaded\n          return !strict;\n\n        default:\n          // same thing here as the above cases but we will catch the\n          // exhaustive check in dev\n          if (process.env.NODE_ENV !== \"production\") {\n            const exhaustive: never = f;\n            invariant(false, `Unknown where filter ${f}`);\n          }\n          return !strict;\n      }\n    }\n\n    if (key in o) {\n      if (o[key as keyof typeof o] === filter) {\n        return true;\n      }\n    }\n    return false;\n  });\n}\n"],"mappings":"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","ignoreList":[]}
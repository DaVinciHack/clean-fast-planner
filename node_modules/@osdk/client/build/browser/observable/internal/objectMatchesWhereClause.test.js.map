{"version":3,"file":"objectMatchesWhereClause.test.js","names":["describe","expect","expectTypeOf","it","objectSortaMatchesWhereClause","fauxObject","attachment","undefined","attachment2","attachmentArray","boolean","booleanArray","byte","byteArray","date","dateArray","dateTime","Date","toISOString","dateTimeArray","decimal","decimalArray","double","doubleArray","float","floatArray","geoPoint","type","coordinates","geoPointArray","geoShape","geoShapeArray","id","integer","integerArray","long","longArray","mediaReference","short","shortArray","string","stringArray","objects","whereClauses","booleanTrue","stringStartsWithHi","$startsWith","stringStartsWithBye","mediaReferenceIsNull","$isNull","mediaReferenceNotIsNull","$not","geopointIntersects","$intersects","$bbox","empty","stringStartsWithHiAndBye","$and","stringStartsWithHiOrBye","$or","whereStrictAndNot","whereStrictOrNot","push","cases","toEqualTypeOf","each","instanceName","whereClauseName","strictExpected","nonStrictExpected","instance","whereClause","toBeDefined","toBe"],"sources":["objectMatchesWhereClause.test.ts"],"sourcesContent":["/*\n * Copyright 2025 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Osdk, WhereClause } from \"@osdk/api\";\nimport type { objectTypeWithAllPropertyTypes } from \"@osdk/client.test.ontology\";\nimport { describe, expect, expectTypeOf, it } from \"vitest\";\nimport type { ObjectHolder } from \"../../object/convertWireToOsdkObjects/ObjectHolder.js\";\nimport { objectSortaMatchesWhereClause } from \"./objectMatchesWhereClause.js\";\n\nconst fauxObject: Osdk.Instance<objectTypeWithAllPropertyTypes> = {\n  attachment: undefined,\n  attachment2: undefined,\n  attachmentArray: [],\n  boolean: true,\n  booleanArray: [],\n  byte: 5,\n  byteArray: [],\n  date: \"2024-01-01\",\n  dateArray: [],\n  dateTime: new Date().toISOString(),\n  dateTimeArray: [],\n  decimal: \"5.3\",\n  decimalArray: [],\n  double: 5.5,\n  doubleArray: [],\n  float: 5.6,\n  floatArray: [],\n  geoPoint: {\n    type: \"Point\",\n    coordinates: [5, 5],\n  },\n  geoPointArray: [],\n  geoShape: undefined,\n  geoShapeArray: [],\n  id: 5,\n  integer: 6,\n  integerArray: [],\n  long: \"5\",\n  longArray: [],\n  mediaReference: undefined,\n  short: 5,\n  shortArray: [],\n  string: \"Hi there\",\n  stringArray: [],\n} satisfies objectTypeWithAllPropertyTypes.Props as unknown as Osdk.Instance<\n  objectTypeWithAllPropertyTypes\n>;\n\nconst objects = {\n  fauxObject,\n};\n\nconst whereClauses = {\n  booleanTrue: {\n    boolean: true,\n  },\n  stringStartsWithHi: {\n    string: {\n      $startsWith: \"Hi\",\n    },\n  },\n  stringStartsWithBye: {\n    string: {\n      $startsWith: \"Bye\",\n    },\n  },\n  mediaReferenceIsNull: {\n    mediaReference: { $isNull: true },\n  },\n  mediaReferenceNotIsNull: {\n    $not: {\n      mediaReference: { $isNull: true },\n    },\n  },\n  geopointIntersects: {\n    geoPoint: {\n      $intersects: {\n        $bbox: [5, 3, 3, 2],\n      },\n    },\n  },\n  empty: {},\n  stringStartsWithHiAndBye: {\n    $and: [] as WhereClause<objectTypeWithAllPropertyTypes>[],\n  },\n  stringStartsWithHiOrBye: {\n    $or: [] as WhereClause<objectTypeWithAllPropertyTypes>[],\n  },\n  whereStrictAndNot: {\n    $and: [] as WhereClause<objectTypeWithAllPropertyTypes>[],\n  },\n  whereStrictOrNot: {\n    $or: [] as WhereClause<objectTypeWithAllPropertyTypes>[],\n  },\n} satisfies Record<\n  string,\n  WhereClause<objectTypeWithAllPropertyTypes>\n>;\n\nwhereClauses.stringStartsWithHiAndBye.$and.push(\n  whereClauses.stringStartsWithHi,\n  whereClauses.stringStartsWithBye,\n);\n\nwhereClauses.stringStartsWithHiOrBye.$or.push(\n  whereClauses.stringStartsWithHi,\n  whereClauses.stringStartsWithBye,\n);\n\nwhereClauses.whereStrictAndNot.$and.push(\n  whereClauses.stringStartsWithHi,\n  whereClauses.geopointIntersects,\n);\n\nwhereClauses.whereStrictOrNot.$or.push(\n  whereClauses.stringStartsWithHi,\n  whereClauses.geopointIntersects,\n);\n\nconst cases = [\n  [\"fauxObject\", \"empty\", true, true],\n  [\"fauxObject\", \"booleanTrue\", true, true],\n  [\"fauxObject\", \"stringStartsWithHi\", true, true],\n  [\"fauxObject\", \"stringStartsWithBye\", false, false],\n  [\"fauxObject\", \"mediaReferenceIsNull\", true, true],\n  [\"fauxObject\", \"mediaReferenceNotIsNull\", false, false],\n  [\"fauxObject\", \"geopointIntersects\", false, true],\n  [\"fauxObject\", \"stringStartsWithHiAndBye\", false, false],\n  [\"fauxObject\", \"stringStartsWithHiOrBye\", true, true],\n  [\"fauxObject\", \"whereStrictAndNot\", false, true],\n  [\"fauxObject\", \"whereStrictOrNot\", true, true],\n] satisfies Array<\n  [keyof typeof objects, keyof typeof whereClauses, boolean, boolean]\n>;\n\ntype usedWhereClauses = typeof cases[number][1];\ntype unusedWhereClauses = Exclude<keyof typeof whereClauses, usedWhereClauses>;\nexpectTypeOf<never>().toEqualTypeOf<unusedWhereClauses>;\n\ndescribe(objectSortaMatchesWhereClause, () => {\n  it.each<[keyof typeof objects, keyof typeof whereClauses, boolean, boolean]>(\n    cases,\n  )(\n    \"%s | %s ==> { strict: %s, loose: %s }\",\n    (instanceName, whereClauseName, strictExpected, nonStrictExpected) => {\n      const instance = objects[instanceName] as unknown as ObjectHolder<\n        typeof objects[typeof instanceName]\n      >;\n      const whereClause = whereClauses[whereClauseName] as WhereClause<\n        objectTypeWithAllPropertyTypes\n      >;\n      expect(instance).toBeDefined();\n      expect(whereClause).toBeDefined();\n      expect(objectSortaMatchesWhereClause(instance, whereClause, true)).toBe(\n        strictExpected,\n      );\n\n      expect(objectSortaMatchesWhereClause(instance, whereClause, false))\n        .toBe(nonStrictExpected);\n    },\n  );\n});\n"],"mappings":"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","ignoreList":[]}
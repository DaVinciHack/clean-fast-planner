{"version":3,"file":"createWithPropertiesObjectSet.js","names":["invariant","modernToLegacyWhereClause","idCounter","createWithPropertiesObjectSet","objectType","objectSet","definitionMap","pivotTo","link","type","where","clause","aggregate","aggregation","opt","splitAggregation","split","length","process","env","NODE_ENV","aggregationPropertyName","aggregationOperation","aggregationOperationDefinition","selectedPropertyApiName","approximatePercentile","percentile","limit","undefined","selectorResult","set","operation","selectProperty","name"],"sources":["createWithPropertiesObjectSet.ts"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DerivedProperty, ObjectOrInterfaceDefinition } from \"@osdk/api\";\nimport type {\n  DerivedPropertyDefinition,\n  ObjectSet as WireObjectSet,\n  SelectedPropertyOperation,\n} from \"@osdk/foundry.ontologies\";\nimport invariant from \"tiny-invariant\";\nimport { modernToLegacyWhereClause } from \"../internal/conversions/modernToLegacyWhereClause.js\";\n\nconst idCounter = 0;\n\n/** @internal */\nexport function createWithPropertiesObjectSet<\n  Q extends ObjectOrInterfaceDefinition,\n>(\n  objectType: Q,\n  objectSet: WireObjectSet,\n  definitionMap: Map<any, DerivedPropertyDefinition>,\n): DerivedProperty.SelectPropertyBuilder<Q, false> {\n  const base: DerivedProperty.SelectPropertyBuilder<Q, false> = {\n    pivotTo: (link) => {\n      return createWithPropertiesObjectSet(objectType, {\n        type: \"searchAround\",\n        objectSet,\n        link,\n      }, definitionMap);\n    },\n    where: (clause) => {\n      return createWithPropertiesObjectSet(objectType, {\n        type: \"filter\",\n        objectSet: objectSet,\n        where: modernToLegacyWhereClause(clause, objectType),\n      }, definitionMap);\n    },\n    aggregate: (aggregation: string, opt: any) => {\n      const splitAggregation = aggregation.split(\":\");\n      invariant(\n        splitAggregation.length === 2 || splitAggregation[0] === \"$count\",\n        \"Invalid aggregation format\",\n      );\n      const [aggregationPropertyName, aggregationOperation] = splitAggregation;\n      let aggregationOperationDefinition: SelectedPropertyOperation;\n      switch (aggregationOperation) {\n        case \"sum\":\n        case \"avg\":\n        case \"min\":\n        case \"max\":\n        case \"exactDistinct\":\n        case \"approximateDistinct\":\n          aggregationOperationDefinition = {\n            type: aggregationOperation,\n            selectedPropertyApiName: aggregationPropertyName,\n          };\n          break;\n        case \"approximatePercentile\":\n          aggregationOperationDefinition = {\n            type: \"approximatePercentile\",\n            selectedPropertyApiName: aggregationPropertyName,\n            approximatePercentile: opt?.percentile ?? .5,\n          };\n          break;\n        case \"collectSet\":\n        case \"collectList\":\n          aggregationOperationDefinition = {\n            type: aggregationOperation,\n            selectedPropertyApiName: aggregationPropertyName,\n            limit: opt?.limit ?? 100,\n          };\n          break;\n        case undefined:\n          if (aggregationPropertyName === \"$count\") {\n            aggregationOperationDefinition = {\n              type: \"count\",\n            };\n            break;\n          }\n        default:\n          invariant(\n            false,\n            \"Invalid aggregation operation \" + aggregationOperation,\n          );\n      }\n      const selectorResult: DerivedProperty.SelectorResult<any> = { type: {} };\n      definitionMap.set(selectorResult, {\n        type: \"selection\",\n        objectSet: objectSet,\n        operation: aggregationOperationDefinition,\n      });\n      return selectorResult;\n    },\n    selectProperty: (name) => {\n      const selectorResult: DerivedProperty.SelectorResult<any> = { type: {} };\n      definitionMap.set(selectorResult, {\n        type: \"selection\",\n        objectSet: objectSet,\n        operation: {\n          type: \"get\",\n          selectedPropertyApiName: name,\n        },\n      });\n      return selectorResult;\n    },\n  };\n\n  return base;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA,OAAOA,SAAS,MAAM,gBAAgB;AACtC,SAASC,yBAAyB,QAAQ,sDAAsD;AAEhG,MAAMC,SAAS,GAAG,CAAC;;AAEnB;AACA,OAAO,SAASC,6BAA6BA,CAG3CC,UAAa,EACbC,SAAwB,EACxBC,aAAkD,EACD;EAsFjD,OArF8D;IAC5DC,OAAO,EAAGC,IAAI,IAAK;MACjB,OAAOL,6BAA6B,CAACC,UAAU,EAAE;QAC/CK,IAAI,EAAE,cAAc;QACpBJ,SAAS;QACTG;MACF,CAAC,EAAEF,aAAa,CAAC;IACnB,CAAC;IACDI,KAAK,EAAGC,MAAM,IAAK;MACjB,OAAOR,6BAA6B,CAACC,UAAU,EAAE;QAC/CK,IAAI,EAAE,QAAQ;QACdJ,SAAS,EAAEA,SAAS;QACpBK,KAAK,EAAET,yBAAyB,CAACU,MAAM,EAAEP,UAAU;MACrD,CAAC,EAAEE,aAAa,CAAC;IACnB,CAAC;IACDM,SAAS,EAAEA,CAACC,WAAmB,EAAEC,GAAQ,KAAK;MAC5C,MAAMC,gBAAgB,GAAGF,WAAW,CAACG,KAAK,CAAC,GAAG,CAAC;MAC/C,EACED,gBAAgB,CAACE,MAAM,KAAK,CAAC,IAAIF,gBAAgB,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAAG,OAAA,CAAAC,GAAA,CAAAC,QAAA,oBADnEpB,SAAS,QAEP,4BAA4B,IAF9BA,SAAS;MAIT,MAAM,CAACqB,uBAAuB,EAAEC,oBAAoB,CAAC,GAAGP,gBAAgB;MACxE,IAAIQ,8BAAyD;MAC7D,QAAQD,oBAAoB;QAC1B,KAAK,KAAK;QACV,KAAK,KAAK;QACV,KAAK,KAAK;QACV,KAAK,KAAK;QACV,KAAK,eAAe;QACpB,KAAK,qBAAqB;UACxBC,8BAA8B,GAAG;YAC/Bd,IAAI,EAAEa,oBAAoB;YAC1BE,uBAAuB,EAAEH;UAC3B,CAAC;UACD;QACF,KAAK,uBAAuB;UAC1BE,8BAA8B,GAAG;YAC/Bd,IAAI,EAAE,uBAAuB;YAC7Be,uBAAuB,EAAEH,uBAAuB;YAChDI,qBAAqB,EAAEX,GAAG,EAAEY,UAAU,IAAI;UAC5C,CAAC;UACD;QACF,KAAK,YAAY;QACjB,KAAK,aAAa;UAChBH,8BAA8B,GAAG;YAC/Bd,IAAI,EAAEa,oBAAoB;YAC1BE,uBAAuB,EAAEH,uBAAuB;YAChDM,KAAK,EAAEb,GAAG,EAAEa,KAAK,IAAI;UACvB,CAAC;UACD;QACF,KAAKC,SAAS;UACZ,IAAIP,uBAAuB,KAAK,QAAQ,EAAE;YACxCE,8BAA8B,GAAG;cAC/Bd,IAAI,EAAE;YACR,CAAC;YACD;UACF;QACF;UACES,OAAA,CAAAC,GAAA,CAAAC,QAAA,oBAAApB,SAAS,QAEP,gCAAgC,GAAGsB,oBAAoB,IAFzDtB,SAAS;MAIb;MACA,MAAM6B,cAAmD,GAAG;QAAEpB,IAAI,EAAE,CAAC;MAAE,CAAC;MACxEH,aAAa,CAACwB,GAAG,CAACD,cAAc,EAAE;QAChCpB,IAAI,EAAE,WAAW;QACjBJ,SAAS,EAAEA,SAAS;QACpB0B,SAAS,EAAER;MACb,CAAC,CAAC;MACF,OAAOM,cAAc;IACvB,CAAC;IACDG,cAAc,EAAGC,IAAI,IAAK;MACxB,MAAMJ,cAAmD,GAAG;QAAEpB,IAAI,EAAE,CAAC;MAAE,CAAC;MACxEH,aAAa,CAACwB,GAAG,CAACD,cAAc,EAAE;QAChCpB,IAAI,EAAE,WAAW;QACjBJ,SAAS,EAAEA,SAAS;QACpB0B,SAAS,EAAE;UACTtB,IAAI,EAAE,KAAK;UACXe,uBAAuB,EAAES;QAC3B;MACF,CAAC,CAAC;MACF,OAAOJ,cAAc;IACvB;EACF,CAAC;AAGH","ignoreList":[]}
{"version":3,"file":"toDataValue.test.js","names":["Employee","Task","LegacyFauxFoundry","MockOntologiesV2","startNodeApiServer","stubData","beforeAll","describe","expect","it","vi","createClient","createMinimalClient","createAttachmentUpload","isMediaReference","getWireObjectSet","toDataValue","client","clientCtx","mockActionMetadata","apiServer","fn","testSetup","ontologyRid","fauxFoundry","defaultOntologyRid","baseUrl","auth","apiName","close","basic","null","undefined","boolean","date","integer","string","timestamp","convertedBasic","toEqual","attachment","attachmentArray","attachmentSet","Set","recursiveConversion","inner","employee","employee1","ontologyConversion","__primaryKey","task","fetchOne","$primaryKey","clientObjectSet","where","id","definition","expected","objectSetConversion","toMatchInlineSnapshot","definitionConversion","blob","Blob","JSON","stringify","attachmentUpload","converted","toMatch","file","Object","assign","name","type","data","path","boundary","use","MediaReferenceProperties","uploadMedia","mimeType","reference","mediaSetViewItem","mediaItemRid","mediaSetRid","mediaSetViewRid","toBe","mediaReference"],"sources":["toDataValue.test.ts"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ActionMetadata, MediaUpload } from \"@osdk/api\";\nimport { Employee, Task } from \"@osdk/client.test.ontology\";\nimport type { MediaReference } from \"@osdk/foundry.core\";\nimport type { SetupServer } from \"@osdk/shared.test\";\nimport {\n  LegacyFauxFoundry,\n  MockOntologiesV2,\n  startNodeApiServer,\n  stubData,\n} from \"@osdk/shared.test\";\nimport type { MockedFunction } from \"vitest\";\nimport { beforeAll, describe, expect, it, vi } from \"vitest\";\nimport type { Client } from \"../Client.js\";\nimport { createClient } from \"../createClient.js\";\nimport { createMinimalClient } from \"../createMinimalClient.js\";\nimport type { MinimalClient } from \"../MinimalClientContext.js\";\nimport { createAttachmentUpload } from \"../object/AttachmentUpload.js\";\nimport { isMediaReference } from \"../object/mediaUpload.js\";\nimport { getWireObjectSet } from \"../objectSet/createObjectSet.js\";\nimport { toDataValue } from \"./toDataValue.js\";\n\ndescribe(toDataValue, () => {\n  let client: Client;\n  let clientCtx: MinimalClient;\n  let mockActionMetadata: ActionMetadata;\n  let apiServer: SetupServer;\n\n  const mockFetch: MockedFunction<typeof globalThis.fetch> = vi.fn();\n\n  beforeAll(() => {\n    const testSetup = startNodeApiServer(new LegacyFauxFoundry(), createClient);\n    ({ client } = testSetup);\n\n    apiServer = testSetup.apiServer;\n\n    clientCtx = createMinimalClient(\n      { ontologyRid: testSetup.fauxFoundry.defaultOntologyRid },\n      testSetup.fauxFoundry.baseUrl,\n      testSetup.auth,\n      {},\n    );\n\n    // toDataValue only needs the apiName right now, update this if that changes\n    const fakeActionMetadata = {\n      apiName: \"createUnstructuredImageExampleObject\",\n    };\n    mockActionMetadata = fakeActionMetadata as ActionMetadata;\n\n    return () => {\n      testSetup.apiServer.close();\n    };\n  });\n\n  it(\"converts passthrough values correctly\", async () => {\n    // basic pass through types\n    const basic = {\n      null: undefined,\n      boolean: false,\n      date: \"2024-01-01\",\n      integer: 0,\n      string: \"string\",\n      timestamp: \"2024-01-01T00:00:00Z\",\n    };\n    const convertedBasic = await toDataValue(\n      basic,\n      clientCtx,\n      mockActionMetadata,\n    );\n    expect(convertedBasic).toEqual(basic);\n  });\n\n  it(\"recursively converts arrays and sets into array types\", async () => {\n    const attachment = \"rid\";\n    const attachmentArray = [attachment];\n    const attachmentSet = new Set(attachmentArray);\n\n    const recursiveConversion = await toDataValue(\n      {\n        attachment,\n        attachmentArray,\n        attachmentSet,\n      },\n      clientCtx,\n      mockActionMetadata,\n    );\n\n    expect(recursiveConversion).toEqual({\n      attachment: \"rid\",\n      attachmentArray: [\"rid\"],\n      attachmentSet: [\"rid\"],\n    });\n  });\n\n  it(\"recursively handles structs\", async () => {\n    const struct = {\n      inner: {\n        attachment: \"rid\",\n      },\n    };\n\n    const recursiveConversion = await toDataValue(\n      struct,\n      clientCtx,\n      mockActionMetadata,\n    );\n\n    expect(recursiveConversion).toEqual({\n      inner: { attachment: \"rid\" },\n    });\n  });\n\n  it(\"maps an ontology object into just its primary key\", async () => {\n    const employee = stubData.employee1;\n    const ontologyConversion = await toDataValue(\n      employee,\n      clientCtx,\n      mockActionMetadata,\n    );\n    expect(ontologyConversion).toEqual(\n      stubData.employee1.__primaryKey,\n    );\n  });\n\n  it(\"maps an ontology object into just its primary key with osdk wrapper\", async () => {\n    const task = await client(Employee).fetchOne(50030);\n    const ontologyConversion = await toDataValue(\n      task,\n      clientCtx,\n      mockActionMetadata,\n    );\n    expect(ontologyConversion).toEqual(\n      task.$primaryKey,\n    );\n  });\n\n  it(\"passes through object set definitions\", async () => {\n    const clientObjectSet = client(Task).where({ id: 0 });\n    const definition = getWireObjectSet(clientObjectSet);\n\n    const expected = `\n    {\n      \"objectSet\": {\n        \"objectType\": \"Task\",\n        \"type\": \"base\",\n      },\n      \"type\": \"filter\",\n      \"where\": {\n        \"field\": \"id\",\n        \"type\": \"eq\",\n        \"value\": 0,\n      },\n    }\n  `;\n    const objectSetConversion = await toDataValue(\n      clientObjectSet,\n      clientCtx,\n      mockActionMetadata,\n    );\n    expect(objectSetConversion).toMatchInlineSnapshot(\n      expected,\n    );\n\n    const definitionConversion = await toDataValue(\n      definition,\n      clientCtx,\n      mockActionMetadata,\n    );\n    expect(definitionConversion).toMatchInlineSnapshot(expected);\n  });\n\n  it(\"converts blob attachment uploads correctly\", async () => {\n    const blob = new Blob([JSON.stringify({ \"hi\": \"mom\" })]);\n    const attachmentUpload = createAttachmentUpload(blob, \"file1.txt\");\n    const converted = await toDataValue(\n      attachmentUpload,\n      clientCtx,\n      mockActionMetadata,\n    );\n\n    expect(converted).toMatch(/ri\\.attachments.main.attachment\\.[a-z0-9\\-]+/i);\n  });\n\n  it(\"converts file attachment uploads correctly\", async () => {\n    // Mimics the Web file API (https://developer.mozilla.org/en-US/docs/Web/API/File). The File constructor is only available in Node 19.2.0 and above\n    const file = Object.assign(\n      new Blob([\n        JSON.stringify({ name: \"Hello World\" }, null, 2),\n      ], {\n        type: \"application/json\",\n      }),\n      { name: \"file1.txt\" },\n    );\n\n    const converted = await toDataValue(file, clientCtx, mockActionMetadata);\n    expect(converted).toMatch(/ri\\.attachments.main.attachment\\.[a-z0-9\\-]+/i);\n  });\n\n  it(\"converts media uploads correctly\", async () => {\n    const file: MediaUpload = {\n      data: new Blob([\n        JSON.stringify({ name: \"Hello World\" }, null, 2),\n      ], {\n        type: \"application/json\",\n      }),\n      path: \"file.txt\",\n    };\n\n    // TODO: Mock MediaUpload properly in FauxFoundry\n    apiServer.boundary(async () => {\n      apiServer.use(\n        MockOntologiesV2.MediaReferenceProperties.uploadMedia(\n          \"https://stack.palantir.com\",\n          () => {\n            return {\n              mimeType: \"application/json\",\n              reference: {\n                type: \"mediaSetViewItem\",\n                mediaSetViewItem: {\n                  mediaItemRid: \"media-item-rid\",\n                  mediaSetRid: \"media-set-rid\",\n                  mediaSetViewRid: \"media-set-view-rid\",\n                },\n              },\n            };\n          },\n        ),\n      );\n      const converted = await toDataValue(file, clientCtx, mockActionMetadata);\n      expect(isMediaReference(converted)).toBe(true);\n    });\n  });\n\n  it(\"converts media reference correctly\", async () => {\n    const mediaReference: MediaReference = {\n      mimeType: \"application/json\",\n      reference: {\n        type: \"mediaSetViewItem\",\n        mediaSetViewItem: {\n          mediaItemRid: \"media-item-rid\",\n          mediaSetRid: \"media-set-rid\",\n          mediaSetViewRid: \"media-set-view-rid\",\n        },\n      },\n    };\n\n    const converted = await toDataValue(\n      mediaReference,\n      clientCtx,\n      mockActionMetadata,\n    );\n    expect(converted).toEqual(mediaReference);\n  });\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASA,QAAQ,EAAEC,IAAI,QAAQ,4BAA4B;AAG3D,SACEC,iBAAiB,EACjBC,gBAAgB,EAChBC,kBAAkB,EAClBC,QAAQ,QACH,mBAAmB;AAE1B,SAASC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,EAAE,EAAEC,EAAE,QAAQ,QAAQ;AAE5D,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,mBAAmB,QAAQ,2BAA2B;AAE/D,SAASC,sBAAsB,QAAQ,+BAA+B;AACtE,SAASC,gBAAgB,QAAQ,0BAA0B;AAC3D,SAASC,gBAAgB,QAAQ,iCAAiC;AAClE,SAASC,WAAW,QAAQ,kBAAkB;AAE9CT,QAAQ,CAACS,WAAW,EAAE,MAAM;EAC1B,IAAIC,MAAc;EAClB,IAAIC,SAAwB;EAC5B,IAAIC,kBAAkC;EACtC,IAAIC,SAAsB;EAEiCV,EAAE,CAACW,EAAE,CAAC,CAAC;EAElEf,SAAS,CAAC,MAAM;IACd,MAAMgB,SAAS,GAAGlB,kBAAkB,CAAC,IAAIF,iBAAiB,CAAC,CAAC,EAAES,YAAY,CAAC;IAC3E,CAAC;MAAEM;IAAO,CAAC,GAAGK,SAAS;IAEvBF,SAAS,GAAGE,SAAS,CAACF,SAAS;IAE/BF,SAAS,GAAGN,mBAAmB,CAC7B;MAAEW,WAAW,EAAED,SAAS,CAACE,WAAW,CAACC;IAAmB,CAAC,EACzDH,SAAS,CAACE,WAAW,CAACE,OAAO,EAC7BJ,SAAS,CAACK,IAAI,EACd,CAAC,CACH,CAAC;;IAED;;IAIAR,kBAAkB,GAHS;MACzBS,OAAO,EAAE;IACX,CACyD;IAEzD,OAAO,MAAM;MACXN,SAAS,CAACF,SAAS,CAACS,KAAK,CAAC,CAAC;IAC7B,CAAC;EACH,CAAC,CAAC;EAEFpB,EAAE,CAAC,uCAAuC,EAAE,YAAY;IACtD;IACA,MAAMqB,KAAK,GAAG;MACZC,IAAI,EAAEC,SAAS;MACfC,OAAO,EAAE,KAAK;MACdC,IAAI,EAAE,YAAY;MAClBC,OAAO,EAAE,CAAC;MACVC,MAAM,EAAE,QAAQ;MAChBC,SAAS,EAAE;IACb,CAAC;IACD,MAAMC,cAAc,GAAG,MAAMtB,WAAW,CACtCc,KAAK,EACLZ,SAAS,EACTC,kBACF,CAAC;IACDX,MAAM,CAAC8B,cAAc,CAAC,CAACC,OAAO,CAACT,KAAK,CAAC;EACvC,CAAC,CAAC;EAEFrB,EAAE,CAAC,uDAAuD,EAAE,YAAY;IACtE,MAAM+B,UAAU,GAAG,KAAK;IACxB,MAAMC,eAAe,GAAG,CAACD,UAAU,CAAC;IACpC,MAAME,aAAa,GAAG,IAAIC,GAAG,CAACF,eAAe,CAAC;IAE9C,MAAMG,mBAAmB,GAAG,MAAM5B,WAAW,CAC3C;MACEwB,UAAU;MACVC,eAAe;MACfC;IACF,CAAC,EACDxB,SAAS,EACTC,kBACF,CAAC;IAEDX,MAAM,CAACoC,mBAAmB,CAAC,CAACL,OAAO,CAAC;MAClCC,UAAU,EAAE,KAAK;MACjBC,eAAe,EAAE,CAAC,KAAK,CAAC;MACxBC,aAAa,EAAE,CAAC,KAAK;IACvB,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFjC,EAAE,CAAC,6BAA6B,EAAE,YAAY;IAO5C,MAAMmC,mBAAmB,GAAG,MAAM5B,WAAW,CAN9B;MACb6B,KAAK,EAAE;QACLL,UAAU,EAAE;MACd;IACF,CAAC,EAICtB,SAAS,EACTC,kBACF,CAAC;IAEDX,MAAM,CAACoC,mBAAmB,CAAC,CAACL,OAAO,CAAC;MAClCM,KAAK,EAAE;QAAEL,UAAU,EAAE;MAAM;IAC7B,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF/B,EAAE,CAAC,mDAAmD,EAAE,YAAY;IAClE,MAAMqC,QAAQ,GAAGzC,QAAQ,CAAC0C,SAAS;IACnC,MAAMC,kBAAkB,GAAG,MAAMhC,WAAW,CAC1C8B,QAAQ,EACR5B,SAAS,EACTC,kBACF,CAAC;IACDX,MAAM,CAACwC,kBAAkB,CAAC,CAACT,OAAO,CAChClC,QAAQ,CAAC0C,SAAS,CAACE,YACrB,CAAC;EACH,CAAC,CAAC;EAEFxC,EAAE,CAAC,qEAAqE,EAAE,YAAY;IACpF,MAAMyC,IAAI,GAAG,MAAMjC,MAAM,CAACjB,QAAQ,CAAC,CAACmD,QAAQ,CAAC,KAAK,CAAC;IACnD,MAAMH,kBAAkB,GAAG,MAAMhC,WAAW,CAC1CkC,IAAI,EACJhC,SAAS,EACTC,kBACF,CAAC;IACDX,MAAM,CAACwC,kBAAkB,CAAC,CAACT,OAAO,CAChCW,IAAI,CAACE,WACP,CAAC;EACH,CAAC,CAAC;EAEF3C,EAAE,CAAC,uCAAuC,EAAE,YAAY;IACtD,MAAM4C,eAAe,GAAGpC,MAAM,CAAChB,IAAI,CAAC,CAACqD,KAAK,CAAC;MAAEC,EAAE,EAAE;IAAE,CAAC,CAAC;IACrD,MAAMC,UAAU,GAAGzC,gBAAgB,CAACsC,eAAe,CAAC;IAEpD,MAAMI,QAAQ,GAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;IACC,MAAMC,mBAAmB,GAAG,MAAM1C,WAAW,CAC3CqC,eAAe,EACfnC,SAAS,EACTC,kBACF,CAAC;IACDX,MAAM,CAACkD,mBAAmB,CAAC,CAACC,qBAAqB,CAC/CF,QACF,CAAC;IAED,MAAMG,oBAAoB,GAAG,MAAM5C,WAAW,CAC5CwC,UAAU,EACVtC,SAAS,EACTC,kBACF,CAAC;IACDX,MAAM,CAACoD,oBAAoB,CAAC,CAACD,qBAAqB,CAACF,QAAQ,CAAC;EAC9D,CAAC,CAAC;EAEFhD,EAAE,CAAC,4CAA4C,EAAE,YAAY;IAC3D,MAAMoD,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACC,IAAI,CAACC,SAAS,CAAC;MAAE,IAAI,EAAE;IAAM,CAAC,CAAC,CAAC,CAAC;IACxD,MAAMC,gBAAgB,GAAGpD,sBAAsB,CAACgD,IAAI,EAAE,WAAW,CAAC;IAClE,MAAMK,SAAS,GAAG,MAAMlD,WAAW,CACjCiD,gBAAgB,EAChB/C,SAAS,EACTC,kBACF,CAAC;IAEDX,MAAM,CAAC0D,SAAS,CAAC,CAACC,OAAO,CAAC,+CAA+C,CAAC;EAC5E,CAAC,CAAC;EAEF1D,EAAE,CAAC,4CAA4C,EAAE,YAAY;IAC3D;IACA,MAAM2D,IAAI,GAAGC,MAAM,CAACC,MAAM,CACxB,IAAIR,IAAI,CAAC,CACPC,IAAI,CAACC,SAAS,CAAC;MAAEO,IAAI,EAAE;IAAc,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CACjD,EAAE;MACDC,IAAI,EAAE;IACR,CAAC,CAAC,EACF;MAAED,IAAI,EAAE;IAAY,CACtB,CAAC;IAED,MAAML,SAAS,GAAG,MAAMlD,WAAW,CAACoD,IAAI,EAAElD,SAAS,EAAEC,kBAAkB,CAAC;IACxEX,MAAM,CAAC0D,SAAS,CAAC,CAACC,OAAO,CAAC,+CAA+C,CAAC;EAC5E,CAAC,CAAC;EAEF1D,EAAE,CAAC,kCAAkC,EAAE,YAAY;IACjD,MAAM2D,IAAiB,GAAG;MACxBK,IAAI,EAAE,IAAIX,IAAI,CAAC,CACbC,IAAI,CAACC,SAAS,CAAC;QAAEO,IAAI,EAAE;MAAc,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CACjD,EAAE;QACDC,IAAI,EAAE;MACR,CAAC,CAAC;MACFE,IAAI,EAAE;IACR,CAAC;;IAED;IACAtD,SAAS,CAACuD,QAAQ,CAAC,YAAY;MAC7BvD,SAAS,CAACwD,GAAG,CACXzE,gBAAgB,CAAC0E,wBAAwB,CAACC,WAAW,CACnD,4BAA4B,EAC5B,MAAM;QACJ,OAAO;UACLC,QAAQ,EAAE,kBAAkB;UAC5BC,SAAS,EAAE;YACTR,IAAI,EAAE,kBAAkB;YACxBS,gBAAgB,EAAE;cAChBC,YAAY,EAAE,gBAAgB;cAC9BC,WAAW,EAAE,eAAe;cAC5BC,eAAe,EAAE;YACnB;UACF;QACF,CAAC;MACH,CACF,CACF,CAAC;MACD,MAAMlB,SAAS,GAAG,MAAMlD,WAAW,CAACoD,IAAI,EAAElD,SAAS,EAAEC,kBAAkB,CAAC;MACxEX,MAAM,CAACM,gBAAgB,CAACoD,SAAS,CAAC,CAAC,CAACmB,IAAI,CAAC,IAAI,CAAC;IAChD,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF5E,EAAE,CAAC,oCAAoC,EAAE,YAAY;IACnD,MAAM6E,cAA8B,GAAG;MACrCP,QAAQ,EAAE,kBAAkB;MAC5BC,SAAS,EAAE;QACTR,IAAI,EAAE,kBAAkB;QACxBS,gBAAgB,EAAE;UAChBC,YAAY,EAAE,gBAAgB;UAC9BC,WAAW,EAAE,eAAe;UAC5BC,eAAe,EAAE;QACnB;MACF;IACF,CAAC;IAED,MAAMlB,SAAS,GAAG,MAAMlD,WAAW,CACjCsE,cAAc,EACdpE,SAAS,EACTC,kBACF,CAAC;IACDX,MAAM,CAAC0D,SAAS,CAAC,CAAC3B,OAAO,CAAC+C,cAAc,CAAC;EAC3C,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}
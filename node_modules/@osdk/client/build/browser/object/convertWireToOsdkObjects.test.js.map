{"version":3,"file":"convertWireToOsdkObjects.test.js","names":["$ontologyRid","Employee","FooInterface","objectTypeWithAllPropertyTypes","createSharedClientContext","LegacyFauxFoundry","startNodeApiServer","beforeAll","describe","expect","expectTypeOf","it","additionalContext","createClient","createMinimalClient","convertWireToOsdkObjects","convertWireToOsdkObjects2","client","interfaceToObjectTypeMappings","fooSpt","testSetup","apiServer","close","data","employee","fetchPage","Object","keys","sort","toEqual","$as","$link","employee2","where","$and","employeeId","$gt","$lt","JSON","stringify","toMatchInlineSnapshot","employees","length","toBeGreaterThanOrEqual","a","b","getPrototypeOf","toBe","withValues","id","attachment","attachmentArray","toMatchTypeOf","rid","Array","isArray","toBeTruthy","withoutValues","emptyAttachment","emptyAttachmentArray","toBeUndefined","mediaReference","toBeDefined","emptyMedia","somePropertyThatShouldNotExist","toThrow","objAsFoo","clientCtx","ontologyRid","object","__apiName","apiName","__primaryKey","prototypeBefore","object2","undefined","prototypeAfter","not","__title","obj","fullName","__rid","$rid","rejects","toThrowErrorMatchingInlineSnapshot","resolves","to","result","instance","osdk"],"sources":["convertWireToOsdkObjects.test.ts"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Attachment, Media, Osdk, PropertyKeys } from \"@osdk/api\";\nimport {\n  $ontologyRid,\n  Employee,\n  FooInterface,\n  objectTypeWithAllPropertyTypes,\n} from \"@osdk/client.test.ontology\";\nimport type { OntologyObjectV2 } from \"@osdk/foundry.ontologies\";\nimport { createSharedClientContext } from \"@osdk/shared.client.impl\";\nimport { LegacyFauxFoundry, startNodeApiServer } from \"@osdk/shared.test\";\nimport { beforeAll, describe, expect, expectTypeOf, it } from \"vitest\";\nimport { additionalContext, type Client } from \"../Client.js\";\nimport { createClient } from \"../createClient.js\";\nimport { createMinimalClient } from \"../createMinimalClient.js\";\nimport {\n  convertWireToOsdkObjects,\n  convertWireToOsdkObjects2,\n} from \"./convertWireToOsdkObjects.js\";\n\ndescribe(\"convertWireToOsdkObjects\", () => {\n  let client: Client;\n  const interfaceToObjectTypeMappings = {\n    FooInterface: { Employee: { fooSpt: \"fullName\" } },\n  };\n\n  beforeAll(() => {\n    const testSetup = startNodeApiServer(new LegacyFauxFoundry(), createClient);\n    ({ client } = testSetup);\n    return () => {\n      testSetup.apiServer.close();\n    };\n  });\n\n  it(\"configures properties correctly\", async () => {\n    const { data: [employee] } = await client(Employee).fetchPage();\n\n    expect(Object.keys(employee).sort()).toEqual([\n      \"employeeId\",\n      \"$title\",\n      \"fullName\",\n      \"office\",\n      \"class\",\n      \"startDate\",\n      \"employeeSensor\",\n      \"employeeStatus\",\n      \"$apiName\",\n      \"$objectType\",\n      \"$primaryKey\",\n      \"$objectSpecifier\",\n      \"employeeLocation\",\n    ].sort());\n\n    expect(Object.keys(employee.$as)).toEqual([]);\n    expect(Object.keys(employee.$link)).toEqual([\n      \"peeps\",\n      \"lead\",\n      \"officeLink\",\n    ]);\n  });\n\n  it(\"stringifies properties on objects and interfaces correctly\", async () => {\n    const { data: [employee] } = await client(Employee).fetchPage();\n    const { data: [employee2] } = await client(Employee).where({\n      $and: [{ employeeId: { $gt: 50030 } }, { employeeId: { $lt: 50032 } }],\n    }).fetchPage();\n\n    // Should not have $title\n    expect(JSON.stringify(employee)).toMatchInlineSnapshot(\n      `\"{\"employeeId\":50030,\"fullName\":\"John Doe\",\"office\":\"NYC\",\"class\":\"Red\",\"startDate\":\"2019-01-01\",\"employeeStatus\":{},\"employeeSensor\":{},\"employeeLocation\":{},\"$apiName\":\"Employee\",\"$objectType\":\"Employee\",\"$primaryKey\":50030,\"$objectSpecifier\":\"Employee:50030\"}\"`,\n    );\n\n    expect(JSON.stringify(employee.$as(FooInterface))).toMatchInlineSnapshot(\n      `\"{\"$apiName\":\"FooInterface\",\"$objectType\":\"Employee\",\"$primaryKey\":50030,\"$objectSpecifier\":\"Employee:50030\",\"fooSpt\":\"John Doe\"}\"`,\n    );\n\n    // Should have $title\n    expect(JSON.stringify(employee2)).toMatchInlineSnapshot(\n      `\"{\"employeeId\":50031,\"fullName\":\"Jane Doe\",\"office\":\"SEA\",\"class\":\"Blue\",\"startDate\":\"2012-02-12\",\"employeeStatus\":{},\"employeeSensor\":{},\"employeeLocation\":{},\"$apiName\":\"Employee\",\"$objectType\":\"Employee\",\"$primaryKey\":50031,\"$title\":\"Jane Doe\",\"$objectSpecifier\":\"Employee:50031\"}\"`,\n    );\n\n    expect(JSON.stringify(employee2.$as(FooInterface))).toMatchInlineSnapshot(\n      `\"{\"$apiName\":\"FooInterface\",\"$objectType\":\"Employee\",\"$primaryKey\":50031,\"$objectSpecifier\":\"Employee:50031\",\"$title\":\"Jane Doe\",\"fooSpt\":\"Jane Doe\"}\"`,\n    );\n  });\n\n  it(\"reuses the object prototype across objects\", async () => {\n    const employees = await client(Employee).fetchPage();\n    expect(employees.data.length).toBeGreaterThanOrEqual(2);\n    const [a, b] = employees.data;\n\n    expect(Object.getPrototypeOf(Object.getPrototypeOf(a))).toBe(\n      Object.getPrototypeOf(Object.getPrototypeOf(b)),\n    );\n  });\n\n  it(\"converts attachments as expected\", async () => {\n    const withValues = await client(\n      objectTypeWithAllPropertyTypes,\n    )\n      .where({ id: 1 })\n      .fetchPage();\n    expect(withValues.data.length).toBeGreaterThanOrEqual(1);\n\n    const { attachment, attachmentArray } = withValues.data[0];\n\n    expectTypeOf(attachment).toMatchTypeOf<\n      Attachment | undefined\n    >;\n    expect(attachment?.rid).toEqual(\n      \"ri.attachments.main.attachment.86016861-707f-4292-b258-6a7108915a75\",\n    );\n    expect(Array.isArray(attachmentArray)).toBeTruthy();\n    expectTypeOf(attachmentArray![0]).toMatchTypeOf<Attachment>;\n\n    const withoutValues = await client(\n      objectTypeWithAllPropertyTypes,\n    ).where({ id: 2 }).fetchPage();\n\n    const {\n      attachment: emptyAttachment,\n      attachmentArray: emptyAttachmentArray,\n    } = withoutValues.data[0];\n    expect(emptyAttachment).toBeUndefined();\n    expect(emptyAttachmentArray).toBeUndefined();\n  });\n\n  it(\"converts media as expected\", async () => {\n    const withValues = await client(\n      objectTypeWithAllPropertyTypes,\n    )\n      .where({ id: 1 })\n      .fetchPage();\n    expect(withValues.data.length).toBeGreaterThanOrEqual(1);\n\n    const { mediaReference } = withValues.data[0];\n\n    expectTypeOf(mediaReference).toMatchTypeOf<\n      Media | undefined\n    >;\n    expect(mediaReference).toBeDefined();\n\n    const withoutValues = await client(\n      objectTypeWithAllPropertyTypes,\n    ).where({ id: 2 }).fetchPage();\n\n    const {\n      mediaReference: emptyMedia,\n    } = withoutValues.data[0];\n    expect(emptyMedia).toBeUndefined();\n  });\n\n  it(\"creates immutable objects\", async () => {\n    const employees = await client(Employee).fetchPage();\n    expect(employees.data.length).toBeGreaterThanOrEqual(2);\n    const [a, b] = employees.data;\n\n    expect(a).toBeDefined();\n    expect(() => {\n      (a as any).somePropertyThatShouldNotExist = 5;\n    }).toThrow();\n\n    const objAsFoo = a.$as(FooInterface);\n    expect(objAsFoo).toBeDefined();\n    expect(() => {\n      (objAsFoo as any).somePropertyThatShouldNotExist = 5;\n    }).toThrow();\n  });\n\n  it(\"works even with unknown apiNames - old\", async () => {\n    const clientCtx = createMinimalClient(\n      { ontologyRid: $ontologyRid },\n      \"https://stack.palantir.com\",\n      async () => \"myAccessToken\",\n    );\n    createSharedClientContext(\n      \"https://stack.palantir.com\",\n      async () => \"myAccessToken\",\n      \"userAgent\",\n    );\n\n    const object = {\n      __apiName: Employee.apiName,\n      __primaryKey: 0,\n    } as const;\n    const prototypeBefore = Object.getPrototypeOf(object);\n    const object2 = await convertWireToOsdkObjects(\n      clientCtx,\n      [object],\n      undefined,\n      undefined,\n      {},\n      undefined,\n      false,\n    );\n    const prototypeAfter = Object.getPrototypeOf(object2);\n\n    expect(prototypeBefore).not.toBe(prototypeAfter);\n  });\n\n  it(\"works even with unknown apiNames - new\", async () => {\n    const clientCtx = createMinimalClient(\n      { ontologyRid: $ontologyRid },\n      \"https://stack.palantir.com\",\n      async () => \"myAccessToken\",\n    );\n    createSharedClientContext(\n      \"https://stack.palantir.com\",\n      async () => \"myAccessToken\",\n      \"userAgent\",\n    );\n\n    const object = {\n      __apiName: Employee.apiName,\n      __primaryKey: 0,\n    } as const;\n    const prototypeBefore = Object.getPrototypeOf(object);\n    const object2 = await convertWireToOsdkObjects2(\n      clientCtx,\n      [object],\n      undefined,\n      {},\n      undefined,\n      undefined,\n      false,\n    );\n    const prototypeAfter = Object.getPrototypeOf(object2);\n\n    expect(prototypeBefore).not.toBe(prototypeAfter);\n  });\n\n  it(\"reconstitutes interfaces properly without rid - old\", async () => {\n    const clientCtx = createMinimalClient(\n      { ontologyRid: $ontologyRid },\n      \"https://stack.palantir.com\",\n      async () => \"myAccessToken\",\n    );\n\n    const objectFromWire = {\n      __apiName: \"Employee\" as const,\n      __primaryKey: 0,\n      __title: \"Steve\",\n      fooSpt: \"Steve\",\n    } satisfies OntologyObjectV2;\n\n    const [objAsFoo] = (await convertWireToOsdkObjects(\n      clientCtx,\n      [objectFromWire],\n      FooInterface.apiName,\n      undefined,\n      {},\n    )) as unknown as Osdk<FooInterface>[];\n\n    expect(objAsFoo).toMatchInlineSnapshot(`\n      {\n        \"$apiName\": \"FooInterface\",\n        \"$objectSpecifier\": \"Employee:0\",\n        \"$objectType\": \"Employee\",\n        \"$primaryKey\": 0,\n        \"$title\": \"Steve\",\n        \"fooSpt\": \"Steve\",\n      }\n    `);\n\n    const obj = objAsFoo.$as(Employee);\n    expect(obj.fullName).toEqual(\"Steve\");\n\n    expect(obj).toMatchInlineSnapshot(`\n      {\n        \"$apiName\": \"Employee\",\n        \"$objectSpecifier\": \"Employee:0\",\n        \"$objectType\": \"Employee\",\n        \"$primaryKey\": 0,\n        \"$title\": \"Steve\",\n        \"employeeId\": 0,\n        \"fullName\": \"Steve\",\n      }\n    `);\n  });\n\n  it(\"reconstitutes interfaces properly without rid - new\", async () => {\n    const clientCtx = createMinimalClient(\n      { ontologyRid: $ontologyRid },\n      \"https://stack.palantir.com\",\n      async () => \"myAccessToken\",\n    );\n\n    const objectFromWire = {\n      __apiName: \"Employee\" as const,\n      __primaryKey: 0,\n      __title: \"Steve\",\n      fullName: \"Steve\",\n    } satisfies OntologyObjectV2;\n\n    const [objAsFoo] = (await convertWireToOsdkObjects2(\n      clientCtx,\n      [objectFromWire],\n      FooInterface.apiName,\n      {},\n      false,\n      undefined,\n      false,\n      interfaceToObjectTypeMappings,\n    )) as unknown as Osdk<FooInterface>[];\n\n    expect(objAsFoo).toMatchInlineSnapshot(`\n      {\n        \"$apiName\": \"FooInterface\",\n        \"$objectSpecifier\": \"Employee:0\",\n        \"$objectType\": \"Employee\",\n        \"$primaryKey\": 0,\n        \"$title\": \"Steve\",\n        \"fooSpt\": \"Steve\",\n      }\n    `);\n\n    const obj = objAsFoo.$as(Employee);\n    expect(obj.fullName).toEqual(\"Steve\");\n\n    expect(obj).toMatchInlineSnapshot(`\n      {\n        \"$apiName\": \"Employee\",\n        \"$objectSpecifier\": \"Employee:0\",\n        \"$objectType\": \"Employee\",\n        \"$primaryKey\": 0,\n        \"$title\": \"Steve\",\n        \"fullName\": \"Steve\",\n      }\n    `);\n  });\n\n  it(\"reconstitutes interfaces properly with rid\", async () => {\n    const clientCtx = createMinimalClient(\n      { ontologyRid: $ontologyRid },\n      \"https://stack.palantir.com\",\n      async () => \"myAccessToken\",\n    );\n\n    const objectFromWire = {\n      __apiName: \"Employee\" as const,\n      __primaryKey: 0,\n      __title: \"Steve\",\n      __rid: \"hiMom\",\n      fooSpt: \"Steve\",\n    } satisfies OntologyObjectV2;\n\n    const [objAsFoo] = (await convertWireToOsdkObjects(\n      clientCtx,\n      [objectFromWire],\n      FooInterface.apiName,\n      undefined,\n      {},\n    )) as unknown as Osdk<FooInterface, \"$rid\" | \"$all\">[];\n\n    expect(objAsFoo).toMatchInlineSnapshot(`\n      {\n        \"$apiName\": \"FooInterface\",\n        \"$objectSpecifier\": \"Employee:0\",\n        \"$objectType\": \"Employee\",\n        \"$primaryKey\": 0,\n        \"$rid\": \"hiMom\",\n        \"$title\": \"Steve\",\n        \"fooSpt\": \"Steve\",\n      }\n    `);\n    expect(objAsFoo.$rid).toEqual(\"hiMom\");\n\n    const obj = objAsFoo.$as(Employee);\n    expect(obj.fullName).toEqual(\"Steve\");\n\n    expect(obj).toMatchInlineSnapshot(`\n      {\n        \"$apiName\": \"Employee\",\n        \"$objectSpecifier\": \"Employee:0\",\n        \"$objectType\": \"Employee\",\n        \"$primaryKey\": 0,\n        \"$rid\": \"hiMom\",\n        \"$title\": \"Steve\",\n        \"employeeId\": 0,\n        \"fullName\": \"Steve\",\n      }\n    `);\n    expect(obj.$rid).toEqual(\"hiMom\");\n  });\n\n  it(\"reconstitutes interfaces properly with rid - new\", async () => {\n    const clientCtx = createMinimalClient(\n      { ontologyRid: $ontologyRid },\n      \"https://stack.palantir.com\",\n      async () => \"myAccessToken\",\n    );\n\n    const objectFromWire = {\n      __apiName: \"Employee\" as const,\n      __primaryKey: 0,\n      __title: \"Steve\",\n      __rid: \"hiMom\",\n      fullName: \"Steve\",\n      employeeId: 0,\n    } satisfies OntologyObjectV2;\n\n    const [objAsFoo] = (await convertWireToOsdkObjects2(\n      clientCtx,\n      [objectFromWire],\n      FooInterface.apiName,\n      {},\n      false,\n      undefined,\n      false,\n      interfaceToObjectTypeMappings,\n    )) as unknown as Osdk<FooInterface, \"$rid\" | \"$all\">[];\n\n    expect(objAsFoo).toMatchInlineSnapshot(`\n      {\n        \"$apiName\": \"FooInterface\",\n        \"$objectSpecifier\": \"Employee:0\",\n        \"$objectType\": \"Employee\",\n        \"$primaryKey\": 0,\n        \"$rid\": \"hiMom\",\n        \"$title\": \"Steve\",\n        \"fooSpt\": \"Steve\",\n      }\n    `);\n    expect(objAsFoo.$rid).toEqual(\"hiMom\");\n\n    const obj = objAsFoo.$as(Employee);\n    expect(obj.fullName).toEqual(\"Steve\");\n\n    expect(obj).toMatchInlineSnapshot(`\n      {\n        \"$apiName\": \"Employee\",\n        \"$objectSpecifier\": \"Employee:0\",\n        \"$objectType\": \"Employee\",\n        \"$primaryKey\": 0,\n        \"$rid\": \"hiMom\",\n        \"$title\": \"Steve\",\n        \"employeeId\": 0,\n        \"fullName\": \"Steve\",\n      }\n    `);\n    expect(obj.$rid).toEqual(\"hiMom\");\n  });\n\n  describe(\"selection keys\", () => {\n    it(\"throws when required is missing\", async () => {\n      const object = {\n        __apiName: \"Employee\",\n        __primaryKey: 0,\n      } as const;\n\n      await expect(() =>\n        convertWireToOsdkObjects(\n          client[additionalContext],\n          [object],\n          undefined,\n          undefined,\n          {},\n          [\"employeeId\"],\n          \"throw\",\n        )\n      ).rejects.toThrowErrorMatchingInlineSnapshot(\n        `[Error: Unable to safely convert objects as some non nullable properties are null]`,\n      );\n    });\n\n    it(\"does not throw when optional is missing\", async () => {\n      const object = {\n        __apiName: \"Employee\",\n        __primaryKey: 0,\n      } as const;\n\n      await expect(\n        convertWireToOsdkObjects(\n          client[additionalContext],\n          [object],\n          undefined,\n          undefined,\n          {},\n          [\"fullName\"],\n          \"throw\",\n        ),\n      ).resolves.to.not.toBeUndefined();\n    });\n\n    it(\"filters when it should\", async () => {\n      const object = {\n        __apiName: \"Employee\",\n        __primaryKey: 0,\n      } as const;\n\n      const result = await convertWireToOsdkObjects(\n        client[additionalContext],\n        [object],\n        undefined,\n        undefined,\n        {},\n        [\"employeeId\"],\n        \"drop\",\n      );\n\n      expect(result.length).toBe(0);\n    });\n\n    it(\"does not filter when it shouldn't\", async () => {\n      const object = {\n        __apiName: \"Employee\",\n        __primaryKey: 0,\n      } as const;\n\n      const result = await convertWireToOsdkObjects(\n        client[additionalContext],\n        [object],\n        undefined,\n        undefined,\n        {},\n        [\"fullName\"],\n        \"drop\",\n      );\n\n      expect(result.length).toBe(1);\n    });\n  });\n\n  describe(\"selection keys - new\", () => {\n    it(\"throws when required is missing\", async () => {\n      const object = {\n        __apiName: \"Employee\",\n        __primaryKey: 0,\n      } as const;\n\n      await expect(() =>\n        convertWireToOsdkObjects2(\n          client[additionalContext],\n          [object],\n          undefined,\n          {},\n          undefined,\n          [\"employeeId\"],\n          \"throw\",\n        )\n      ).rejects.toThrowErrorMatchingInlineSnapshot(\n        `[Error: Unable to safely convert objects as some non nullable properties are null]`,\n      );\n    });\n\n    it(\"does not throw when optional is missing\", async () => {\n      const object = {\n        __apiName: \"Employee\",\n        __primaryKey: 0,\n      } as const;\n\n      await expect(\n        convertWireToOsdkObjects2(\n          client[additionalContext],\n          [object],\n          undefined,\n          {},\n          undefined,\n          [\"fullName\"],\n          \"throw\",\n        ),\n      ).resolves.to.not.toBeUndefined();\n    });\n\n    it(\"filters when it should\", async () => {\n      const object = {\n        __apiName: \"Employee\",\n        __primaryKey: 0,\n      } as const;\n\n      const result = await convertWireToOsdkObjects2(\n        client[additionalContext],\n        [object],\n        undefined,\n        {},\n        undefined,\n        [\"employeeId\"],\n        \"drop\",\n      );\n\n      expect(result.length).toBe(0);\n    });\n\n    it(\"does not filter when it shouldn't\", async () => {\n      const object = {\n        __apiName: \"Employee\",\n        __primaryKey: 0,\n      } as const;\n\n      const result = await convertWireToOsdkObjects2(\n        client[additionalContext],\n        [object],\n        undefined,\n        {},\n        undefined,\n        [\"fullName\"],\n        \"drop\",\n      );\n\n      expect(result.length).toBe(1);\n    });\n  });\n\n  describe(\"without selection keys\", () => {\n    it(\"throws when required is missing\", async () => {\n      const object = {\n        __apiName: \"Employee\",\n        __primaryKey: 0,\n      } as const;\n\n      await expect(() =>\n        convertWireToOsdkObjects2(\n          client[additionalContext],\n          [object],\n          undefined,\n          {},\n          undefined,\n          undefined,\n          \"throw\",\n        )\n      ).rejects.toThrowErrorMatchingInlineSnapshot(\n        `[Error: Unable to safely convert objects as some non nullable properties are null]`,\n      );\n    });\n\n    it(\"does not throw when required is present\", async () => {\n      const object = {\n        __apiName: \"Employee\",\n        __primaryKey: 0,\n        \"employeeId\": 0,\n      } as const;\n\n      await expect(\n        convertWireToOsdkObjects2(\n          client[additionalContext],\n          [object],\n          undefined,\n          {},\n          undefined,\n          undefined,\n          \"throw\",\n        ),\n      ).resolves.to.not.toBeUndefined();\n    });\n\n    it(\"filters when it should\", async () => {\n      const object = {\n        __apiName: \"Employee\",\n        __primaryKey: 0,\n      } as const;\n\n      const result = await convertWireToOsdkObjects2(\n        client[additionalContext],\n        [object],\n        undefined,\n        {},\n        undefined,\n        undefined,\n        \"drop\",\n      );\n\n      expect(result.length).toBe(0);\n    });\n\n    it(\"does not filter when it shouldn't\", async () => {\n      const object = {\n        __apiName: \"Employee\",\n        __primaryKey: 0,\n        \"employeeId\": 0,\n      } as const;\n\n      const result = await convertWireToOsdkObjects2(\n        client[additionalContext],\n        [object],\n        undefined,\n        {},\n        undefined,\n        undefined,\n        \"drop\",\n      );\n\n      expect(result.length).toBe(1);\n    });\n  });\n\n  describe(\"without selection keys - new\", () => {\n    it(\"throws when required is missing\", async () => {\n      const object = {\n        __apiName: \"Employee\",\n        __primaryKey: 0,\n      } as const;\n\n      await expect(() =>\n        convertWireToOsdkObjects2(\n          client[additionalContext],\n          [object],\n          undefined,\n          {},\n          undefined,\n          undefined,\n          \"throw\",\n        )\n      ).rejects.toThrowErrorMatchingInlineSnapshot(\n        `[Error: Unable to safely convert objects as some non nullable properties are null]`,\n      );\n    });\n\n    it(\"does not throw when required is present\", async () => {\n      const object = {\n        __apiName: \"Employee\",\n        __primaryKey: 0,\n        \"employeeId\": 0,\n      } as const;\n\n      await expect(\n        convertWireToOsdkObjects2(\n          client[additionalContext],\n          [object],\n          undefined,\n          {},\n          undefined,\n          undefined,\n          \"throw\",\n        ),\n      ).resolves.to.not.toBeUndefined();\n    });\n\n    it(\"filters when it should\", async () => {\n      const object = {\n        __apiName: \"Employee\",\n        __primaryKey: 0,\n      } as const;\n\n      const result = await convertWireToOsdkObjects2(\n        client[additionalContext],\n        [object],\n        undefined,\n        {},\n        undefined,\n        undefined,\n        \"drop\",\n      );\n\n      expect(result.length).toBe(0);\n    });\n\n    it(\"does not filter when it shouldn't\", async () => {\n      const object = {\n        __apiName: \"Employee\",\n        __primaryKey: 0,\n        \"employeeId\": 0,\n      } as const;\n\n      const result = await convertWireToOsdkObjects2(\n        client[additionalContext],\n        [object],\n        undefined,\n        {},\n        undefined,\n        undefined,\n        \"drop\",\n      );\n\n      expect(result.length).toBe(1);\n    });\n  });\n\n  it(\"behaves correctly when converting\", async () => {\n    const object = {\n      __apiName: \"Employee\",\n      __primaryKey: 0,\n      fooSpt: \"hi\",\n    } as const;\n\n    const result = await convertWireToOsdkObjects2(\n      client[additionalContext],\n      [object],\n      \"FooInterface\",\n      {},\n      undefined,\n      [\"fooSpt\"],\n      \"drop\",\n      interfaceToObjectTypeMappings,\n    );\n\n    expect(result.length).toBe(1);\n  });\n});\n\ndescribe(\"Osdk.Instance\", () => {\n  it(\"is assignable to Osdk<>\", () => {\n    const instance: Osdk.Instance<Employee> = {} as any;\n    const osdk: Osdk<Employee> = instance;\n  });\n\n  it(\"is assignable from Osdk<>\", () => {\n    const osdk: Osdk<Employee> = {} as any;\n    const instance: Osdk.Instance<Employee> = osdk;\n  });\n\n  it(\"is assignable to Osdk<> with $notStrict\", () => {\n    const instance: Osdk.Instance<Employee> = {} as any;\n    const osdk: Osdk<Employee, \"$notStrict\"> = instance;\n    const osdk2: Osdk<Employee, \"$notStrict\" | \"$all\"> = instance;\n  });\n\n  it(\"is assignable from Osdk<> with $notStrict\", () => {\n    const osdk: Osdk<Employee, \"$notStrict\"> = {} as any;\n    const osdk2: Osdk<Employee, \"$notStrict\" | \"$all\"> = osdk;\n    const instance: Osdk.Instance<Employee> = osdk;\n    const instance2: Osdk.Instance<Employee> = osdk2;\n  });\n\n  it(\"object with any for props is assignable to its normal self\", () => {\n    const foo: readonly Osdk.Instance<Employee, never, any>[] = {} as any;\n\n    const bar: readonly Osdk.Instance<\n      Employee,\n      never,\n      PropertyKeys<Employee>\n    >[] = foo;\n  });\n});\n"],"mappings":"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","ignoreList":[]}
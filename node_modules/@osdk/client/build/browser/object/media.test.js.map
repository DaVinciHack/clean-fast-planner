{"version":3,"file":"media.test.js","names":["$ontologyRid","objectTypeWithAllPropertyTypes","LegacyFauxFoundry","startNodeApiServer","stubData","beforeAll","describe","expect","it","createClient","client","testSetup","fauxFoundry","getDataStore","registerMedia","apiName","TextEncoder","encode","JSON","stringify","content","objectWithAllPropertyTypes1","mediaReference","reference","mediaSetViewItem","mediaItemRid","apiServer","close","result","where","id","fetchPage","object1","data","toBeDefined","mediaMetadata","fetchMetadata","toEqual","path","mediaType","sizeBytes","mediaContent","fetchContents","json","getMediaReference","mimeType","type","mediaSetRid","mediaSetViewRid"],"sources":["media.test.ts"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  $ontologyRid,\n  objectTypeWithAllPropertyTypes,\n} from \"@osdk/client.test.ontology\";\nimport {\n  LegacyFauxFoundry,\n  startNodeApiServer,\n  stubData,\n} from \"@osdk/shared.test\";\nimport { beforeAll, describe, expect, it } from \"vitest\";\nimport type { Client } from \"../Client.js\";\nimport { createClient } from \"../createClient.js\";\n\ndescribe(\"media\", () => {\n  let client: Client;\n\n  beforeAll(() => {\n    const testSetup = startNodeApiServer(\n      new LegacyFauxFoundry(),\n      createClient,\n    );\n\n    ({ client } = testSetup);\n\n    testSetup.fauxFoundry\n      .getDataStore($ontologyRid)\n      .registerMedia(\n        objectTypeWithAllPropertyTypes.apiName,\n        \"mediaReference\",\n        new TextEncoder().encode(\n          JSON.stringify({ content: \"Hello World\" }),\n        ),\n        \"application/json\",\n        \"file1.txt\",\n        stubData.objectWithAllPropertyTypes1.mediaReference.reference\n          .mediaSetViewItem.mediaItemRid,\n      );\n\n    return () => {\n      testSetup.apiServer.close();\n    };\n  });\n\n  it(\"reads media metadata successfully\", async () => {\n    const result = await client(\n      objectTypeWithAllPropertyTypes,\n    )\n      .where({ id: stubData.objectWithAllPropertyTypes1.id }).fetchPage();\n\n    const object1 = result.data[0];\n    expect(object1.mediaReference).toBeDefined();\n    const mediaMetadata = await object1.mediaReference?.fetchMetadata();\n    expect(mediaMetadata).toEqual({\n      path: \"file1.txt\",\n      mediaType: \"application/json\",\n      sizeBytes: 25,\n    });\n  });\n\n  it(\"reads media content successfully\", async () => {\n    const result = await client(objectTypeWithAllPropertyTypes)\n      .where({ id: stubData.objectWithAllPropertyTypes1.id }).fetchPage();\n\n    const object1 = result.data[0];\n    expect(object1.mediaReference).toBeDefined();\n    const mediaContent = await object1?.mediaReference?.fetchContents();\n    expect(await mediaContent!.json()).toEqual({\n      content: \"Hello World\",\n    });\n  });\n\n  it(\"gets media reference successfully\", async () => {\n    const result = await client(objectTypeWithAllPropertyTypes)\n      .where({ id: stubData.objectWithAllPropertyTypes1.id }).fetchPage();\n\n    const object1 = result.data[0];\n    expect(object1.mediaReference).toBeDefined();\n    const mediaReference = object1.mediaReference?.getMediaReference();\n    expect(mediaReference).toEqual({\n      mimeType: \"application/pdf\",\n      reference: {\n        type: \"mediaSetViewItem\",\n        mediaSetViewItem: {\n          mediaSetRid:\n            \"ri.mio.main.media-set.4153d42f-ca4b-4e42-8ca5-8e6aa7edb642\",\n          mediaSetViewRid:\n            \"ri.mio.main.view.82a798ad-d637-4595-acc6-987bcf16629b\",\n          mediaItemRid:\n            \"ri.mio.main.media-item.001ec98b-1620-4814-9e17-8e9c4e536225\",\n        },\n      },\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]}
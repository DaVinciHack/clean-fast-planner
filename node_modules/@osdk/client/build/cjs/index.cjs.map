{"version":3,"sources":["../../src/actions/ActionValidationError.ts","../../src/objectSet/conjureUnionType.ts","../../src/ontology/makeConjureContext.ts","../../src/pageRequestAsAsyncIter.ts","../../src/object/SimpleCache.ts","../../src/__unstable/ConjureSupport.ts","../../src/__unstable/createBulkLinksAsyncIterFactory.ts","../../src/object/AttachmentUpload.ts","../../src/object/mediaUpload.ts","../../src/util/interfaceUtils.ts","../../src/util/isObjectSpecifiersObject.ts","../../src/util/isOntologyObjectV2.ts","../../src/util/isPoint.ts","../../src/util/toDataValue.ts","../../src/actions/applyAction.ts","../../src/util/streamutils.ts","../../src/util/timeseriesUtils.ts","../../src/createGeotimeSeriesProperty.ts","../../src/createMediaReferenceProperty.ts","../../src/createTimeseriesProperty.ts","../../src/util/objectSpecifierUtils.ts","../../src/ontology/OntologyProvider.ts","../../src/object/convertWireToOsdkObjects/createOsdkInterface.ts","../../src/object/convertWireToOsdkObjects/getDollarAs.ts","../../src/object/convertWireToOsdkObjects/getDollarLink.ts","../../src/object/convertWireToOsdkObjects/createOsdkObject.ts","../../src/object/convertWireToOsdkObjects.ts","../../src/object/Cache.ts","../../src/ontology/loadActionMetadata.ts","../../src/ontology/loadFullObjectMetadata.ts","../../src/ontology/loadInterfaceMetadata.ts","../../src/ontology/loadQueryMetadata.ts","../../src/ontology/StandardOntologyProvider.ts","../../src/util/UserAgent.ts","../../src/createMinimalClient.ts","../../src/fetchMetadata.ts","../../src/util/toDataValueQueries.ts","../../src/queries/applyQuery.ts","../../src/createClient.ts","../../src/createPlatformClient.ts","../../src/util/datetimeConverters.ts"],"names":["loadAllOntologies","invariant","getLinkTypesForObjectTypes","bulkLoadOntologyEntities","getBulkLinksPage","value","Attachment_exports","isWireObjectSet","isObjectSet","getWireObjectSet","addUserAgentAndRequestContextHeaders","augmentRequestContext","Action_exports","TimeseriesDurationMapping","TimeSeriesValueBankProperty_exports","MediaReferenceProperty_exports","TimeSeriesPropertyV2_exports","extractNamespace","UnderlyingOsdkObject","InterfaceDefRef","ObjectDefRef","ClientRef","fetchSingle","fetchSingleWithErrors","hydrateAttachmentFromRidInternal","ActionTypeV2_exports","wireActionTypeV2ToSdkActionMetadata","ObjectTypeV2_exports","wireObjectTypeFullMetadataToSdkObjectMetadata","OntologyInterface_exports","__UNSTABLE_wireInterfaceTypeV2ToSdkObjectDefinition","QueryType_exports","wireQueryTypeV2ToSdkQueryMetadata","client","createObjectSet","createSharedClientContext","Query_exports","ontologyRid","MinimalLogger","__EXPERIMENTAL__NOT_SUPPORTED_YET__getBulkLinks","__EXPERIMENTAL__NOT_SUPPORTED_YET__fetchOneByRid","options","__EXPERIMENTAL__NOT_SUPPORTED_YET__createMediaReference","__EXPERIMENTAL__NOT_SUPPORTED_YET__fetchPageByRid","fetchPage","symbolClientContext","additionalContext"],"mappings":"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","file":"index.cjs","sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ActionValidationError extends Error {\n  constructor(validation) {\n    super(\"Validation Error: \" + JSON.stringify(validation, null, 2));\n    this.validation = validation;\n  }\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Helper function that creates the shape of a conjure union in fewer bytes than manually declaring it (when compressed)\n *\n * e.g `{type:\"base\",base:{foo:5}}` becomes `a(\"base\",{foo:5})`\n */\nexport function conjureUnionType(type, value) {\n  return {\n    type,\n    [type]: value\n  };\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function makeConjureContext({\n  baseUrl,\n  fetch: fetchFn,\n  tokenProvider\n}, servicePath) {\n  return {\n    baseUrl,\n    servicePath,\n    fetchFn,\n    tokenProvider\n  };\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function getResults(x) {\n  return x.results;\n}\nexport function applyPageToken(payload, {\n  pageToken\n}) {\n  return pageToken ? {\n    ...payload,\n    pageToken\n  } : undefined;\n}\nexport async function* pageRequestAsAsyncIter(call, values, nextArgs, initialPayload) {\n  let payload = initialPayload;\n  while (payload) {\n    const r = await call(payload);\n    for (const q of values(r)) {\n      yield q;\n    }\n    payload = nextArgs(payload, r);\n  }\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A simple cache that can be used to store values for a given client.\n */\n\n/**\n * Create a new cache with a factory function.\n * @param fn A factory function that will be used to create the value if it does not exist in the cache.\n */\n\n/**\n * Create a new cache without a factory function.\n */\n\nexport function createSimpleCache(map = new Map(), fn) {\n  function get(key) {\n    let r = map.get(key);\n    if (r === undefined && fn !== undefined) {\n      return set(key, fn(key));\n    } else {\n      return r;\n    }\n  }\n  function set(key, value) {\n    map.set(key, value);\n    return value;\n  }\n  function remove(key) {\n    return map.delete(key);\n  }\n  return {\n    get,\n    set,\n    remove\n  };\n}\n/**\n * A simple async cache that can be used to store values for a given client.\n */\n\n/**\n * Create a new cache with an async factory function.\n * @param fn A factory function that will be used to create the value if it does not exist in the cache.\n * @returns\n */\n\nexport function createSimpleAsyncCache(type, fn, createCacheLocal = createSimpleCache) {\n  const cache = createCacheLocal(type === \"weak\" ? new WeakMap() : new Map());\n  const inProgress = createCacheLocal(type === \"weak\" ? new WeakMap() : new Map());\n  const ret = {\n    getOrUndefined: function getOrUndefined(key) {\n      return cache.get(key);\n    },\n    get: async function get(key) {\n      return cache.get(key) ?? inProgress.get(key) ?? ret.set(key, fn(key));\n    },\n    set: async function set(k, v) {\n      // the `.set` happens first to prevent races.\n      try {\n        const r = await inProgress.set(k, v); // returns v\n\n        cache.set(k, r);\n        inProgress.remove(k);\n        return r;\n      } catch (e) {\n        // we don't want to cache failures\n        inProgress.remove(k);\n        throw e;\n      }\n    }\n  };\n  return ret;\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bulkLoadOntologyEntities, getLinkTypesForObjectTypes, loadAllOntologies } from \"@osdk/client.unstable\";\nimport invariant from \"tiny-invariant\";\nimport { createSimpleAsyncCache, createSimpleCache } from \"../object/SimpleCache.js\";\nimport { makeConjureContext } from \"../ontology/makeConjureContext.js\";\nlet cachedAllOntologies;\nasync function getOntologyVersionForRid(ctx, ontologyRid) {\n  cachedAllOntologies ??= await loadAllOntologies(ctx, {});\n  !cachedAllOntologies.ontologies[ontologyRid] ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"ontology should be loaded\") : invariant(false) : void 0;\n  return cachedAllOntologies.ontologies[ontologyRid].currentOntologyVersion;\n}\nconst strongMemoSync = fn => createSimpleCache(new Map(), fn).get;\nconst weakMemoSync = fn => createSimpleCache(new WeakMap(), fn).get; // FIXME\n\nconst strongMemoAsync = fn => createSimpleAsyncCache(\"strong\", fn).get;\nconst weakMemoAsync = fn => createSimpleAsyncCache(\"weak\", fn).get;\nexport class MetadataClient {\n  #client;\n  #ctx;\n  #logger;\n  constructor(client) {\n    this.#client = client;\n    this.#ctx = makeConjureContext(client, \"ontology-metadata/api\");\n    this.#client.ontologyProvider.getObjectDefinition;\n    this.#logger = this.#client.logger?.child({\n      mcc: true\n    });\n  }\n  forObjectByRid = strongMemoAsync(async rid => {\n    return Promise.resolve({\n      getPropertyMapping: this.#objectPropertyMapping.bind(this, rid),\n      getLinkMapping: this.#objectLinkMapping.bind(this, rid),\n      getRid: () => rid,\n      getApiName: async () => (await this.#getConjureObjectType(rid)).apiName\n    });\n  });\n  forObjectByApiName = strongMemoAsync(async objectApiName => {\n    const objectDef = await this.#client.ontologyProvider.getObjectDefinition(objectApiName);\n    return this.forObjectByRid(objectDef.rid);\n  });\n  #objectPropertyMapping = strongMemoAsync(async objectTypeRid => {\n    const conjureObjectType = await this.#getConjureObjectType(objectTypeRid);\n    return createObjectPropertyMapping(conjureObjectType);\n  });\n  #objectLinkMapping = strongMemoAsync(async objectTypeRid => {\n    const linkTypes = await getLinkTypesForObjectTypes(this.#ctx, {\n      includeObjectTypesWithoutSearchableDatasources: true,\n      loadRedacted: false,\n      objectTypeBranches: {},\n      objectTypeVersions: {\n        [objectTypeRid]: await this.ontologyVersion(\"\")\n      }\n    });\n    !linkTypes.linkTypes[objectTypeRid] ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"link type should be loaded\") : invariant(false) : void 0;\n\n    // apiName to content\n    const ret = {};\n    for (const l of linkTypes.linkTypes[objectTypeRid]) {\n      const helper = ({\n        apiName\n      }, linkSide, otherObjectType) => {\n        if (apiName) {\n          ret[apiName] = {\n            apiName,\n            directedLinkTypeRid: {\n              linkTypeRid: l.rid,\n              linkSide\n            },\n            otherObjectType\n          };\n        }\n      };\n      if (l.definition.type === \"oneToMany\") {\n        const {\n          oneToMany: {\n            objectTypeRidManySide,\n            manyToOneLinkMetadata,\n            objectTypeRidOneSide,\n            oneToManyLinkMetadata\n          }\n        } = l.definition;\n        if (objectTypeRidManySide === objectTypeRid) {\n          helper(manyToOneLinkMetadata, \"TARGET\", objectTypeRidOneSide);\n        }\n        if (objectTypeRidOneSide === objectTypeRid) {\n          helper(oneToManyLinkMetadata, \"SOURCE\", objectTypeRidManySide);\n        }\n      } else if (l.definition.type === \"manyToMany\") {\n        const {\n          manyToMany: {\n            objectTypeRidA,\n            objectTypeAToBLinkMetadata,\n            objectTypeRidB,\n            objectTypeBToALinkMetadata\n          }\n        } = l.definition;\n        if (objectTypeRidA === objectTypeRid) {\n          helper(objectTypeAToBLinkMetadata, \"SOURCE\", objectTypeRidB);\n        }\n        if (objectTypeRidB === objectTypeRid) {\n          helper(objectTypeBToALinkMetadata, \"TARGET\", objectTypeRidA);\n        }\n      }\n    }\n    return ret;\n  });\n  #getConjureObjectType = strongMemoAsync(async objectTypeRid => {\n    this.#logger?.debug(`getConjureObjectType(${objectTypeRid})`);\n    const body = {\n      datasourceTypes: [],\n      objectTypes: [{\n        identifier: {\n          type: \"objectTypeRid\",\n          objectTypeRid: objectTypeRid\n        },\n        versionReference: {\n          type: \"ontologyVersion\",\n          ontologyVersion: await this.ontologyVersion(\"\")\n        }\n      }],\n      linkTypes: [],\n      sharedPropertyTypes: [],\n      interfaceTypes: [],\n      typeGroups: [],\n      loadRedacted: false,\n      includeObjectTypeCount: undefined,\n      includeObjectTypesWithoutSearchableDatasources: true,\n      includeEntityMetadata: undefined,\n      actionTypes: [],\n      includeTypeGroupEntitiesCount: undefined,\n      entityMetadata: undefined\n    };\n    const entities = await bulkLoadOntologyEntities(this.#ctx, undefined, body);\n    !entities.objectTypes[0]?.objectType ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"object type should be loaded\") : invariant(false) : void 0;\n    return entities.objectTypes[0].objectType;\n  });\n  ontologyVersion = strongMemoAsync(async _ => getOntologyVersionForRid(this.#ctx, await this.#client.ontologyRid));\n}\nexport const metadataCacheClient = weakMemoAsync(client => Promise.resolve(new MetadataClient(client)));\nfunction createObjectPropertyMapping(conjureOT) {\n  !(conjureOT.primaryKeys.length === 1) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `only one primary key supported, got ${conjureOT.primaryKeys.length}`) : invariant(false) : void 0;\n  const pkRid = conjureOT.primaryKeys[0];\n  const pkProperty = Object.values(conjureOT.propertyTypes).find(a => a.rid === pkRid);\n  if (!pkProperty) {\n    throw new Error(`Could not find PK property by rid: ${pkRid}`);\n  }\n  const propertyIdToApiNameMapping = Object.fromEntries(Object.values(conjureOT.propertyTypes).map(property => {\n    return [property.id, property.apiName];\n  }));\n  const propertyApiNameToIdMapping = Object.fromEntries(Object.values(conjureOT.propertyTypes).map(property => {\n    return [property.apiName, property.id];\n  }));\n  return {\n    apiName: conjureOT.apiName,\n    id: conjureOT.id,\n    propertyIdToApiNameMapping,\n    propertyApiNameToIdMapping,\n    pk: {\n      rid: pkRid,\n      apiName: pkProperty.apiName,\n      type: pkProperty.type\n    }\n  };\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getBulkLinksPage } from \"@osdk/client.unstable\";\nimport invariant from \"tiny-invariant\";\nimport { conjureUnionType } from \"../objectSet/conjureUnionType.js\";\nimport { makeConjureContext } from \"../ontology/makeConjureContext.js\";\nimport { applyPageToken, getResults, pageRequestAsAsyncIter } from \"../pageRequestAsAsyncIter.js\";\nimport { metadataCacheClient } from \"./ConjureSupport.js\";\nexport function createBulkLinksAsyncIterFactory(ctx) {\n  return async function* (objs, linkTypes) {\n    if (objs.length === 0) {\n      return;\n    }\n    ctx.logger?.debug(\"Preparing to fetch bulk links\");\n\n    // require all objects to be the same type for now\n    !objs.every(a => a.$objectType === objs[0].$objectType) ? process.env.NODE_ENV !== \"production\" ? invariant(false) : invariant(false) : void 0;\n    const mcc = await metadataCacheClient(ctx);\n    const helper = await mcc.forObjectByApiName(objs[0].$objectType);\n    const [objectTypeRid, propertyMapping, fullLinkMapping] = await Promise.all([helper.getRid(), helper.getPropertyMapping(), helper.getLinkMapping()]);\n    const linkMapping = Object.fromEntries(Object.entries(fullLinkMapping).filter(([apiName]) => linkTypes.includes(apiName)));\n\n    // make sure the link being requested exists\n    for (const linkType of linkTypes) {\n      if (linkMapping[linkType] == null) {\n        throw \"Unable to find link type: \" + linkType;\n      }\n    }\n    const req = {\n      objectSetContext: {\n        forkRid: undefined,\n        objectSetFilterContext: {\n          parameterOverrides: {}\n        },\n        ontologyBranchRid: undefined,\n        owningRid: undefined,\n        reportUsage: undefined,\n        workstateRid: undefined\n      },\n      responseOptions: {\n        includeObjectSetEntities: true,\n        includeUsageCost: false\n      },\n      pageSize: 1000,\n      pageToken: undefined,\n      linksRequests: [{\n        directedLinkTypes: Object.values(linkMapping).map(({\n          directedLinkTypeRid\n        }) => directedLinkTypeRid),\n        objects: conjureUnionType(\"objects\", objs.map(o => conjureUnionType(\"objectLocatorV2\", {\n          objectTypeRid,\n          objectPrimaryKey: {\n            [propertyMapping.pk.rid]: conjureUnionType(propertyMapping.pk.type.type, o.$primaryKey)\n          }\n        })))\n      }]\n    };\n    const bulkLinksIter = pageRequestAsAsyncIter(getBulkLinksPage.bind(undefined, makeConjureContext(ctx, \"object-set-service/api\")), getResults, applyPageToken, req);\n    for await (const item of bulkLinksIter) {\n      const {\n        objectIdentifier\n      } = item;\n      const obj = findObject(objectIdentifier, objs);\n      for (const link of item.links) {\n        const ref = link.link[link.linkSide === \"SOURCE\" ? \"objectSideB\" : \"objectSideA\"];\n        const pk = getPrimaryKeyOrThrow(ref);\n        const otherObjectApiName = await (await mcc.forObjectByRid(pk.objectTypeRid)).getApiName();\n        const mappedLink = Object.values(linkMapping).find(a => a.directedLinkTypeRid.linkTypeRid === link.link.linkTypeRid && a.directedLinkTypeRid.linkSide === link.linkSide);\n        if (!mappedLink) throw new Error(\"Could not find link type\"); // should not happens\n\n        yield {\n          object: obj,\n          linkApiName: mappedLink.apiName,\n          otherObjectApiName: otherObjectApiName,\n          otherObjectPk: pk.pkValue\n        };\n      }\n    }\n  };\n}\nfunction findObject(objectIdentifier, objs) {\n  const {\n    pkValue\n  } = getPrimaryKeyOrThrow(objectIdentifier);\n  const obj = objs.find(o => o.$primaryKey === pkValue);\n  if (obj == null) {\n    throw new Error(`Needed to find object with pk ${pkValue}} and could not`);\n  }\n  return obj;\n}\nfunction getPrimaryKeyOrThrow(ref) {\n  if (\"type\" in ref && ref.type !== \"objectLocatorV2\") {\n    throw new Error(\"We do not support looking up object by rid\");\n  }\n  const pks = Object.entries(ref.objectLocatorV2.objectPrimaryKey);\n  if (pks.length !== 1) {\n    throw new Error(\"Unable to support this request due to multiple pks\");\n  }\n  return {\n    objectTypeRid: ref.objectLocatorV2.objectTypeRid,\n    pkValue: pks[0][1][pks[0][1].type]\n  };\n}","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function isAttachmentUpload(o) {\n  return typeof o === `object` && \"name\" in o && \"data\" in o && o.data instanceof Blob;\n}\nexport function isAttachmentFile(o) {\n  return typeof o === \"object\" && o instanceof Blob && \"name\" in o;\n}\nexport function createAttachmentUpload(data, name) {\n  return {\n    data,\n    name\n  };\n}","/*\n * Copyright 2025 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function isMediaReference(o) {\n  return typeof o === `object` && typeof o.mimeType === \"string\" && \"reference\" in o && typeof o.reference === \"object\" && o.reference.type === \"mediaSetViewItem\" && \"mediaSetViewItem\" in o.reference && typeof o.reference.mediaSetViewItem === \"object\" && typeof o.reference.mediaSetViewItem.mediaSetRid === \"string\" && typeof o.reference.mediaSetViewItem.mediaSetViewRid === \"string\" && typeof o.reference.mediaSetViewItem.mediaItemRid === \"string\";\n}","/*\n * Copyright 2025 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @internal */\nexport function isInterfaceActionParam(o) {\n  return o != null && typeof o === \"object\" && \"$objectType\" in o && \"$primaryKey\" in o;\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function isObjectSpecifiersObject(o) {\n  return o && typeof o === \"object\" && typeof o.$apiName === \"string\" && o.$primaryKey != null;\n}","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @internal */\nexport function isOntologyObjectV2(o) {\n  return o && typeof o === \"object\" && typeof o.__apiName === \"string\" && o.__primaryKey != null;\n}","/*\n * Copyright 2025 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function isPoint(o) {\n  return o && typeof o === \"object\" && \"type\" in o && o.type === \"Point\" && \"coordinates\" in o && o.coordinates.length === 2;\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as OntologiesV2 from \"@osdk/foundry.ontologies\";\nimport { isAttachmentFile, isAttachmentUpload } from \"../object/AttachmentUpload.js\";\nimport { isMediaReference } from \"../object/mediaUpload.js\";\nimport { getWireObjectSet, isObjectSet } from \"../objectSet/createObjectSet.js\";\nimport { isInterfaceActionParam } from \"./interfaceUtils.js\";\nimport { isObjectSpecifiersObject } from \"./isObjectSpecifiersObject.js\";\nimport { isOntologyObjectV2 } from \"./isOntologyObjectV2.js\";\nimport { isPoint } from \"./isPoint.js\";\nimport { isWireObjectSet } from \"./WireObjectSet.js\";\n\n/**\n * Marshall user-facing data into the wire DataValue type\n *\n * @see DataValue for the expected payloads\n * @internal\n */\nexport async function toDataValue(value, client) {\n  if (value == null) {\n    // typeof null is 'object' so do this first\n    return value;\n  }\n\n  // arrays and sets are both sent over the wire as arrays\n  if (Array.isArray(value) || value instanceof Set) {\n    const values = Array.from(value);\n    if (values.some(dataValue => isAttachmentUpload(dataValue) || isAttachmentFile(dataValue))) {\n      const converted = [];\n      for (const value of values) {\n        converted.push(await toDataValue(value, client));\n      }\n      return converted;\n    }\n    const promiseArray = Array.from(value, async innerValue => await toDataValue(innerValue, client));\n    return Promise.all(promiseArray);\n  }\n\n  // For uploads, we need to upload ourselves first to get the RID of the attachment\n  if (isAttachmentUpload(value)) {\n    const attachment = await OntologiesV2.Attachments.upload(client, value.data, {\n      filename: value.name\n    });\n    return await toDataValue(attachment.rid, client);\n  }\n  if (isAttachmentFile(value)) {\n    const attachment = await OntologiesV2.Attachments.upload(client, value, {\n      filename: value.name\n    });\n    return await toDataValue(attachment.rid, client);\n  }\n\n  // objects just send the JSON'd primaryKey\n  if (isOntologyObjectV2(value)) {\n    return await toDataValue(value.__primaryKey, client);\n  }\n  if (isObjectSpecifiersObject(value)) {\n    return await toDataValue(value.$primaryKey, client);\n  }\n  if (isPoint(value)) {\n    return await toDataValue(value.coordinates.join(), client);\n  }\n\n  // object set (the rid as a string (passes through the last return), or the ObjectSet definition directly)\n  if (isWireObjectSet(value)) {\n    return value;\n  }\n  if (isObjectSet(value)) {\n    return getWireObjectSet(value);\n  }\n  if (isMediaReference(value)) {\n    return value;\n  }\n  if (isInterfaceActionParam(value)) {\n    return {\n      objectTypeApiName: value.$objectType,\n      primaryKeyValue: value.$primaryKey\n    };\n  }\n\n  // TODO (during queries implementation)\n  // two dimensional aggregation\n  // three dimensional aggregation\n\n  // struct\n  if (typeof value === \"object\") {\n    return Object.entries(value).reduce(async (promisedAcc, [key, structValue]) => {\n      const acc = await promisedAcc;\n      acc[key] = await toDataValue(structValue, client);\n      return acc;\n    }, Promise.resolve({}));\n  }\n\n  // expected to pass through - boolean, byte, date, decimal, float, double, integer, long, short, string, timestamp, object type reference\n  return value;\n}","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as OntologiesV2 from \"@osdk/foundry.ontologies\";\nimport { addUserAgentAndRequestContextHeaders } from \"../util/addUserAgentAndRequestContextHeaders.js\";\nimport { augmentRequestContext } from \"../util/augmentRequestContext.js\";\nimport { toDataValue } from \"../util/toDataValue.js\";\nimport { ActionValidationError } from \"./ActionValidationError.js\";\nexport async function applyAction(client, action, parameters, options = {}) {\n  const clientWithHeaders = addUserAgentAndRequestContextHeaders(augmentRequestContext(client, _ => ({\n    finalMethodCall: \"applyAction\"\n  })), action);\n  if (Array.isArray(parameters)) {\n    const response = await OntologiesV2.Actions.applyBatch(clientWithHeaders, await client.ontologyRid, action.apiName, {\n      requests: parameters ? await remapBatchActionParams(parameters, client) : [],\n      options: {\n        returnEdits: options?.$returnEdits ? \"ALL\" : \"NONE\"\n      }\n    });\n    const edits = response.edits;\n    return options?.$returnEdits ? edits?.type === \"edits\" ? remapActionResponse(response) : edits : undefined;\n  } else {\n    const response = await OntologiesV2.Actions.apply(clientWithHeaders, await client.ontologyRid, action.apiName, {\n      parameters: await remapActionParams(parameters, client),\n      options: {\n        mode: options?.$validateOnly ? \"VALIDATE_ONLY\" : \"VALIDATE_AND_EXECUTE\",\n        returnEdits: options?.$returnEdits ? \"ALL_V2_WITH_DELETIONS\" : \"NONE\"\n      }\n    });\n    if (options?.$validateOnly) {\n      return response.validation;\n    }\n    if (response.validation?.result === \"INVALID\") {\n      throw new ActionValidationError(response.validation);\n    }\n    const edits = response.edits;\n    return options?.$returnEdits ? edits?.type === \"edits\" ? remapActionResponse(response) : edits : undefined;\n  }\n}\nasync function remapActionParams(params, client) {\n  if (params == null) {\n    return {};\n  }\n  const parameterMap = {};\n  for (const [key, value] of Object.entries(params)) {\n    parameterMap[key] = await toDataValue(value, client);\n  }\n  return parameterMap;\n}\nasync function remapBatchActionParams(params, client) {\n  const remappedParams = await Promise.all(params.map(async param => {\n    return {\n      parameters: await remapActionParams(param, client)\n    };\n  }));\n  return remappedParams;\n}\nexport function remapActionResponse(response) {\n  const editResponses = response?.edits;\n  if (editResponses?.type === \"edits\") {\n    const remappedActionResponse = {\n      type: editResponses.type,\n      deletedLinksCount: editResponses.deletedLinksCount,\n      deletedObjectsCount: editResponses.deletedObjectsCount,\n      addedLinks: [],\n      deletedLinks: [],\n      addedObjects: [],\n      deletedObjects: [],\n      modifiedObjects: [],\n      editedObjectTypes: []\n    };\n    const editedObjectTypesSet = new Set();\n    for (const edit of editResponses.edits) {\n      if (edit.type === \"addLink\" || edit.type === \"deleteLink\") {\n        const osdkEdit = {\n          linkTypeApiNameAtoB: edit.linkTypeApiNameAtoB,\n          linkTypeApiNameBtoA: edit.linkTypeApiNameBtoA,\n          aSideObject: edit.aSideObject,\n          bSideObject: edit.bSideObject\n        };\n        edit.type === \"addLink\" ? remappedActionResponse.addedLinks.push(osdkEdit) : remappedActionResponse.deletedLinks?.push(osdkEdit);\n        editedObjectTypesSet.add(edit.aSideObject.objectType);\n        editedObjectTypesSet.add(edit.bSideObject.objectType);\n      } else if (edit.type === \"addObject\" || edit.type === \"deleteObject\" || edit.type === \"modifyObject\") {\n        const osdkEdit = {\n          objectType: edit.objectType,\n          primaryKey: edit.primaryKey\n        };\n        if (edit.type === \"addObject\") {\n          remappedActionResponse.addedObjects.push(osdkEdit);\n        } else if (edit.type === \"deleteObject\") {\n          remappedActionResponse.deletedObjects?.push(osdkEdit);\n        } else if (edit.type === \"modifyObject\") {\n          remappedActionResponse.modifiedObjects.push(osdkEdit);\n        }\n        editedObjectTypesSet.add(edit.objectType);\n      } else {\n        if (process.env.NODE_ENV !== \"production\") {\n          // eslint-disable-next-line no-console\n          console.warn(`Unexpected edit type: ${JSON.stringify(edit)}`);\n        }\n      }\n    }\n    remappedActionResponse.editedObjectTypes = [...editedObjectTypesSet];\n    return remappedActionResponse;\n  }\n}","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst START_TOKEN = new Uint8Array([123, 34, 100, 97, 116, 97, 34, 58, 91]); // `{\"data\":[`\nconst OBJECT_OPEN_CHAR_CODE = 123; // '{'\nconst OBJECT_CLOSE_CHAR_CODE = 125; // '}'\n\nexport async function* parseStreamedResponse(asyncIterable) {\n  const utf8decoder = new TextDecoder(\"utf-8\");\n  let parsedStart = false;\n  let prevChunks = [];\n  let openBracesCount = 0;\n  for await (let chunk of asyncIterable) {\n    // on the first chunk, skip the expected START_TOKEN if we see it\n    let i = 0;\n    if (!parsedStart) {\n      parsedStart = true;\n      if (startsWith(chunk, START_TOKEN)) {\n        i = START_TOKEN.length;\n      }\n    }\n    for (; i < chunk.length; i++) {\n      // if we aren't currently parsing an object, skip until we find the next object start\n      while (openBracesCount === 0 && chunk[i] !== OBJECT_OPEN_CHAR_CODE && i < chunk.length) {\n        i++;\n      }\n\n      // iterate through the chunk looking for the end of the current top level object\n      let j = i;\n      for (; j < chunk.length; j++) {\n        const c = chunk[j];\n        if (c === OBJECT_OPEN_CHAR_CODE) {\n          openBracesCount++;\n        } else if (c === OBJECT_CLOSE_CHAR_CODE) {\n          openBracesCount--;\n\n          // found a complete top level object, emit it\n          if (0 === openBracesCount) {\n            yield combineAndParse(utf8decoder, prevChunks, chunk.subarray(i, j + 1));\n\n            // if there was a prevChunk, we've consumed it now\n            prevChunks = [];\n\n            // advance the start index to the final '}' of the current object,\n            // which lets us start seeking the beginning of the next object\n            i = j;\n            break;\n          }\n        }\n      }\n\n      // if we reached the end of our chunk before finding the end of the object\n      // store off the relevant remainder of our current chunk and go grab the next one\n      if (j === chunk.length) {\n        prevChunks.push(chunk.subarray(i));\n        break;\n      }\n    }\n  }\n}\nfunction startsWith(a, b) {\n  if (a.length < b.length) {\n    return false;\n  }\n  for (let i = 0; i < b.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction combineAndParse(utf8decoder, prev, curr) {\n  let str = \"\";\n  for (const chunk of prev) {\n    str += utf8decoder.decode(chunk, {\n      stream: true\n    });\n  }\n  str += utf8decoder.decode(curr);\n  return JSON.parse(str);\n}\nexport async function* iterateReadableStream(readableStream) {\n  let res = await readableStream.read();\n  while (!res.done) {\n    yield res.value;\n    res = await readableStream.read();\n  }\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TimeseriesDurationMapping } from \"@osdk/api\";\nimport { iterateReadableStream, parseStreamedResponse } from \"./streamutils.js\";\nexport function getTimeRange(body) {\n  if (\"$startTime\" in body || \"$endTime\" in body) {\n    return {\n      type: \"absolute\",\n      startTime: body.$startTime,\n      endTime: body.$endTime\n    };\n  }\n  return body.$before ? {\n    type: \"relative\",\n    startTime: {\n      when: \"BEFORE\",\n      value: body.$before,\n      unit: TimeseriesDurationMapping[body.$unit]\n    }\n  } : {\n    type: \"relative\",\n    endTime: {\n      when: \"AFTER\",\n      value: body.$after,\n      unit: TimeseriesDurationMapping[body.$unit]\n    }\n  };\n}\nexport async function* asyncIterPointsHelper(iterator) {\n  const reader = iterator.body?.getReader();\n  for await (const point of parseStreamedResponse(iterateReadableStream(reader))) {\n    yield {\n      time: point.time,\n      value: point.value\n    };\n  }\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as OntologiesV2 from \"@osdk/foundry.ontologies\";\nimport { asyncIterPointsHelper, getTimeRange } from \"./util/timeseriesUtils.js\";\nexport class GeotimeSeriesPropertyImpl {\n  #triplet;\n  #client;\n  constructor(client, objectApiName, primaryKey, propertyName, initialValue) {\n    this.#client = client;\n    this.#triplet = [objectApiName, primaryKey, propertyName];\n    if (initialValue != null) {\n      this.lastFetchedValue = initialValue;\n    }\n  }\n  async getLatestValue() {\n    const latestPointPromise = OntologiesV2.TimeSeriesValueBankProperties.getLatestValue(this.#client, await this.#client.ontologyRid, ...this.#triplet);\n    latestPointPromise.then(latestPoint => this.lastFetchedValue = latestPoint,\n    // eslint-disable-next-line no-console\n    err => void console.error(err));\n    return latestPointPromise;\n  }\n  async getAllValues(query) {\n    const allPoints = [];\n    for await (const point of this.asyncIterValues(query)) {\n      allPoints.push(point);\n    }\n    return allPoints;\n  }\n  async *asyncIterValues(query) {\n    const streamPointsIterator = await OntologiesV2.TimeSeriesValueBankProperties.streamValues(this.#client, await this.#client.ontologyRid, ...this.#triplet, query ? {\n      range: getTimeRange(query)\n    } : {});\n    for await (const timeseriesPoint of asyncIterPointsHelper(streamPointsIterator)) {\n      yield timeseriesPoint;\n    }\n  }\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as OntologiesV2 from \"@osdk/foundry.ontologies\";\nexport class MediaReferencePropertyImpl {\n  #triplet;\n  #client;\n  constructor(args) {\n    const {\n      client,\n      objectApiName,\n      primaryKey,\n      propertyName\n    } = args;\n    this.#client = client;\n    this.#triplet = [objectApiName, primaryKey, propertyName];\n  }\n  async fetchContents() {\n    return OntologiesV2.MediaReferenceProperties.getMediaContent(this.#client, await this.#client.ontologyRid, ...this.#triplet, {\n      preview: true // TODO: Can turn this back off when backend is no longer in beta.\n    });\n  }\n  async fetchMetadata() {\n    const r = await OntologiesV2.MediaReferenceProperties.getMediaMetadata(this.#client, await this.#client.ontologyRid, ...this.#triplet, {\n      preview: true // TODO: Can turn this back off when backend is no longer in beta.\n    });\n    return {\n      path: r.path,\n      sizeBytes: Number(r.sizeBytes),\n      mediaType: r.mediaType\n    };\n  }\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as OntologiesV2 from \"@osdk/foundry.ontologies\";\nimport { asyncIterPointsHelper, getTimeRange } from \"./util/timeseriesUtils.js\";\nexport class TimeSeriesPropertyImpl {\n  #triplet;\n  #client;\n  constructor(client, objectApiName, primaryKey, propertyName) {\n    this.#client = client;\n    this.#triplet = [objectApiName, primaryKey, propertyName];\n  }\n  async getFirstPoint() {\n    return OntologiesV2.TimeSeriesPropertiesV2.getFirstPoint(this.#client, await this.#client.ontologyRid, ...this.#triplet);\n  }\n  async getLastPoint() {\n    return OntologiesV2.TimeSeriesPropertiesV2.getLastPoint(this.#client, await this.#client.ontologyRid, ...this.#triplet);\n  }\n  async getAllPoints(query) {\n    const allPoints = [];\n    for await (const point of this.asyncIterPoints(query)) {\n      allPoints.push(point);\n    }\n    return allPoints;\n  }\n  async *asyncIterPoints(query) {\n    const streamPointsIterator = await OntologiesV2.TimeSeriesPropertiesV2.streamPoints(this.#client, await this.#client.ontologyRid, ...this.#triplet, query ? {\n      range: getTimeRange(query)\n    } : {});\n    for await (const timeseriesPoint of asyncIterPointsHelper(streamPointsIterator)) {\n      yield timeseriesPoint;\n    }\n  }\n}","/*\n * Copyright 2025 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Creates an Object Specifier. An ObjectSpecifier is a string that uniquely identifies an object in the system,\n * even when loading an interface object where primary key uniqueness is not guaranteed.\n *\n * @param objectDef - An Object Type Definition\n * @param primaryKey - The value you want to use as the primary key\n * @returns An Object Specifier\n */\nexport function createObjectSpecifierFromPrimaryKey(objectDef, primaryKey) {\n  return `${objectDef.apiName}:${primaryKey}`;\n}\n\n/**\n * Extracts the primary key from an ObjectSpecifier on an OSDK object.\n *\n * @param ObjectSpecifier\n * @returns A string representing the primary key\n */\nexport function extractPrimaryKeyFromObjectSpecifier(ObjectSpecifier) {\n  return ObjectSpecifier.split(\":\")[1];\n}\n\n/**\n * Extracts the object type from an ObjectSpecifier on an OSDK object.\n *\n * @param ObjectSpecifier\n * @returns The object type extracted from the ObjectSpecifier\n */\nexport function extractObjectTypeFromObjectSpecifier(ObjectSpecifier) {\n  return ObjectSpecifier.split(\":\")[0];\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const InterfaceDefinitions = Symbol(process.env.MODE !== \"production\" ? \"InterfaceDefinitions\" : undefined);","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { extractNamespace } from \"../../internal/conversions/modernToLegacyWhereClause.js\";\nimport { InterfaceDefRef, ObjectDefRef, UnderlyingOsdkObject } from \"./InternalSymbols.js\";\n/** @internal */\nexport function createOsdkInterface(underlying, interfaceDef) {\n  const [objApiNamespace] = extractNamespace(interfaceDef.apiName);\n  return Object.freeze(Object.defineProperties({}, {\n    // first to minimize hidden classes\n    [UnderlyingOsdkObject]: {\n      value: underlying\n    },\n    \"$apiName\": {\n      value: interfaceDef.apiName,\n      enumerable: true\n    },\n    \"$as\": {\n      value: underlying.$as,\n      enumerable: false\n    },\n    \"$objectType\": {\n      value: underlying.$objectType,\n      enumerable: \"$objectType\" in underlying\n    },\n    \"$primaryKey\": {\n      value: underlying.$primaryKey,\n      enumerable: \"$primaryKey\" in underlying\n    },\n    \"$objectSpecifier\": {\n      value: underlying.$objectSpecifier,\n      enumerable: \"$objectSpecifier\" in underlying\n    },\n    \"$title\": {\n      value: underlying.$title,\n      enumerable: \"$title\" in underlying\n    },\n    \"$rid\": {\n      value: underlying.$rid,\n      enumerable: \"$rid\" in underlying\n    },\n    \"$clone\": {\n      value: clone,\n      enumerable: false\n    },\n    [InterfaceDefRef]: {\n      value: interfaceDef\n    },\n    ...Object.fromEntries(Object.keys(interfaceDef.properties).map(p => {\n      const objDef = underlying[ObjectDefRef];\n      const [apiNamespace, apiName] = extractNamespace(p);\n      const targetPropName = objDef.interfaceMap[interfaceDef.apiName][p];\n      return [apiNamespace === objApiNamespace ? apiName : p, {\n        enumerable: targetPropName in underlying,\n        value: underlying[targetPropName]\n      }];\n    }))\n  }));\n  function clone(update) {\n    if (update == null) {\n      return underlying.$clone().$as(interfaceDef);\n    }\n    for (const key of Object.keys(update)) {\n      if (!(key in interfaceDef.properties)) {\n        throw new Error(`Invalid property ${key} for interface ${interfaceDef.apiName}`);\n      }\n    }\n    const remappedProps = Object.fromEntries(Object.keys(update).map(p => mapProperty(p, update[p])).filter(x => x != null));\n    return underlying.$clone(remappedProps).$as(interfaceDef);\n  }\n  function mapProperty(propertyName, value) {\n    const objDef = underlying[ObjectDefRef];\n    const targetPropName = objDef.interfaceMap[interfaceDef.apiName][propertyName];\n    // If the underlying object does not implement the SPT, throw errors\n    if (targetPropName == null) {\n      throw new Error(`Cannot clone interface with ${propertyName} as property is not implemented by the underlying object type ${objDef.apiName}`);\n    }\n    return [targetPropName, value];\n  }\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InterfaceDefinitions } from \"../../ontology/OntologyProvider.js\";\nimport { createSimpleCache } from \"../SimpleCache.js\";\nimport { createOsdkInterface } from \"./createOsdkInterface.js\";\nimport { UnderlyingOsdkObject } from \"./InternalSymbols.js\";\n\n/** @internal */\n\nexport const get$as = createSimpleCache(new WeakMap(), $asFactory).get;\nconst osdkObjectToInterfaceView = createSimpleCache(new WeakMap(), () => new Map());\nfunction $asFactory(objDef) {\n  // We use the exact same logic for both the interface rep and the underlying rep\n\n  return function $as(targetMinDef) {\n    let targetInterfaceApiName;\n    if (typeof targetMinDef === \"string\") {\n      if (targetMinDef === objDef.apiName) {\n        return this[UnderlyingOsdkObject];\n      }\n\n      // this is sufficient to determine if we implement the interface\n      if (objDef.interfaceMap?.[targetMinDef] == null) {\n        throw new Error(`Object does not implement interface '${targetMinDef}'.`);\n      }\n      targetInterfaceApiName = targetMinDef;\n    } else if (targetMinDef.apiName === objDef.apiName) {\n      return this[UnderlyingOsdkObject];\n    } else {\n      if (targetMinDef.type === \"object\") {\n        throw new Error(`'${targetMinDef.apiName}' is not an interface nor is it '${objDef.apiName}', which is the object type.`);\n      }\n      targetInterfaceApiName = targetMinDef.apiName;\n    }\n    const def = objDef[InterfaceDefinitions][targetInterfaceApiName];\n    if (!def) {\n      throw new Error(`Object does not implement interface '${targetInterfaceApiName}'.`);\n    }\n    const underlying = this[UnderlyingOsdkObject];\n    const existing = osdkObjectToInterfaceView.get(underlying).get(targetInterfaceApiName)?.deref();\n    if (existing) return existing;\n    const osdkInterface = createOsdkInterface(underlying, def.def);\n    osdkObjectToInterfaceView.get(underlying).set(targetInterfaceApiName, new WeakRef(osdkInterface));\n    return osdkInterface;\n  };\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getWireObjectSet } from \"../../objectSet/createObjectSet.js\";\nimport { fetchSingle, fetchSingleWithErrors } from \"../fetchSingle.js\";\nimport { ClientRef, ObjectDefRef, UnderlyingOsdkObject } from \"./InternalSymbols.js\";\n/** @internal */\nexport function get$link(holder) {\n  const client = holder[ClientRef];\n  const objDef = holder[ObjectDefRef];\n  const rawObj = holder[UnderlyingOsdkObject];\n  return Object.freeze(Object.fromEntries(Object.keys(objDef.links).map(linkName => {\n    const linkDef = objDef.links[linkName];\n    const objectSet = client.objectSetFactory(objDef, client).where({\n      [objDef.primaryKeyApiName]: rawObj.$primaryKey\n    }).pivotTo(linkName);\n    const value = !linkDef.multiplicity ? {\n      fetchOne: options => fetchSingle(client, objDef, options ?? {}, getWireObjectSet(objectSet)),\n      fetchOneWithErrors: options => fetchSingleWithErrors(client, objDef, options ?? {}, getWireObjectSet(objectSet))\n    } : objectSet;\n    return [linkName, value];\n  })));\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport invariant from \"tiny-invariant\";\nimport { GeotimeSeriesPropertyImpl } from \"../../createGeotimeSeriesProperty.js\";\nimport { MediaReferencePropertyImpl } from \"../../createMediaReferenceProperty.js\";\nimport { TimeSeriesPropertyImpl } from \"../../createTimeseriesProperty.js\";\nimport { hydrateAttachmentFromRidInternal } from \"../../public-utils/hydrateAttachmentFromRid.js\";\nimport { createObjectSpecifierFromPrimaryKey } from \"../../util/objectSpecifierUtils.js\";\nimport { get$as } from \"./getDollarAs.js\";\nimport { get$link } from \"./getDollarLink.js\";\nimport { ClientRef, ObjectDefRef, UnderlyingOsdkObject } from \"./InternalSymbols.js\";\nconst specialPropertyTypes = new Set([\"attachment\", \"geotimeSeriesReference\", \"mediaReference\", \"numericTimeseries\", \"stringTimeseries\", \"sensorTimeseries\"]);\n\n// kept separate so we are not redefining these functions\n// every time an object is created.\nconst basePropDefs = {\n  \"$as\": {\n    get: function () {\n      return get$as(this[ObjectDefRef]);\n    }\n  },\n  \"$link\": {\n    get: function () {\n      return get$link(this);\n    }\n  },\n  \"$clone\": {\n    value: function (update) {\n      // I think `rawObj` is the same thing as `this` and can be removed?\n      const rawObj = this[UnderlyingOsdkObject];\n      const def = this[ObjectDefRef];\n      if (update == null) {\n        return createOsdkObject(this[ClientRef], def, {\n          ...rawObj\n        });\n      }\n      if (def.primaryKeyApiName in update && rawObj[def.primaryKeyApiName] !== update[def.primaryKeyApiName]) {\n        throw new Error(`Cannot update ${def.apiName} object with differing primary key values `);\n      }\n      if (def.titleProperty in update && !(\"$title\" in update)) {\n        update.$title = update[def.titleProperty];\n      }\n      const newObject = {\n        ...this[UnderlyingOsdkObject],\n        ...update\n      };\n      return createOsdkObject(this[ClientRef], this[ObjectDefRef], newObject);\n    }\n  },\n  \"$objectSpecifier\": {\n    get: function () {\n      const rawObj = this[UnderlyingOsdkObject];\n      return createObjectSpecifierFromPrimaryKey(this[ObjectDefRef], rawObj.$primaryKey);\n    },\n    enumerable: true\n  }\n};\n\n/**\n * @internal\n * @param client\n * @param objectDef\n * @param simpleOsdkProperties\n */\nexport function createOsdkObject(client, objectDef, simpleOsdkProperties, derivedPropertyTypeByName = {}) {\n  // updates the object's \"hidden class/map\".\n  const rawObj = simpleOsdkProperties;\n  Object.defineProperties(rawObj, {\n    [UnderlyingOsdkObject]: {\n      enumerable: false,\n      value: simpleOsdkProperties\n    },\n    [ObjectDefRef]: {\n      value: objectDef,\n      enumerable: false\n    },\n    [ClientRef]: {\n      value: client,\n      enumerable: false\n    },\n    ...basePropDefs\n  });\n\n  // Assign the special values\n  for (const propKey of Object.keys(rawObj)) {\n    if (propKey in objectDef.properties && typeof objectDef.properties[propKey].type === \"string\" && specialPropertyTypes.has(objectDef.properties[propKey].type)) {\n      rawObj[propKey] = createSpecialProperty(client, objectDef, rawObj, propKey);\n    } else if (propKey in derivedPropertyTypeByName && typeof derivedPropertyTypeByName[propKey].type === \"string\" && specialPropertyTypes.has(derivedPropertyTypeByName[propKey].type)) {\n      const rawValue = rawObj[propKey];\n      if (derivedPropertyTypeByName[propKey].type === \"attachment\") {\n        if (Array.isArray(rawValue)) {\n          rawObj[propKey] = rawValue.map(a => hydrateAttachmentFromRidInternal(client, a.rid));\n        } else {\n          rawObj[propKey] = hydrateAttachmentFromRidInternal(client, rawValue.rid);\n        }\n      } else {\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Derived property aggregations for Timeseries and Media are not supported\") : invariant(false) : void 0;\n      }\n    }\n  }\n  return Object.freeze(rawObj);\n}\nfunction createSpecialProperty(client, objectDef, rawObject, p) {\n  const rawValue = rawObject[p];\n  const propDef = objectDef.properties[p];\n  if (process.env.NODE_ENV !== \"production\") {\n    !(propDef != null && typeof propDef.type === \"string\" && specialPropertyTypes.has(propDef.type)) ? process.env.NODE_ENV !== \"production\" ? invariant(false) : invariant(false) : void 0;\n  }\n  if (propDef.type === \"attachment\") {\n    if (Array.isArray(rawValue)) {\n      return rawValue.map(a => hydrateAttachmentFromRidInternal(client, a.rid));\n    }\n    return hydrateAttachmentFromRidInternal(client, rawValue.rid);\n  }\n  if (propDef.type === \"numericTimeseries\" || propDef.type === \"stringTimeseries\" || propDef.type === \"sensorTimeseries\") {\n    return new TimeSeriesPropertyImpl(client, objectDef.apiName, rawObject[objectDef.primaryKeyApiName], p);\n  }\n  if (propDef.type === \"geotimeSeriesReference\") {\n    return new GeotimeSeriesPropertyImpl(client, objectDef.apiName, rawObject[objectDef.primaryKeyApiName], p, rawValue.type === \"geotimeSeriesValue\" ? {\n      time: rawValue.timestamp,\n      value: {\n        type: \"Point\",\n        coordinates: rawValue.position\n      }\n    } : undefined);\n  }\n  if (propDef.type === \"mediaReference\") {\n    return new MediaReferencePropertyImpl({\n      client,\n      objectApiName: objectDef.apiName,\n      primaryKey: rawObject[objectDef.primaryKeyApiName],\n      propertyName: p\n    });\n  }\n}","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport invariant from \"tiny-invariant\";\nimport { createOsdkObject } from \"./convertWireToOsdkObjects/createOsdkObject.js\";\n/**\n * If interfaceApiName is not undefined, converts the instances of the\n * interface into their respective\n * underlying concrete types and then returns the $as() representation\n * for the consumers.\n *\n * Otherwise just does the conversion\n *\n * May mutate in place for performance reasons. If you need a clean copy,\n * keep it first.\n *\n * However, you must use the returned value, which will be whatever is correct.\n *\n * @internal\n * @param interfaceApiName - if undefined\n */\nexport async function convertWireToOsdkObjects(client, objects, interfaceApiName, forceRemoveRid = false, derivedPropertyTypesByName, selectedProps, strictNonNull = false) {\n  // remove the __ prefixed properties and convert them to $ prefixed.\n  // updates in place\n  fixObjectPropertiesInPlace(objects, forceRemoveRid);\n  const ifaceDef = interfaceApiName ? await client.ontologyProvider.getInterfaceDefinition(interfaceApiName) : undefined;\n  const ifaceSelected = ifaceDef ? selectedProps ?? Object.keys(ifaceDef.properties) : undefined;\n  const ret = [];\n  for (const rawObj of objects) {\n    const objectDef = await client.ontologyProvider.getObjectDefinition(rawObj.$apiName);\n    !objectDef ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Missing definition for '${rawObj.$apiName}'`) : invariant(false) : void 0;\n\n    // default value for when we are checking an object\n    let objProps;\n    let conforming = true;\n    if (ifaceDef && ifaceSelected) {\n      // API returns interface spt names but we cache by real values\n      invariantInterfacesAsViews(objectDef, ifaceDef.apiName, client);\n      conforming &&= isConforming(client, ifaceDef, rawObj, ifaceSelected);\n      reframeAsObjectInPlace(objectDef, ifaceDef.apiName, rawObj);\n      objProps = convertInterfacePropNamesToObjectPropNames(objectDef, ifaceDef.apiName, ifaceSelected);\n    } else {\n      objProps = selectedProps ?? Object.keys(objectDef.properties);\n    }\n    conforming &&= isConforming(client, objectDef, rawObj, objProps);\n    if (strictNonNull === \"throw\" && !conforming) {\n      throw new Error(\"Unable to safely convert objects as some non nullable properties are null\");\n    } else if (strictNonNull === \"drop\" && !conforming) {\n      continue;\n    }\n    let osdkObject = createOsdkObject(client, objectDef, rawObj, derivedPropertyTypesByName);\n    if (interfaceApiName) osdkObject = osdkObject.$as(interfaceApiName);\n    ret.push(osdkObject);\n  }\n  return ret;\n}\n/**\n * @internal\n */\nexport async function convertWireToOsdkObjects2(client, objects, interfaceApiName, derivedPropertyTypeByName, forceRemoveRid = false, selectedProps, strictNonNull = false, interfaceToObjectTypeMappings = {}) {\n  fixObjectPropertiesInPlace(objects, forceRemoveRid);\n  const ret = [];\n  for (const rawObj of objects) {\n    const objectDef = await client.ontologyProvider.getObjectDefinition(rawObj.$apiName);\n    !objectDef ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Missing definition for '${rawObj.$apiName}'`) : invariant(false) : void 0;\n    const interfaceToObjMapping = interfaceApiName ? interfaceToObjectTypeMappings[interfaceApiName][rawObj.$apiName] : undefined;\n    const ifaceSelected = interfaceApiName && interfaceToObjMapping ? selectedProps ? Object.keys(interfaceToObjMapping).filter(val => {\n      selectedProps?.includes(interfaceToObjMapping[val]);\n    }) : [...Object.values(interfaceToObjMapping), objectDef.primaryKeyApiName] : undefined;\n\n    // default value for when we are checking an object\n    let objProps;\n    let conforming = true;\n    if (interfaceApiName && ifaceSelected) {\n      invariantInterfacesAsViews(objectDef, interfaceApiName, client);\n      objProps = ifaceSelected;\n    } else {\n      objProps = selectedProps ?? Object.keys(objectDef.properties);\n    }\n    conforming &&= isConforming(client, objectDef, rawObj, objProps);\n    if (strictNonNull === \"throw\" && !conforming) {\n      throw new Error(\"Unable to safely convert objects as some non nullable properties are null\");\n    } else if (strictNonNull === \"drop\" && !conforming) {\n      continue;\n    }\n    let osdkObject = createOsdkObject(client, objectDef, rawObj, derivedPropertyTypeByName);\n    if (interfaceApiName) osdkObject = osdkObject.$as(interfaceApiName);\n    ret.push(osdkObject);\n  }\n  return ret;\n}\n\n/**\n * @internal\n *\n * Utility function that lets us take down selected property names from an interface\n * and convert them to an array of property names on an object.\n */\nexport function convertInterfacePropNamesToObjectPropNames(objectDef, interfaceApiName, ifacePropsToMap) {\n  return ifacePropsToMap.map(ifaceProp => objectDef.interfaceMap[interfaceApiName][ifaceProp]);\n}\n\n/**\n * Takes a raw object from the wire (contextually as an interface) and\n * updates the fields to reflect the underlying objectDef instead\n * @param objectDef\n * @param interfaceApiName\n * @param client\n * @param rawObj\n */\nfunction reframeAsObjectInPlace(objectDef, interfaceApiName, rawObj) {\n  const newProps = {};\n  for (const [sptProp, regularProp] of Object.entries(objectDef.interfaceMap[interfaceApiName])) {\n    if (sptProp in rawObj) {\n      const value = rawObj[sptProp];\n      delete rawObj[sptProp];\n      if (value !== undefined) {\n        newProps[regularProp] = value;\n      }\n    }\n  }\n  Object.assign(rawObj, newProps);\n  if (!(objectDef.primaryKeyApiName in rawObj)) {\n    rawObj[objectDef.primaryKeyApiName] = rawObj.$primaryKey;\n  }\n}\nfunction isConforming(client, def, obj, propsToCheck) {\n  for (const propName of propsToCheck) {\n    if (propName in def.properties && def.properties[propName].nullable === false && obj[propName] == null) {\n      if (process.env.NODE_ENV !== \"production\") {\n        client.logger?.debug({\n          obj: {\n            $apiName: obj[\"$apiName\"],\n            $objectType: obj[\"$objectType\"],\n            $primaryKey: obj[\"$primaryKey\"]\n          }\n        }, `Found object that does not conform to its definition. Expected ${def.apiName}'s ${propName} to not be null.`);\n      }\n      return false;\n    }\n  }\n  return true;\n}\nfunction invariantInterfacesAsViews(objectDef, interfaceApiName, client) {\n  if (objectDef.interfaceMap?.[interfaceApiName] == null) {\n    const warning = \"Interfaces are only supported 'as views' but your metadata object is missing the correct information. This suggests your interfaces have not been migrated to the newer version yet and you cannot use this version of the SDK.\";\n    if (client.logger) {\n      client.logger.warn(warning);\n    } else {\n      // eslint-disable-next-line no-console\n      console.error(`WARNING! ${warning}`);\n    }\n    throw new Error(warning);\n  }\n}\nfunction fixObjectPropertiesInPlace(objs, forceRemoveRid) {\n  for (const obj of objs) {\n    if (forceRemoveRid) {\n      delete obj.__rid;\n    }\n    if (obj.__rid) {\n      obj.$rid = obj.__rid;\n      delete obj.__rid;\n    }\n\n    // Backend returns as __apiName but we want to stick to $ structure\n    obj.$apiName ??= obj.__apiName;\n\n    // for now these are the same but when we start doing interface projections the $objectType will always be underlying and\n    // the $apiName will be for the current view (in current designs)\n    obj.$objectType = obj.$apiName;\n\n    // copying over for now as its always returned. In the future, this should just be inferred from underlying\n    obj.$primaryKey ??= obj.__primaryKey;\n    obj.$title ??= obj.__title;\n\n    // we don't want people to use these\n    delete obj.__apiName;\n    delete obj.__primaryKey;\n    delete obj.__title;\n  }\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A simple cache that can be used to store values for a given client.\n */\n\n/**\n * @internal\n * A simple async cache that can be used to store values for a given client.\n */\n\n/** @internal */\n\n/**\n * @internal\n * Create a new cache without a factory function.\n */\n\n/**\n * @internal\n * Create a new cache with a factory function.\n * @param fn A factory function that will be used to create the value if it does not exist in the cache.\n */\n\nexport function createClientCache(fn) {\n  const cache = new WeakMap();\n  function get(client, key) {\n    if (cache.get(client.clientCacheKey) == null) {\n      cache.set(client.clientCacheKey, new Map());\n    }\n    let r = cache.get(client.clientCacheKey).get(key);\n    if (r === undefined && fn !== undefined) {\n      return set(client, key, fn(client, key));\n    } else {\n      return r;\n    }\n  }\n  function set(client, key, value) {\n    if (cache.get(client.clientCacheKey) == null) {\n      cache.set(client.clientCacheKey, new Map());\n    }\n    cache.get(client.clientCacheKey).set(key, value);\n    return value;\n  }\n  function remove(client, key) {\n    if (cache.get(client.clientCacheKey) == null) return false;\n    return cache.get(client.clientCacheKey).delete(key);\n  }\n  return {\n    get,\n    set,\n    remove\n  };\n}\n\n/** @internal */\n\n/**\n * @internal\n * Create a new cache with an async factory function.\n * @param fn A factory function that will be used to create the value if it does not exist in the cache.\n * @returns\n */\nexport function createAsyncClientCache(fn, createCacheLocal = createClientCache) {\n  const cache = createCacheLocal();\n  const inProgress = createCacheLocal();\n  const ret = {\n    getOrUndefined: function getOrUndefined(client, key) {\n      return cache.get(client, key);\n    },\n    get: async function get(client, key) {\n      return cache.get(client, key) ?? inProgress.get(client, key) ?? ret.set(client, key, fn(client, key));\n    },\n    set: async function set(client, k, v) {\n      // the `.set` happens first to prevent races.\n      try {\n        const r = await inProgress.set(client, k, v); // returns v\n\n        cache.set(client, k, r);\n        inProgress.remove(client, k);\n        return r;\n      } catch (e) {\n        // we don't want to cache failures\n        inProgress.remove(client, k);\n        throw e;\n      }\n    }\n  };\n  return ret;\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as OntologiesV2 from \"@osdk/foundry.ontologies\";\nimport { wireActionTypeV2ToSdkActionMetadata } from \"@osdk/generator-converters\";\nexport async function loadActionMetadata(client, actionType) {\n  const r = await OntologiesV2.ActionTypesV2.get(client, await client.ontologyRid, actionType);\n  return wireActionTypeV2ToSdkActionMetadata(r);\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as OntologiesV2 from \"@osdk/foundry.ontologies\";\nimport { wireObjectTypeFullMetadataToSdkObjectMetadata } from \"@osdk/generator-converters\";\nexport async function loadFullObjectMetadata(client, objectType) {\n  const full = await OntologiesV2.ObjectTypesV2.getFullMetadata(client, await client.ontologyRid, objectType, {\n    preview: true\n  });\n  const ret = wireObjectTypeFullMetadataToSdkObjectMetadata(full, true);\n  return {\n    ...ret\n  };\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as OntologiesV2 from \"@osdk/foundry.ontologies\";\nimport { __UNSTABLE_wireInterfaceTypeV2ToSdkObjectDefinition } from \"@osdk/generator-converters\";\nexport async function loadInterfaceMetadata(client, objectType) {\n  const r = await OntologiesV2.OntologyInterfaces.get(client, await client.ontologyRid, objectType, {\n    preview: true\n  });\n  return __UNSTABLE_wireInterfaceTypeV2ToSdkObjectDefinition(r, true);\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as OntologiesV2 from \"@osdk/foundry.ontologies\";\nimport { wireQueryTypeV2ToSdkQueryMetadata } from \"@osdk/generator-converters\";\nexport async function loadQueryMetadata(client, queryTypeApiNameAndVersion) {\n  const [apiName, version] = queryTypeApiNameAndVersion.split(\":\");\n  const r = await OntologiesV2.QueryTypes.get(client, await client.ontologyRid, apiName, {\n    version\n  });\n  return wireQueryTypeV2ToSdkQueryMetadata(r);\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createAsyncClientCache } from \"../object/Cache.js\";\nimport { loadActionMetadata } from \"./loadActionMetadata.js\";\nimport { loadFullObjectMetadata } from \"./loadFullObjectMetadata.js\";\nimport { loadInterfaceMetadata } from \"./loadInterfaceMetadata.js\";\nimport { loadQueryMetadata } from \"./loadQueryMetadata.js\";\nimport { InterfaceDefinitions } from \"./OntologyProvider.js\";\nexport const createStandardOntologyProviderFactory = client => {\n  return client => {\n    async function loadObject(client, key) {\n      const objectDef = await loadFullObjectMetadata(client, key);\n\n      // ensure we have all of the interfaces loaded\n      const interfaceDefs = Object.fromEntries((await Promise.all(objectDef.implements?.map(i => ret.getInterfaceDefinition(i)) ?? [])).map(i => [i.apiName, {\n        def: i,\n        handler: undefined\n      }]));\n      const fullObjectDef = {\n        ...objectDef,\n        [InterfaceDefinitions]: interfaceDefs\n      };\n      return fullObjectDef;\n    }\n    async function loadInterface(client, key) {\n      return loadInterfaceMetadata(client, key);\n    }\n    async function loadQuery(client, key) {\n      return loadQueryMetadata(client, key);\n    }\n    async function loadAction(client, key) {\n      const r = await loadActionMetadata(client, key);\n      return r;\n    }\n    function makeGetter(fn) {\n      const cache = createAsyncClientCache((client, key) => fn(client, key, false));\n      return async apiName => {\n        return await cache.get(client, apiName);\n      };\n    }\n    function makeQueryGetter(client, fn) {\n      const queryCache = createAsyncClientCache((client, key) => {\n        return fn(client, key);\n      });\n      return async (apiName, version) => {\n        const key = version ? `${apiName}:${version}` : apiName;\n        return await queryCache.get(client, key);\n      };\n    }\n    const ret = {\n      getObjectDefinition: makeGetter(loadObject),\n      getInterfaceDefinition: makeGetter(loadInterface),\n      getActionDefinition: makeGetter(loadAction),\n      getQueryDefinition: makeQueryGetter(client, loadQuery)\n    };\n    return ret;\n  };\n};","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const USER_AGENT = `osdk-client/${process.env.PACKAGE_VERSION}`;","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createSharedClientContext } from \"@osdk/shared.client.impl\";\nimport { convertWireToOsdkObjects, convertWireToOsdkObjects2 } from \"./object/convertWireToOsdkObjects.js\";\nimport { createObjectSet } from \"./objectSet/createObjectSet.js\";\nimport { createStandardOntologyProviderFactory } from \"./ontology/StandardOntologyProvider.js\";\nimport { USER_AGENT } from \"./util/UserAgent.js\";\n\n/** @internal */\nexport function createMinimalClient(metadata, baseUrl, tokenProvider, options = {}, fetchFn = global.fetch, objectSetFactory = createObjectSet, createOntologyProviderFactory = createStandardOntologyProviderFactory) {\n  if (process.env.NODE_ENV !== \"production\") {\n    try {\n      new URL(baseUrl);\n    } catch (e) {\n      const hint = !baseUrl.startsWith(\"http://\") || !baseUrl.startsWith(\"https://\") ? \". Did you forget to add 'http://' or 'https://'?\" : \"\";\n      throw new Error(`Invalid stack URL: ${baseUrl}${hint}`);\n    }\n  }\n  const processedBaseUrl = new URL(baseUrl);\n  processedBaseUrl.pathname += processedBaseUrl.pathname.endsWith(\"/\") ? \"\" : \"/\";\n  const minimalClient = {\n    ...createSharedClientContext(processedBaseUrl.toString(), tokenProvider, USER_AGENT, fetchFn),\n    objectSetFactory,\n    objectFactory: convertWireToOsdkObjects,\n    objectFactory2: convertWireToOsdkObjects2,\n    ontologyRid: metadata.ontologyRid,\n    logger: options.logger,\n    clientCacheKey: {},\n    requestContext: {}\n  };\n  return Object.freeze(Object.assign(minimalClient, {\n    ontologyProvider: createOntologyProviderFactory(options)(minimalClient)\n  }));\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InterfaceDefinitions } from \"./ontology/OntologyProvider.js\";\n\n/** @internal */\nexport const fetchMetadataInternal = async (client, definition) => {\n  if (definition.type === \"object\") {\n    const {\n      [InterfaceDefinitions]: interfaceDefs,\n      ...objectTypeDef\n    } = await client.ontologyProvider.getObjectDefinition(definition.apiName);\n    return objectTypeDef;\n  } else if (definition.type === \"interface\") {\n    return client.ontologyProvider.getInterfaceDefinition(definition.apiName);\n  } else if (definition.type === \"action\") {\n    return client.ontologyProvider.getActionDefinition(definition.apiName);\n  } else if (definition.type === \"query\") {\n    return client.ontologyProvider.getQueryDefinition(definition.apiName, definition.isFixedVersion ? definition.version : undefined);\n  } else {\n    throw new Error(\"Not implemented for given definition\");\n  }\n};","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as OntologiesV2 from \"@osdk/foundry.ontologies\";\nimport { isAttachmentFile, isAttachmentUpload } from \"../object/AttachmentUpload.js\";\nimport { getWireObjectSet, isObjectSet } from \"../objectSet/createObjectSet.js\";\nimport { isObjectSpecifiersObject } from \"./isObjectSpecifiersObject.js\";\nimport { extractPrimaryKeyFromObjectSpecifier } from \"./objectSpecifierUtils.js\";\nimport { isWireObjectSet } from \"./WireObjectSet.js\";\n\n/**\n * Marshall user-facing data into the wire DataValue type\n *\n * @see DataValue for the expected payloads\n * @internal\n */\nexport async function toDataValueQueries(value, client, desiredType) {\n  if (value == null) {\n    return value;\n  }\n  if (Array.isArray(value) && desiredType.multiplicity) {\n    const values = Array.from(value);\n    if (values.some(dataValue => isAttachmentUpload(dataValue) || isAttachmentFile(dataValue))) {\n      const converted = [];\n      for (const value of values) {\n        converted.push(await toDataValueQueries(value, client, desiredType));\n      }\n      return converted;\n    }\n    const promiseArray = Array.from(value, async innerValue => await toDataValueQueries(innerValue, client, desiredType));\n    return Promise.all(promiseArray);\n  }\n  switch (desiredType.type) {\n    case \"attachment\":\n      {\n        if (isAttachmentUpload(value)) {\n          const attachment = await OntologiesV2.Attachments.upload(client, value.data, {\n            filename: value.name\n          });\n          return attachment.rid;\n        }\n        if (isAttachmentFile(value)) {\n          const attachment = await OntologiesV2.Attachments.upload(client, value, {\n            filename: value.name\n          });\n          return attachment.rid;\n        }\n\n        // If it's not an upload, it's just an attachment rid string which we can pass through\n        return value;\n      }\n    case \"twoDimensionalAggregation\":\n      {\n        return {\n          groups: value\n        };\n      }\n    case \"threeDimensionalAggregation\":\n      {\n        return {\n          groups: value\n        };\n      }\n    case \"set\":\n      {\n        if (value instanceof Set) {\n          const promiseArray = Array.from(value, async innerValue => await toDataValueQueries(innerValue, client, desiredType[\"set\"]));\n          return Promise.all(promiseArray);\n        }\n        break;\n      }\n    case \"object\":\n      {\n        if (isObjectSpecifiersObject(value)) {\n          return value.$primaryKey;\n        }\n        break;\n      }\n    case \"objectSet\":\n      {\n        // object set (the rid as a string (passes through the last return), or the ObjectSet definition directly)\n        if (isWireObjectSet(value)) {\n          return value;\n        }\n        if (isObjectSet(value)) {\n          return getWireObjectSet(value);\n        }\n        break;\n      }\n    case \"map\":\n      {\n        if (typeof value === \"object\") {\n          const entrySet = [];\n          for (const [key, mapValue] of Object.entries(value)) {\n            entrySet.push({\n              key: desiredType.keyType.type === \"object\" ? extractPrimaryKeyFromObjectSpecifier(key) : await toDataValueQueries(key, client, desiredType.keyType),\n              value: await toDataValueQueries(mapValue, client, desiredType.valueType)\n            });\n          }\n          return entrySet;\n        }\n        break;\n      }\n    case \"struct\":\n      {\n        if (typeof value === \"object\") {\n          const structMap = {};\n          for (const [key, structValue] of Object.entries(value)) {\n            structMap[key] = await toDataValueQueries(structValue, client, desiredType[\"struct\"][key]);\n          }\n          return structMap;\n        }\n      }\n    case \"boolean\":\n    case \"date\":\n    case \"double\":\n    case \"float\":\n    case \"integer\":\n    case \"long\":\n    case \"string\":\n    case \"timestamp\":\n      return value;\n  }\n  return value;\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as OntologiesV2 from \"@osdk/foundry.ontologies\";\nimport invariant from \"tiny-invariant\";\nimport { createObjectSet } from \"../objectSet/createObjectSet.js\";\nimport { hydrateAttachmentFromRidInternal } from \"../public-utils/hydrateAttachmentFromRid.js\";\nimport { addUserAgentAndRequestContextHeaders } from \"../util/addUserAgentAndRequestContextHeaders.js\";\nimport { augmentRequestContext } from \"../util/augmentRequestContext.js\";\nimport { createObjectSpecifierFromPrimaryKey } from \"../util/objectSpecifierUtils.js\";\nimport { toDataValueQueries } from \"../util/toDataValueQueries.js\";\nexport async function applyQuery(client, query, params) {\n  const qd = await client.ontologyProvider.getQueryDefinition(query.apiName, query.isFixedVersion ? query.version : undefined);\n  const response = await OntologiesV2.Queries.execute(addUserAgentAndRequestContextHeaders(augmentRequestContext(client, _ => ({\n    finalMethodCall: \"applyQuery\"\n  })), query), await client.ontologyRid, query.apiName, {\n    parameters: params ? await remapQueryParams(params, client, qd.parameters) : {}\n  }, {\n    version: qd.version\n  });\n  const objectOutputDefs = await getRequiredDefinitions(qd.output, client);\n  const remappedResponse = await remapQueryResponse(client, qd.output, response.value, objectOutputDefs);\n  return remappedResponse;\n}\nasync function remapQueryParams(params, client, paramTypes) {\n  const parameterMap = {};\n  for (const [key, value] of Object.entries(params)) {\n    parameterMap[key] = await toDataValueQueries(value, client, paramTypes[key]);\n  }\n  return parameterMap;\n}\nasync function remapQueryResponse(client, responseDataType, responseValue, definitions) {\n  // handle null responses\n  if (responseValue == null) {\n    if (responseDataType.nullable) {\n      return undefined;\n    } else {\n      throw new Error(\"Got null response when nullable was not allowed\");\n    }\n  }\n  if (responseDataType.multiplicity != null && responseDataType.multiplicity) {\n    const withoutMultiplicity = {\n      ...responseDataType,\n      multiplicity: false\n    };\n    for (let i = 0; i < responseValue.length; i++) {\n      responseValue[i] = await remapQueryResponse(client, withoutMultiplicity, responseValue[i], definitions);\n    }\n    return responseValue;\n  }\n  switch (responseDataType.type) {\n    case \"union\":\n      {\n        throw new Error(\"Union return types are not yet supported\");\n      }\n    case \"set\":\n      {\n        for (let i = 0; i < responseValue.length; i++) {\n          responseValue[i] = await remapQueryResponse(client, responseDataType.set, responseValue[i], definitions);\n        }\n        return responseValue;\n      }\n    case \"attachment\":\n      {\n        return hydrateAttachmentFromRidInternal(client, responseValue);\n      }\n    case \"object\":\n      {\n        const def = definitions.get(responseDataType.object);\n        if (!def || def.type !== \"object\") {\n          throw new Error(`Missing definition for ${responseDataType.object}`);\n        }\n        return createQueryObjectResponse(responseValue, def);\n      }\n    case \"objectSet\":\n      {\n        const def = definitions.get(responseDataType.objectSet);\n        if (!def) {\n          throw new Error(`Missing definition for ${responseDataType.objectSet}`);\n        }\n        if (typeof responseValue === \"string\") {\n          return createObjectSet(def, client, {\n            type: \"intersect\",\n            objectSets: [{\n              type: \"base\",\n              objectType: responseDataType.objectSet\n            }, {\n              type: \"reference\",\n              reference: responseValue\n            }]\n          });\n        }\n        return createObjectSet(def, client, responseValue);\n      }\n    case \"struct\":\n      {\n        // figure out what keys need to be fixed up\n        for (const [key, subtype] of Object.entries(responseDataType.struct)) {\n          if (requiresConversion(subtype)) {\n            responseValue[key] = await remapQueryResponse(client, subtype, responseValue[key], definitions);\n          }\n        }\n        return responseValue;\n      }\n    case \"map\":\n      {\n        const map = {};\n        !Array.isArray(responseValue) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Expected array entry\") : invariant(false) : void 0;\n        for (const entry of responseValue) {\n          !entry.key ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Expected key\") : invariant(false) : void 0;\n          !entry.value ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Expected value\") : invariant(false) : void 0;\n          const key = responseDataType.keyType.type === \"object\" ? getObjectSpecifier(entry.key, responseDataType.keyType.object, definitions) : entry.key;\n          const value = await remapQueryResponse(client, responseDataType.valueType, entry.value, definitions);\n          map[key] = value;\n        }\n        return map;\n      }\n    case \"twoDimensionalAggregation\":\n      {\n        const result = [];\n        for (const {\n          key,\n          value\n        } of responseValue.groups) {\n          result.push({\n            key,\n            value\n          });\n        }\n        return result;\n      }\n    case \"threeDimensionalAggregation\":\n      {\n        const result = [];\n        for (const {\n          key,\n          groups\n        } of responseValue.groups) {\n          const subResult = [];\n          for (const {\n            key: subKey,\n            value\n          } of groups) {\n            subResult.push({\n              key: subKey,\n              value\n            });\n          }\n          result.push({\n            key,\n            groups: subResult\n          });\n        }\n        return result;\n      }\n  }\n  return responseValue;\n}\nasync function getRequiredDefinitions(dataType, client) {\n  const result = new Map();\n  switch (dataType.type) {\n    case \"objectSet\":\n      {\n        const objectDef = await client.ontologyProvider.getObjectDefinition(dataType.objectSet);\n        result.set(dataType.objectSet, objectDef);\n        break;\n      }\n    case \"object\":\n      {\n        const objectDef = await client.ontologyProvider.getObjectDefinition(dataType.object);\n        result.set(dataType.object, objectDef);\n        break;\n      }\n    case \"set\":\n      {\n        return getRequiredDefinitions(dataType.set, client);\n      }\n    case \"map\":\n      {\n        for (const value of [dataType.keyType, dataType.valueType]) {\n          for (const [type, objectDef] of await getRequiredDefinitions(value, client)) {\n            result.set(type, objectDef);\n          }\n        }\n        break;\n      }\n    case \"struct\":\n      {\n        for (const value of Object.values(dataType.struct)) {\n          for (const [type, objectDef] of await getRequiredDefinitions(value, client)) {\n            result.set(type, objectDef);\n          }\n        }\n        break;\n      }\n    case \"attachment\":\n    case \"boolean\":\n    case \"date\":\n    case \"double\":\n    case \"float\":\n    case \"integer\":\n    case \"long\":\n    case \"string\":\n    case \"threeDimensionalAggregation\":\n    case \"timestamp\":\n    case \"twoDimensionalAggregation\":\n    case \"union\":\n      break;\n  }\n  return result;\n}\nfunction requiresConversion(dataType) {\n  switch (dataType.type) {\n    case \"boolean\":\n    case \"date\":\n    case \"double\":\n    case \"float\":\n    case \"integer\":\n    case \"long\":\n    case \"string\":\n    case \"timestamp\":\n      return false;\n    case \"union\":\n      return true;\n    case \"struct\":\n      return Object.values(dataType.struct).some(requiresConversion);\n    case \"set\":\n      return requiresConversion(dataType.set);\n    case \"attachment\":\n    case \"objectSet\":\n    case \"twoDimensionalAggregation\":\n    case \"threeDimensionalAggregation\":\n    case \"object\":\n      return true;\n    default:\n      return false;\n  }\n}\nfunction getObjectSpecifier(primaryKey, objectTypeApiName, definitions) {\n  const def = definitions.get(objectTypeApiName);\n  if (!def || def.type !== \"object\") {\n    throw new Error(`Missing definition for ${objectTypeApiName}`);\n  }\n  return createObjectSpecifierFromPrimaryKey(def, primaryKey);\n}\nexport function createQueryObjectResponse(primaryKey, objectDef) {\n  return {\n    $apiName: objectDef.apiName,\n    $title: undefined,\n    $objectType: objectDef.apiName,\n    $primaryKey: primaryKey,\n    $objectSpecifier: createObjectSpecifierFromPrimaryKey(objectDef, primaryKey)\n  };\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { __EXPERIMENTAL__NOT_SUPPORTED_YET__createMediaReference, __EXPERIMENTAL__NOT_SUPPORTED_YET__fetchOneByRid, __EXPERIMENTAL__NOT_SUPPORTED_YET__fetchPageByRid, __EXPERIMENTAL__NOT_SUPPORTED_YET__getBulkLinks } from \"@osdk/api/unstable\";\nimport * as OntologiesV2 from \"@osdk/foundry.ontologies\";\nimport { symbolClientContext as oldSymbolClientContext } from \"@osdk/shared.client\";\nimport { createBulkLinksAsyncIterFactory } from \"./__unstable/createBulkLinksAsyncIterFactory.js\";\nimport { applyAction } from \"./actions/applyAction.js\";\nimport { additionalContext } from \"./Client.js\";\nimport { createMinimalClient } from \"./createMinimalClient.js\";\nimport { fetchMetadataInternal } from \"./fetchMetadata.js\";\nimport { MinimalLogger } from \"./logger/MinimalLogger.js\";\nimport { fetchPage } from \"./object/fetchPage.js\";\nimport { fetchSingle } from \"./object/fetchSingle.js\";\nimport { createObjectSet } from \"./objectSet/createObjectSet.js\";\nimport { applyQuery } from \"./queries/applyQuery.js\";\n\n// We import it this way to keep compatible with CJS. If we referenced the\n// value of `symbolClientContext` directly, then we would have to a dynamic import\n// in `createClientInternal` which would make it async and a break.\n// Since this is just a string in `@osdk/shared.client2` instead of a symbol,\n// we can safely perform this trick.\n\nclass ActionInvoker {\n  constructor(clientCtx, actionDef) {\n    // We type the property as a generic function as binding `applyAction`\n    // doesn't return a type thats all that useful anyway\n    // The implements covers us for the most part here as this exact type doesn't\n    // escape this file\n    this.applyAction = applyAction.bind(undefined, clientCtx, actionDef);\n    this.batchApplyAction = applyAction.bind(undefined, clientCtx, actionDef);\n  }\n}\nclass QueryInvoker {\n  constructor(clientCtx, queryDef) {\n    this.executeFunction = applyQuery.bind(undefined, clientCtx, queryDef);\n  }\n}\n\n/** @internal */\nexport function createClientInternal(objectSetFactory,\n// first so i can bind\nbaseUrl, ontologyRid, tokenProvider, options = undefined, fetchFn = fetch) {\n  if (typeof ontologyRid === \"string\") {\n    if (!ontologyRid.startsWith(\"ri.\")) {\n      throw new Error(\"Invalid ontology RID\");\n    }\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    ontologyRid.then(ontologyRid => {\n      if (!ontologyRid.startsWith(\"ri.\")) {\n        // FIXME this promise is not await so this just shows up as an unhandled promise rejection\n        throw new Error(\"Invalid ontology RID\");\n      }\n    });\n  }\n  const clientCtx = createMinimalClient({\n    ontologyRid\n  }, baseUrl, tokenProvider, {\n    ...options,\n    logger: options?.logger ?? new MinimalLogger()\n  }, fetchFn, objectSetFactory);\n  function clientFn(o) {\n    if (o.type === \"object\" || o.type === \"interface\") {\n      return objectSetFactory(o, clientCtx);\n    } else if (o.type === \"action\") {\n      return new ActionInvoker(clientCtx, o); // then as any for dealing with the conditional return value\n    } else if (o.type === \"query\") {\n      return new QueryInvoker(clientCtx, o);\n    } else if (o.type === \"experiment\") {\n      switch (o.name) {\n        case __EXPERIMENTAL__NOT_SUPPORTED_YET__getBulkLinks.name:\n          return {\n            getBulkLinks: createBulkLinksAsyncIterFactory(clientCtx)\n          };\n        case __EXPERIMENTAL__NOT_SUPPORTED_YET__fetchOneByRid.name:\n          return {\n            fetchOneByRid: async (objectType, rid, options) => {\n              return await fetchSingle(clientCtx, objectType, options, createWithRid([rid]));\n            }\n          };\n        case __EXPERIMENTAL__NOT_SUPPORTED_YET__createMediaReference.name:\n          return {\n            createMediaReference: async args => {\n              const {\n                data,\n                fileName,\n                objectType,\n                propertyType\n              } = args;\n              return await OntologiesV2.MediaReferenceProperties.upload(clientCtx, await clientCtx.ontologyRid, objectType.apiName, propertyType, data, {\n                mediaItemPath: fileName,\n                preview: true\n              });\n            }\n          };\n        case __EXPERIMENTAL__NOT_SUPPORTED_YET__fetchPageByRid.name:\n          return {\n            fetchPageByRid: async (objectOrInterfaceType, rids, options = {}) => {\n              return await fetchPage(clientCtx, objectOrInterfaceType, options, createWithRid(rids));\n            }\n          };\n      }\n      throw new Error(\"not implemented\");\n    } else {\n      throw new Error(\"not implemented\");\n    }\n  }\n  const fetchMetadata = fetchMetadataInternal.bind(undefined, clientCtx);\n  const symbolClientContext = \"__osdkClientContext\";\n  const client = Object.defineProperties(clientFn, {\n    [oldSymbolClientContext]: {\n      value: clientCtx\n    },\n    [symbolClientContext]: {\n      value: clientCtx\n    },\n    [additionalContext]: {\n      value: clientCtx\n    },\n    fetchMetadata: {\n      value: fetchMetadata\n    }\n  });\n  return client;\n}\nexport const createClient = createClientInternal.bind(undefined, createObjectSet);\nfunction createWithRid(rids) {\n  const withRid = {\n    type: \"static\",\n    \"objects\": rids\n  };\n  return withRid;\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createSharedClientContext } from \"@osdk/shared.client.impl\";\nimport { USER_AGENT } from \"./util/UserAgent.js\";\n/**\n * Creates a client that can only be used with Platform APIs.\n *\n * If you already have an OSDK Client (from `createClient`), you do not need to\n * create one of these - those clients can be used with Platform APIs as well.\n *\n * @param baseUrl\n * @param tokenProvider\n * @param options Currently unused, reserved for future use.\n * @param fetchFn\n * @returns\n */\nexport function createPlatformClient(baseUrl, tokenProvider, options = undefined, fetchFn = fetch) {\n  return createSharedClientContext(baseUrl, tokenProvider, USER_AGENT, fetchFn);\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport invariant from \"tiny-invariant\";\nconst isoRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?$/;\n\n/**\n * Extracts the date from a ISO 8601 formatted date time string. Throws if the input is not in the correct format.\n *\n * @param dateTime An ISO 8601 formatted date time string\n * @returns The date part of the input string\n */\nexport const extractDate = dateTime => {\n  !(dateTime.length < 33) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Invalid date format. Provided input is too long.\") : invariant(false) : void 0;\n  !isoRegex.test(dateTime) ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Invalid date format. Expected ISO 8601 format, but received ${dateTime}`) : invariant(false) : void 0;\n  return extractDateFromIsoString(dateTime);\n};\n\n/**\n * Generates a string representation of the input date (YYYY-MM-DD). The resulting date string reflects the given date in UTC time.\n *\n * @param date\n * @returns The date part of a ISO 8601 formatted date time string\n */\nexport const extractDateInUTC = date => {\n  return extractDateFromIsoString(date.toISOString());\n};\n\n/**\n * Generates a string representation of the input date (YYYY-MM-DD). The resulting date string reflects the given date in the local time zone.\n *\n * @param date\n * @returns The date part of a ISO 8601 formatted date time string\n */\nexport const extractDateInLocalTime = date => {\n  return extractDateFromIsoString(generateOffsetUtcString(date));\n};\n\n/** @internal */\nexport const generateOffsetUtcString = date => {\n  const offsetMs = date.getTimezoneOffset() * 60 * 1000;\n  return new Date(date.getTime() - offsetMs).toISOString();\n};\nconst extractDateFromIsoString = dateTime => {\n  return dateTime.split(\"T\")[0];\n};"]}
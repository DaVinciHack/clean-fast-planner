{"version":3,"sources":["../../../../node_modules/.pnpm/@osdk+foundry.ontologies@2.20.0/node_modules/@osdk/foundry.ontologies/build/esm/public/Action.js","../../../../node_modules/.pnpm/@osdk+shared.client@1.0.1/node_modules/@osdk/shared.client/index.js","../../../../node_modules/.pnpm/@osdk+shared.client2@1.0.0/node_modules/@osdk/shared.client2/index.js","../../../../node_modules/.pnpm/@osdk+shared.net.platformapi@1.3.0/node_modules/@osdk/shared.net.platformapi/build/esm/foundryPlatformFetch.js","../../../../node_modules/.pnpm/@osdk+foundry.ontologies@2.20.0/node_modules/@osdk/foundry.ontologies/build/esm/public/ActionTypeV2.js","../../../../node_modules/.pnpm/@osdk+foundry.ontologies@2.20.0/node_modules/@osdk/foundry.ontologies/build/esm/public/Attachment.js","../../../../node_modules/.pnpm/@osdk+foundry.ontologies@2.20.0/node_modules/@osdk/foundry.ontologies/build/esm/public/MediaReferenceProperty.js","../../../../node_modules/.pnpm/@osdk+foundry.ontologies@2.20.0/node_modules/@osdk/foundry.ontologies/build/esm/public/ObjectTypeV2.js","../../../../node_modules/.pnpm/@osdk+foundry.ontologies@2.20.0/node_modules/@osdk/foundry.ontologies/build/esm/public/OntologyInterface.js","../../../../node_modules/.pnpm/@osdk+foundry.ontologies@2.20.0/node_modules/@osdk/foundry.ontologies/build/esm/public/OntologyObjectSet.js","../../../../node_modules/.pnpm/@osdk+foundry.ontologies@2.20.0/node_modules/@osdk/foundry.ontologies/build/esm/public/Query.js","../../../../node_modules/.pnpm/@osdk+foundry.ontologies@2.20.0/node_modules/@osdk/foundry.ontologies/build/esm/public/QueryType.js","../../../../node_modules/.pnpm/@osdk+foundry.ontologies@2.20.0/node_modules/@osdk/foundry.ontologies/build/esm/public/TimeSeriesPropertyV2.js","../../../../node_modules/.pnpm/@osdk+foundry.ontologies@2.20.0/node_modules/@osdk/foundry.ontologies/build/esm/public/TimeSeriesValueBankProperty.js","../../src/util/addUserAgentAndRequestContextHeaders.ts","../../src/util/extractRdpDefinition.ts","../../src/util/objectSetUtils.ts","../../src/object/fetchPage.ts","../../src/Client.ts"],"names":["symbolClientContext","PalantirApiError","UnknownError","get","_get","upload","_upload","list","_list","aggregate","_aggregate","createFetchHeaderMutator","definitions","invariant","result"],"mappings":"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","file":"chunk-ZV5KKQ4R.cjs","sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { foundryPlatformFetch as $foundryPlatformFetch } from \"@osdk/shared.net.platformapi\";\n//\nconst _apply = [1, \"/v2/ontologies/{0}/actions/{1}/apply\", 3];\n/**\n * Applies an action using the given parameters.\n *\n * Changes to objects or links stored in Object Storage V1 are eventually consistent and may take some time to be visible.\n * Edits to objects or links in Object Storage V2 will be visible immediately after the action completes.\n *\n * Note that [parameter default values](https://www.palantir.com/docs/foundry/action-types/parameters-default-value/) are not currently supported by\n * this endpoint.\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:ontologies-read api:ontologies-write`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read, api:ontologies-write]\n * URL: /v2/ontologies/{ontology}/actions/{action}/apply\n */\nexport function apply($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _apply, ...args);\n}\nconst _applyAsync = [1, \"/v2/ontologies/{0}/actions/{1}/applyAsync\", 3];\n/**\n * Applies an action using the given parameters.\n *\n * Changes to objects or links stored in Object Storage V1 are eventually consistent and may take some time to be visible.\n * Edits to objects or links in Object Storage V2 will be visible immediately after the action completes.\n *\n * Note that [parameter default values](https://www.palantir.com/docs/foundry/action-types/parameters-default-value/) are not currently supported by\n * this endpoint.\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:ontologies-read api:ontologies-write`.\n *\n * @alpha\n *\n * Required Scopes: [api:ontologies-read, api:ontologies-write]\n * URL: /v2/ontologies/{ontology}/actions/{action}/applyAsync\n */\nexport function applyAsync($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _applyAsync, ...args);\n}\nconst _applyBatch = [1, \"/v2/ontologies/{0}/actions/{1}/applyBatch\", 3];\n/**\n * Applies multiple actions (of the same Action Type) using the given parameters.\n *\n * Changes to objects or links stored in Object Storage V1 are eventually consistent and may take some time to be visible.\n * Edits to objects or links in Object Storage V2 will be visible immediately after the action completes.\n *\n * Up to 20 actions may be applied in one call. Actions that only modify objects in Object Storage v2 and do not\n * call Functions may receive a higher limit.\n *\n * Note that [notifications](https://www.palantir.com/docs/foundry/action-types/notifications/) are not currently supported by this endpoint.\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:ontologies-read api:ontologies-write`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read, api:ontologies-write]\n * URL: /v2/ontologies/{ontology}/actions/{action}/applyBatch\n */\nexport function applyBatch($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _applyBatch, ...args);\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const symbolClientContext = Symbol(\"ClientContext\");","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const symbolClientContext = \"__osdkClientContext\";","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { symbolClientContext as oldSymbolClientContext } from \"@osdk/shared.client\";\nimport { symbolClientContext } from \"@osdk/shared.client2\";\nimport { PalantirApiError, UnknownError } from \"@osdk/shared.net.errors\";\nexport async function foundryPlatformFetch(client, [httpMethodNum, origPath, flags, contentType, responseContentType], ...args) {\n  const path = origPath.replace(/\\{([^}]+)\\}/g, () => encodeURIComponent(args.shift()));\n  const body = flags & 1 ? args.shift() : undefined;\n  const queryArgs = flags & 2 ? args.shift() : undefined;\n  const headerArgs = flags & 4 ? args.shift() : undefined;\n  const method = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\"][httpMethodNum];\n  return await apiFetch(client[symbolClientContext] ?? client[oldSymbolClientContext] ?? client, method, path, body, queryArgs, headerArgs, contentType, responseContentType);\n}\nasync function apiFetch(clientCtx, method, endpointPath, data, queryArguments, headers, requestMediaType, responseMediaType) {\n  const url = parseUrl(clientCtx.baseUrl, endpointPath);\n  for (const [key, value] of Object.entries(queryArguments || {})) {\n    if (value == null) {\n      continue;\n    }\n    if (Array.isArray(value)) {\n      for (const item of value) {\n        url.searchParams.append(key, item);\n      }\n    } else {\n      url.searchParams.append(key, value);\n    }\n  }\n  const headersInit = new Headers();\n  headersInit.set(\"Content-Type\", requestMediaType ?? \"application/json\");\n  headersInit.set(\"Accept\", responseMediaType ?? \"application/json\");\n  Object.entries(headers || {}).forEach(([key, value]) => {\n    if (value != null) {\n      headersInit.append(key, value.toString());\n    }\n  });\n  const body = data == null || data instanceof globalThis.Blob ? data : JSON.stringify(data);\n  // Because this uses the client's fetch, there is a 99.99% chance that it is already going\n  // to handle the error case and throw a PalantirApiError since its wrapped in a\n  // createFetchOrThrow.\n  const response = await clientCtx.fetch(url.toString(), {\n    body,\n    method: method,\n    headers: headersInit\n  });\n  // However, if we ended up using a \"regular\" fetch, the\n  // error status codes are not thrown by fetch automatically,\n  // we have to look at the ok property and behave accordingly\n  if (!response.ok) {\n    try {\n      const convertedError = await response.json();\n      return new PalantirApiError(convertedError.message, convertedError.errorName, convertedError.errorCode, response.status, convertedError.errorInstanceId, convertedError.parameters);\n    } catch (e) {\n      if (e instanceof Error) {\n        return new UnknownError(e.message, \"UNKNOWN\");\n      }\n      return new UnknownError(\"Unable to parse error response\", \"UNKNOWN\");\n    }\n  }\n  // Do not return anything if its a 204. Do not parse either!\n  if (response.status === 204) {\n    return;\n  }\n  if (responseMediaType == null || responseMediaType === \"application/json\") {\n    return await response.json();\n  }\n  return response;\n}\nexport function parseUrl(baseUrl, endpointPath) {\n  baseUrl += baseUrl.endsWith(\"/\") ? \"\" : \"/\";\n  return new URL(`api${endpointPath}`, baseUrl);\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { foundryPlatformFetch as $foundryPlatformFetch } from \"@osdk/shared.net.platformapi\";\n//\nconst _list = [0, \"/v2/ontologies/{0}/actionTypes\", 2];\n/**\n * Lists the action types for the given Ontology.\n *\n * Each page may be smaller than the requested page size. However, it is guaranteed that if there are more\n * results available, at least one result will be present in the response.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/actionTypes\n */\nexport function list($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _list, ...args);\n}\nconst _get = [0, \"/v2/ontologies/{0}/actionTypes/{1}\"];\n/**\n * Gets a specific action type with the given API name.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/actionTypes/{actionType}\n */\nexport function get($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _get, ...args);\n}\nconst _getByRid = [0, \"/v2/ontologies/{0}/actionTypes/byRid/{1}\"];\n/**\n * Gets a specific action type with the given RID.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/actionTypes/byRid/{actionTypeRid}\n */\nexport function getByRid($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _getByRid, ...args);\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { foundryPlatformFetch as $foundryPlatformFetch } from \"@osdk/shared.net.platformapi\";\n//\nconst _upload = [1, \"/v2/ontologies/attachments/upload\", 7, \"*/*\"];\n/**\n * Upload an attachment to use in an action. Any attachment which has not been linked to an object via\n * an action within one hour after upload will be removed.\n * Previously mapped attachments which are not connected to any object anymore are also removed on\n * a biweekly basis.\n * The body of the request must contain the binary content of the file and the `Content-Type` header must be `application/octet-stream`.\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:ontologies-write`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-write]\n * URL: /v2/ontologies/attachments/upload\n */\nexport function upload($ctx, ...args) {\n  const headerParams = {\n    ...args[2],\n    \"Content-Type\": args[2]?.[\"Content-Type\"] ?? args[0].type,\n    \"Content-Length\": args[0].size.toString()\n  };\n  return $foundryPlatformFetch($ctx, _upload, args[0], args[1], headerParams);\n}\nconst _read = [0, \"/v2/ontologies/attachments/{0}/content\",,, \"*/*\"];\n/**\n * Get the content of an attachment.\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/attachments/{attachmentRid}/content\n */\nexport function read($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _read, ...args);\n}\nconst _get = [0, \"/v2/ontologies/attachments/{0}\"];\n/**\n * Get the metadata of an attachment.\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/attachments/{attachmentRid}\n */\nexport function get($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _get, ...args);\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { foundryPlatformFetch as $foundryPlatformFetch } from \"@osdk/shared.net.platformapi\";\n//\nconst _getMediaContent = [0, \"/v2/ontologies/{0}/objects/{1}/{2}/media/{3}/content\", 2,, \"*/*\"];\n/**\n * Gets the content of a media item referenced by this property.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scopes: `api:ontologies-read`.\n *\n * @beta\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objects/{objectType}/{primaryKey}/media/{property}/content\n */\nexport function getMediaContent($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _getMediaContent, ...args);\n}\nconst _getMediaMetadata = [0, \"/v2/ontologies/{0}/objects/{1}/{2}/media/{3}/metadata\", 2];\n/**\n * Gets metadata about the media item referenced by this property.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scopes: `api:ontologies-read`.\n *\n * @alpha\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objects/{objectType}/{primaryKey}/media/{property}/metadata\n */\nexport function getMediaMetadata($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _getMediaMetadata, ...args);\n}\nconst _upload = [1, \"/v2/ontologies/{0}/objectTypes/{1}/media/{2}/upload\", 3, \"*/*\"];\n/**\n * Uploads a media item to the media set which backs the specified property.  The property must be backed by a single media set and branch, otherwise an error will be thrown.\n * The body of the request must contain the binary content of the file and the `Content-Type` header must be `application/octet-stream`.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scopes: `api:ontologies-read api:ontologies-write`.\n *\n * @beta\n *\n * Required Scopes: [api:ontologies-read, api:ontologies-write]\n * URL: /v2/ontologies/{ontology}/objectTypes/{objectType}/media/{property}/upload\n */\nexport function upload($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _upload, ...args);\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { foundryPlatformFetch as $foundryPlatformFetch } from \"@osdk/shared.net.platformapi\";\n//\nconst _list = [0, \"/v2/ontologies/{0}/objectTypes\", 2];\n/**\n * Lists the object types for the given Ontology.\n *\n * Each page may be smaller or larger than the requested page size. However, it is guaranteed that if there are\n * more results available, at least one result will be present in the\n * response.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objectTypes\n */\nexport function list($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _list, ...args);\n}\nconst _get = [0, \"/v2/ontologies/{0}/objectTypes/{1}\"];\n/**\n * Gets a specific object type with the given API name.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objectTypes/{objectType}\n */\nexport function get($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _get, ...args);\n}\nconst _getFullMetadata = [0, \"/v2/ontologies/{0}/objectTypes/{1}/fullMetadata\", 2];\n/**\n * Gets the full metadata for a specific object type with the given API name.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @alpha\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objectTypes/{objectType}/fullMetadata\n */\nexport function getFullMetadata($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _getFullMetadata, ...args);\n}\nconst _listOutgoingLinkTypes = [0, \"/v2/ontologies/{0}/objectTypes/{1}/outgoingLinkTypes\", 2];\n/**\n * List the outgoing links for an object type.\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objectTypes/{objectType}/outgoingLinkTypes\n */\nexport function listOutgoingLinkTypes($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _listOutgoingLinkTypes, ...args);\n}\nconst _getOutgoingLinkType = [0, \"/v2/ontologies/{0}/objectTypes/{1}/outgoingLinkTypes/{2}\"];\n/**\n * Get an outgoing link for an object type.\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objectTypes/{objectType}/outgoingLinkTypes/{linkType}\n */\nexport function getOutgoingLinkType($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _getOutgoingLinkType, ...args);\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { foundryPlatformFetch as $foundryPlatformFetch } from \"@osdk/shared.net.platformapi\";\n//\nconst _list = [0, \"/v2/ontologies/{0}/interfaceTypes\", 2];\n/**\n * :::callout{theme=warning title=Warning}\n * This endpoint is in preview and may be modified or removed at any time.\n * To use this endpoint, add `preview=true` to the request query parameters.\n * :::\n *\n * Lists the interface types for the given Ontology.\n *\n * Each page may be smaller than the requested page size. However, it is guaranteed that if there are more\n * results available, at least one result will be present in the response.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @beta\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/interfaceTypes\n */\nexport function list($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _list, ...args);\n}\nconst _get = [0, \"/v2/ontologies/{0}/interfaceTypes/{1}\", 2];\n/**\n * :::callout{theme=warning title=Warning}\n * This endpoint is in preview and may be modified or removed at any time.\n * To use this endpoint, add `preview=true` to the request query parameters.\n * :::\n *\n * Gets a specific interface type with the given API name.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @beta\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/interfaceTypes/{interfaceType}\n */\nexport function get($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _get, ...args);\n}\nconst _search = [1, \"/v2/ontologies/{0}/interfaces/{1}/search\", 3];\n/**\n * :::callout{theme=warning title=Warning}\n * This endpoint will be removed once TS OSDK is updated to use `objectSets/loadObjects` with interface object\n * sets.\n * :::\n * :::callout{theme=warning title=Warning}\n * This endpoint is in preview and may be modified or removed at any time.\n * To use this endpoint, add `preview=true` to the request query parameters.\n * :::\n *\n * Search for objects in the specified ontology and interface type. Any properties specified in the \"where\" or\n * \"orderBy\" parameters must be shared property type API names defined on the interface. The following search\n * queries are supported:\n *\n * | Query type                              | Description                                                                                                       | Supported Types                 |\n * |-----------------------------------------|-------------------------------------------------------------------------------------------------------------------|---------------------------------|\n * | lt                                      | The provided property is less than the provided value.                                                            | number, string, date, timestamp |\n * | gt                                      | The provided property is greater than the provided value.                                                         | number, string, date, timestamp |\n * | lte                                     | The provided property is less than or equal to the provided value.                                                | number, string, date, timestamp |\n * | gte                                     | The provided property is greater than or equal to the provided value.                                             | number, string, date, timestamp |\n * | eq                                      | The provided property is exactly equal to the provided value.                                                     | number, string, date, timestamp |\n * | isNull                                  | The provided property is (or is not) null.                                                                        | all                             |\n * | contains                                | The provided property contains the provided value.                                                                | array                           |\n * | not                                     | The sub-query does not match.                                                                                     | N/A (applied on a query)        |\n * | and                                     | All the sub-queries match.                                                                                        | N/A (applied on queries)        |\n * | or                                      | At least one of the sub-queries match.                                                                            | N/A (applied on queries)        |\n * | startsWith                              | The provided property starts with the provided term.                                                              | string                          |\n * | containsAllTermsInOrderPrefixLastTerm   | The provided property contains all the terms provided in order. The last term can be a partial prefix match.      | string                          |\n * | containsAllTermsInOrder                 | The provided property contains the provided terms as a substring.                                                 | string                          |\n * | containsAnyTerm                         | The provided property contains at least one of the terms separated by whitespace.                                 | string                          |\n * | containsAllTerms                        | The provided property contains all the terms separated by whitespace.                                             | string                          |\n *\n * Queries can be at most three levels deep. By default, terms are separated by whitespace or punctuation (`?!,:;-[](){}'\"~`). Periods (`.`) on their own are ignored.\n * Partial terms are not matched by terms filters except where explicitly noted.\n *\n * Attempting to use an unsupported query will result in a validation error. Third-party applications using this\n * endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @alpha\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/interfaces/{interfaceType}/search\n */\nexport function search($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _search, ...args);\n}\nconst _aggregate = [1, \"/v2/ontologies/{0}/interfaces/{1}/aggregate\", 3];\n/**\n * :::callout{theme=warning title=Warning}\n * This endpoint will be removed once TS OSDK is updated to use `objectSets/aggregate` with interface object\n * sets.\n * :::\n * :::callout{theme=warning title=Warning}\n * This endpoint is in preview and may be modified or removed at any time.\n * To use this endpoint, add `preview=true` to the request query parameters.\n * :::\n *\n * Perform functions on object fields in the specified ontology and of the specified interface type. Any\n * properties specified in the query must be shared property type API names defined on the interface.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @alpha\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/interfaces/{interfaceType}/aggregate\n */\nexport function aggregate($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _aggregate, ...args);\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { foundryPlatformFetch as $foundryPlatformFetch } from \"@osdk/shared.net.platformapi\";\n//\nconst _createTemporary = [1, \"/v2/ontologies/{0}/objectSets/createTemporary\", 1];\n/**\n * Creates a temporary `ObjectSet` from the given definition. This `ObjectSet` expires after one hour.\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:ontologies-read api:ontologies-write`.\n *\n * @beta\n *\n * Required Scopes: [api:ontologies-read, api:ontologies-write]\n * URL: /v2/ontologies/{ontology}/objectSets/createTemporary\n */\nexport function createTemporary($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _createTemporary, ...args);\n}\nconst _get = [0, \"/v2/ontologies/{0}/objectSets/{1}\"];\n/**\n * Gets the definition of the `ObjectSet` with the given RID.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @alpha\n *\n * Required Scopes: []\n * URL: /v2/ontologies/{ontology}/objectSets/{objectSetRid}\n */\nexport function get($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _get, ...args);\n}\nconst _load = [1, \"/v2/ontologies/{0}/objectSets/loadObjects\", 3];\n/**\n * Load the ontology objects present in the `ObjectSet` from the provided object set definition.\n *\n * For Object Storage V1 backed objects, this endpoint returns a maximum of 10,000 objects. After 10,000 objects have been returned and if more objects\n * are available, attempting to load another page will result in an `ObjectsExceededLimit` error being returned. There is no limit on Object Storage V2 backed objects.\n *\n * Note that null value properties will not be returned.\n *\n * Vector properties will not be returned unless included in the `select` parameter.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objectSets/loadObjects\n */\nexport function load($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _load, ...args);\n}\nconst _loadMultipleObjectTypes = [1, \"/v2/ontologies/{0}/objectSets/loadObjectsMultipleObjectTypes\", 3];\n/**\n * Load the ontology objects present in the `ObjectSet` from the provided object set definition. The resulting\n * objects may be scoped to an object type, in which all the selected properties on the object type are returned, or scoped\n * to an interface, in which only the object type properties that implement the properties of any interfaces in its\n * scope are returned. For objects that are scoped to an interface in the result, a mapping from interface to\n * object implementation is returned in order to interpret the objects as the interfaces that they implement.\n *\n * For Object Storage V1 backed objects, this endpoint returns a maximum of 10,000 objects. After 10,000 objects have been returned and if more objects\n * are available, attempting to load another page will result in an `ObjectsExceededLimit` error being returned. There is no limit on Object Storage V2 backed objects.\n *\n * Note that null value properties will not be returned. In addition, property metadata (rid, apiName, and primaryKey)\n * will be prefixed with '$' instead of '\\_\\_' as is the case in `loadObjects`.\n *\n * Vector properties will not be returned unless included in the `select` parameter.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @beta\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objectSets/loadObjectsMultipleObjectTypes\n */\nexport function loadMultipleObjectTypes($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _loadMultipleObjectTypes, ...args);\n}\nconst _loadObjectsOrInterfaces = [1, \"/v2/ontologies/{0}/objectSets/loadObjectsOrInterfaces\", 3];\n/**\n * Load the ontology objects present in the `ObjectSet` from the provided object set definition. If the requested\n * object set contains interfaces and the object can be viewed as an interface, it will contain the properties\n * defined by the interface. If not, it will contain the properties defined by its object type. This allows directly\n * loading all objects of an interface where all objects are viewed as the interface, for example.\n *\n * Note that the result object set cannot contain a mix of objects with \"interface\" properties and \"object type\"\n * properties. Attempting to load an object set like this will result in an error.\n *\n * For Object Storage V1 backed objects, this endpoint returns a maximum of 10,000 objects. After 10,000 objects have been returned and if more objects\n * are available, attempting to load another page will result in an `ObjectsExceededLimit` error being returned. There is no limit on Object Storage V2 backed objects.\n *\n * Note that null value properties will not be returned. In addition, property metadata (rid, apiName, and primaryKey)\n * will be prefixed with '$' instead of '\\_\\_' as is the case in `/loadObjects`.\n *\n * Vector properties will not be returned unless included in the `select` parameter.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @beta\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objectSets/loadObjectsOrInterfaces\n */\nexport function loadObjectsOrInterfaces($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _loadObjectsOrInterfaces, ...args);\n}\nconst _aggregate = [1, \"/v2/ontologies/{0}/objectSets/aggregate\", 3];\n/**\n * Aggregates the ontology objects present in the `ObjectSet` from the provided object set definition.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objectSets/aggregate\n */\nexport function aggregate($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _aggregate, ...args);\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { foundryPlatformFetch as $foundryPlatformFetch } from \"@osdk/shared.net.platformapi\";\n//\nconst _execute = [1, \"/v2/ontologies/{0}/queries/{1}/execute\", 3];\n/**\n * Executes a Query using the given parameters.\n *\n * Optional parameters do not need to be supplied.\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/queries/{queryApiName}/execute\n */\nexport function execute($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _execute, ...args);\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { foundryPlatformFetch as $foundryPlatformFetch } from \"@osdk/shared.net.platformapi\";\n//\nconst _list = [0, \"/v2/ontologies/{0}/queryTypes\", 2];\n/**\n * Lists the query types for the given Ontology.\n *\n * Each page may be smaller than the requested page size. However, it is guaranteed that if there are more\n * results available, at least one result will be present in the response.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/queryTypes\n */\nexport function list($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _list, ...args);\n}\nconst _get = [0, \"/v2/ontologies/{0}/queryTypes/{1}\", 2];\n/**\n * Gets a specific query type with the given API name.\n *\n * Third-party applications using this endpoint via OAuth2 must request the following operation scope: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/queryTypes/{queryApiName}\n */\nexport function get($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _get, ...args);\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { foundryPlatformFetch as $foundryPlatformFetch } from \"@osdk/shared.net.platformapi\";\n//\nconst _getFirstPoint = [0, \"/v2/ontologies/{0}/objects/{1}/{2}/timeseries/{3}/firstPoint\", 2];\n/**\n * Get the first point of a time series property.\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objects/{objectType}/{primaryKey}/timeseries/{property}/firstPoint\n */\nexport function getFirstPoint($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _getFirstPoint, ...args);\n}\nconst _getLastPoint = [0, \"/v2/ontologies/{0}/objects/{1}/{2}/timeseries/{3}/lastPoint\", 2];\n/**\n * Get the last point of a time series property.\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objects/{objectType}/{primaryKey}/timeseries/{property}/lastPoint\n */\nexport function getLastPoint($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _getLastPoint, ...args);\n}\nconst _streamPoints = [1, \"/v2/ontologies/{0}/objects/{1}/{2}/timeseries/{3}/streamPoints\", 3,, \"*/*\"];\n/**\n * Stream all of the points of a time series property.\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:ontologies-read`.\n *\n * @public\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objects/{objectType}/{primaryKey}/timeseries/{property}/streamPoints\n */\nexport function streamPoints($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _streamPoints, ...args);\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { foundryPlatformFetch as $foundryPlatformFetch } from \"@osdk/shared.net.platformapi\";\n//\nconst _getLatestValue = [0, \"/v2/ontologies/{0}/objects/{1}/{2}/timeseries/{3}/latestValue\", 2];\n/**\n * Get the latest value of a property backed by a timeseries. If a specific geotime series integration has both a history and a live integration, we will give precedence to the live integration.\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:ontologies-read`.\n *\n * @beta\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objects/{objectType}/{primaryKey}/timeseries/{propertyName}/latestValue\n */\nexport function getLatestValue($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _getLatestValue, ...args);\n}\nconst _streamValues = [1, \"/v2/ontologies/{0}/objects/{1}/{2}/timeseries/{3}/streamValues\", 3,, \"*/*\"];\n/**\n * Stream all of the points of a time series property (this includes geotime series references).\n *\n * Third-party applications using this endpoint via OAuth2 must request the\n * following operation scopes: `api:ontologies-read`.\n *\n * @beta\n *\n * Required Scopes: [api:ontologies-read]\n * URL: /v2/ontologies/{ontology}/objects/{objectType}/{primaryKey}/timeseries/{property}/streamValues\n */\nexport function streamValues($ctx, ...args) {\n  return $foundryPlatformFetch($ctx, _streamValues, ...args);\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createFetchHeaderMutator } from \"@osdk/shared.net.fetch\";\nexport const addUserAgentAndRequestContextHeaders = (client, withMetadata) => ({\n  ...client,\n  fetch: createFetchHeaderMutator(client.fetch, headers => {\n    headers.set(\"X-OSDK-Request-Context\", JSON.stringify(client.requestContext));\n    if (withMetadata.osdkMetadata) {\n      headers.set(\"Fetch-User-Agent\", withMetadata.osdkMetadata.extraUserAgent);\n    }\n    return headers;\n  })\n});","/*\n * Copyright 2025 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport invariant from \"tiny-invariant\";\nexport async function extractRdpDefinition(clientCtx, objectSet) {\n  return (await extractRdpDefinitionInternal(clientCtx, objectSet, undefined)).definitions;\n}\n\n/* @internal\n* Returns a tuple of the derived property definitions and the object type that the derived property is defined on.\n*/\nasync function extractRdpDefinitionInternal(clientCtx, objectSet, methodInputObjectType) {\n  switch (objectSet.type) {\n    case \"searchAround\":\n      {\n        const {\n          definitions,\n          childObjectType\n        } = await extractRdpDefinitionInternal(clientCtx, objectSet.objectSet, methodInputObjectType);\n        if (childObjectType === undefined || childObjectType === \"\") {\n          return {\n            definitions: {}\n          };\n        }\n        const objDef = await clientCtx.ontologyProvider.getObjectDefinition(childObjectType);\n        const linkDef = objDef.links[objectSet.link];\n        !linkDef ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Missing link definition for '${objectSet.link}'`) : invariant(false) : void 0;\n        return {\n          definitions,\n          childObjectType: objDef.links[objectSet.link].targetType\n        };\n      }\n    case \"withProperties\":\n      {\n        // These are the definitions and current object type for all object set operations prior to the definition (e.g. filter, pivotTo, etc.)\n        const {\n          definitions,\n          childObjectType\n        } = await extractRdpDefinitionInternal(clientCtx, objectSet.objectSet, methodInputObjectType);\n        if (childObjectType === undefined || childObjectType === \"\") {\n          return {\n            definitions: {}\n          };\n        }\n        for (const [name, definition] of Object.entries(objectSet.derivedProperties)) {\n          if (definition.type !== \"selection\") {\n            continue;\n          }\n          switch (definition.operation.type) {\n            case \"collectList\":\n            case \"collectSet\":\n            case \"get\":\n              // This is the object set construction for the derived property definition construction. We pass in childObjectType so that when we reach MethodInputObjectSet, we know where to start looking.\n              const {\n                childObjectType: operationLevelObjectType\n              } = await extractRdpDefinitionInternal(clientCtx, definition.objectSet, childObjectType);\n              if (operationLevelObjectType === undefined || operationLevelObjectType === \"\") {\n                return {\n                  definitions: {}\n                };\n              }\n              const objDef = await clientCtx.ontologyProvider.getObjectDefinition(operationLevelObjectType);\n              definitions[name] = objDef.properties[definition.operation.selectedPropertyApiName];\n            default:\n              continue;\n          }\n        }\n        return {\n          definitions,\n          childObjectType\n        };\n      }\n    case \"methodInput\":\n      return {\n        definitions: {},\n        childObjectType: methodInputObjectType\n      };\n    case \"base\":\n      return {\n        definitions: {},\n        childObjectType: objectSet.objectType\n      };\n    case \"interfaceBase\":\n      return {\n        definitions: {},\n        childObjectType: objectSet.interfaceType\n      };\n    case \"filter\":\n    case \"asBaseObjectTypes\":\n    case \"asType\":\n    case \"nearestNeighbors\":\n      return extractRdpDefinitionInternal(clientCtx, objectSet.objectSet, methodInputObjectType);\n    // These will throw in OSS so we should throw here so no request is made\n    case \"intersect\":\n    case \"subtract\":\n    case \"union\":\n      const objectSets = objectSet.objectSets;\n      const objectSetTypes = await Promise.all(objectSets.map(os => extractRdpDefinitionInternal(clientCtx, os, methodInputObjectType)));\n      const definitions = objectSetTypes.reduce((acc, {\n        definitions\n      }) => ({\n        ...acc,\n        ...definitions\n      }), {});\n      !(Object.keys(definitions).length === 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Object sets combined using intersect, subtract, or union must not contain any derived property definitions\") : invariant(false) : void 0;\n      const firstValidChildObjectType = objectSetTypes.find(({\n        childObjectType\n      }) => childObjectType != null)?.childObjectType;\n      !objectSetTypes.every(({\n        childObjectType\n      }) => childObjectType === firstValidChildObjectType || childObjectType == null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"All object sets in an intersect, subtract, or union must have the same child object type\") : invariant(false) : void 0;\n      return {\n        definitions: {},\n        childObjectType: firstValidChildObjectType\n      };\n    case \"static\":\n    case \"reference\":\n      // Static and reference object sets are always intersected with a base object set, so we can just return no child object type.\n      return {\n        definitions: {}\n      };\n    // We don't have to worry about new object sets being added and doing a runtime break and breaking people since the OSDK is always constructing these.\n    default:\n      const _ = objectSet;\n      !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, `Unsupported object set type for Runtime Derived Properties`) : invariant(false) : void 0;\n  }\n}","/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function resolveBaseObjectSetType(objectType) {\n  return objectType.type === \"interface\" ? {\n    type: \"interfaceBase\",\n    interfaceType: objectType[\"apiName\"]\n  } : {\n    type: \"base\",\n    objectType: objectType[\"apiName\"]\n  };\n}","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as OntologiesV2 from \"@osdk/foundry.ontologies\";\nimport { addUserAgentAndRequestContextHeaders } from \"../util/addUserAgentAndRequestContextHeaders.js\";\nimport { extractRdpDefinition } from \"../util/extractRdpDefinition.js\";\nimport { resolveBaseObjectSetType } from \"../util/objectSetUtils.js\";\nexport function augment(type, ...properties) {\n  return {\n    [type.apiName]: properties\n  };\n}\n\n/** @internal */\nexport function objectSetToSearchJsonV2(objectSet, expectedApiName, existingWhere = undefined) {\n  if (objectSet.type === \"base\" || objectSet.type === \"interfaceBase\") {\n    if (objectSet.type === \"base\" && objectSet.objectType !== expectedApiName) {\n      throw new Error(`Expected objectSet.objectType to be ${expectedApiName}, but got ${objectSet.objectType}`);\n    }\n    if (objectSet.type === \"interfaceBase\" && objectSet.interfaceType !== expectedApiName) {\n      throw new Error(`Expected objectSet.objectType to be ${expectedApiName}, but got ${objectSet.interfaceType}`);\n    }\n    return existingWhere;\n  }\n  if (objectSet.type === \"filter\") {\n    return objectSetToSearchJsonV2(objectSet.objectSet, expectedApiName, existingWhere == null ? objectSet.where : {\n      type: \"and\",\n      value: [existingWhere, objectSet.where]\n    });\n  }\n  throw new Error(`Unsupported objectSet type: ${objectSet.type}`);\n}\n\n/** @internal */\nexport function resolveInterfaceObjectSet(objectSet, interfaceTypeApiName, args) {\n  return args?.$includeAllBaseObjectProperties ? {\n    type: \"intersect\",\n    objectSets: [objectSet, {\n      type: \"interfaceBase\",\n      interfaceType: interfaceTypeApiName,\n      includeAllBaseObjectProperties: true\n    }]\n  } : objectSet;\n}\nasync function fetchInterfacePage(client, interfaceType, args, objectSet) {\n  if (args.$__UNSTABLE_useOldInterfaceApis) {\n    const result = await OntologiesV2.OntologyInterfaces.search(addUserAgentAndRequestContextHeaders(client, interfaceType), await client.ontologyRid, interfaceType.apiName, applyFetchArgs(args, {\n      augmentedProperties: {},\n      augmentedSharedPropertyTypes: {},\n      otherInterfaceTypes: [],\n      selectedObjectTypes: [],\n      selectedSharedPropertyTypes: args.$select ?? [],\n      where: objectSetToSearchJsonV2(objectSet, interfaceType.apiName)\n    }), {\n      preview: true\n    });\n    result.data = await client.objectFactory(client, result.data,\n    // drop readonly\n    interfaceType.apiName, !args.$includeRid, await extractRdpDefinition(client, objectSet));\n    return result;\n  }\n  const result = await OntologiesV2.OntologyObjectSets.loadMultipleObjectTypes(addUserAgentAndRequestContextHeaders(client, interfaceType), await client.ontologyRid, applyFetchArgs(args, {\n    objectSet: resolveInterfaceObjectSet(objectSet, interfaceType.apiName, args),\n    select: args?.$select ?? [],\n    excludeRid: !args?.$includeRid\n  }), {\n    preview: true\n  });\n  return Promise.resolve({\n    data: await client.objectFactory2(client, result.data, interfaceType.apiName, {}, !args.$includeRid, args.$select, false, result.interfaceToObjectTypeMappings),\n    nextPageToken: result.nextPageToken,\n    totalCount: result.totalCount\n  });\n}\n\n/** @internal */\nexport async function fetchPageInternal(client, objectType, objectSet, args = {}) {\n  if (objectType.type === \"interface\") {\n    return await fetchInterfacePage(client, objectType, args, objectSet); // fixme\n  } else {\n    return await fetchObjectPage(client, objectType, args, objectSet); // fixme\n  }\n}\n\n/** @internal */\nexport async function fetchPageWithErrorsInternal(client, objectType, objectSet, args = {}) {\n  try {\n    const result = await fetchPageInternal(client, objectType, objectSet, args);\n    return {\n      value: result\n    };\n  } catch (e) {\n    if (e instanceof Error) {\n      return {\n        error: e\n      };\n    }\n    return {\n      error: e\n    };\n  }\n}\n\n/**\n * @param client\n * @param objectType\n * @param args\n * @param objectSet\n * @returns\n * @internal\n */\nexport async function fetchPage(client, objectType, args, objectSet = resolveBaseObjectSetType(objectType)) {\n  return fetchPageInternal(client, objectType, objectSet, args);\n}\n\n/** @internal */\nexport async function fetchPageWithErrors(client, objectType, args, objectSet = resolveBaseObjectSetType(objectType)) {\n  return fetchPageWithErrorsInternal(client, objectType, objectSet, args);\n}\nfunction applyFetchArgs(args, body) {\n  if (args?.$nextPageToken) {\n    body.pageToken = args.$nextPageToken;\n  }\n  if (args?.$pageSize != null) {\n    body.pageSize = args.$pageSize;\n  }\n  if (args?.$orderBy != null) {\n    body.orderBy = {\n      fields: Object.entries(args.$orderBy).map(([field, direction]) => ({\n        field,\n        direction\n      }))\n    };\n  }\n  return body;\n}\n\n/** @internal */\nexport async function fetchObjectPage(client, objectType, args, objectSet) {\n  const r = await OntologiesV2.OntologyObjectSets.load(addUserAgentAndRequestContextHeaders(client, objectType), await client.ontologyRid, applyFetchArgs(args, {\n    objectSet,\n    // We have to do the following case because LoadObjectSetRequestV2 isn't readonly\n    select: args?.$select ?? [],\n    // FIXME?\n    excludeRid: !args?.$includeRid\n  }));\n  return Promise.resolve({\n    data: await client.objectFactory(client, r.data, undefined, undefined, await extractRdpDefinition(client, objectSet), args.$select),\n    nextPageToken: r.nextPageToken,\n    totalCount: r.totalCount\n  });\n}","/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\n\n// DO NOT EXPORT FROM PACKAGE\n/** @internal */\nexport const additionalContext = Symbol(\"additionalContext\");\n\n// BEGIN: THIS IS GENERATED CODE. DO NOT EDIT.\nconst MaxOsdkVersion = \"2.3.0\";\n// END: THIS IS GENERATED CODE. DO NOT EDIT.\n\nconst ErrorMessage = Symbol(\"ErrorMessage\");"]}
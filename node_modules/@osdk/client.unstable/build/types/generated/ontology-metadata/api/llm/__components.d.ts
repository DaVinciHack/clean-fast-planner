import type { ActionTypeModificationRequest as _api_ActionTypeModificationRequest } from "../__components.js";
/**
* Request for ActionTypeDescriptionGenerator Plugin which takes in an Action Type and summarizes what the
* actionType is set up to do and generates a human readable description.
* The plugin will generate a few suggestions that the user could then accept and save to the actionType.
*/
export interface ActionTypeDescriptionGeneratorPluginRequest {
	actionType: _api_ActionTypeModificationRequest;
}
/**
* Response to the ActionTypeDescriptionGenerator Plugin.
*/
export interface ActionTypeDescriptionGeneratorPluginResponse {
	descriptions: Array<string>;
}
/**
* The supported language models to use for the completion request.
*/
export type LanguageModel = "GPT_3_5" | "GPT_4" | "GPT_4_32K";
/**
* The configuration settings for the LLM.
* This is used to override the default settings used to query the LLM for optimal performance.
*/
export interface LlmConfig {
	languageModel?: LanguageModel | null | undefined;
	maxTokens?: number | null | undefined;
	temperature?: number | "NaN" | "Infinity" | "-Infinity" | null | undefined;
}
export interface OntologyLmsRequest_stringPlugin {
	type: "stringPlugin";
	stringPlugin: StringPluginRequest;
}
export interface OntologyLmsRequest_actionTypeDescriptionGeneratorPlugin {
	type: "actionTypeDescriptionGeneratorPlugin";
	actionTypeDescriptionGeneratorPlugin: ActionTypeDescriptionGeneratorPluginRequest;
}
/**
* Union wrapping the various plugins that we have for the Ontology LMS app.
* The plugin determines how we structure a prompt and validate the response.
*/
export type OntologyLmsRequest = OntologyLmsRequest_stringPlugin | OntologyLmsRequest_actionTypeDescriptionGeneratorPlugin;
export interface OntologyLmsResponse_stringPlugin {
	type: "stringPlugin";
	stringPlugin: StringPluginResponse;
}
export interface OntologyLmsResponse_actionTypeDescriptionGeneratorPlugin {
	type: "actionTypeDescriptionGeneratorPlugin";
	actionTypeDescriptionGeneratorPlugin: ActionTypeDescriptionGeneratorPluginResponse;
}
/**
* Union type for the outputs of the Ontology-LMS app
*/
export type OntologyLmsResponse = OntologyLmsResponse_stringPlugin | OntologyLmsResponse_actionTypeDescriptionGeneratorPlugin;
/**
* Request to use pass in a string prompt that will be directly used as the prompt for the LMS and have the
* resulting string returned. This plugin has little validation and is mostly used for testing new prompts.
* Once tested and accepted, prompts should be used to create a new bespoke plugin, with additional validation
* and type checking.
*/
export interface StringPluginRequest {
	config?: LlmConfig | null | undefined;
	userPrompt: string;
}
/**
* Response to the string plugin request. This is the string that was returned from the LMS
*/
export interface StringPluginResponse {
	response: string;
}

import type * as _Core from "@osdk/foundry.core";
import type { SharedClient as $OldClient, SharedClientContext as $OldClientContext } from "@osdk/shared.client";
import type { SharedClient as $Client, SharedClientContext as $ClientContext } from "@osdk/shared.client2";
import type * as _Admin from "../_components.js";
/**
 * Get the Role with the specified id.
 *
 * @alpha
 *
 * Required Scopes: [api:admin-read]
 * URL: /v2/admin/roles/{roleId}
 */
export declare function get($ctx: $Client | $ClientContext | $OldClient | $OldClientContext, ...args: [
    roleId: _Core.RoleId,
    $queryParams?: {
        preview?: _Core.PreviewMode | undefined;
    }
]): Promise<_Admin.Role>;
/**
 * Execute multiple get requests on Role.
 *
 * The maximum batch size for this endpoint is 500.
 *
 * @alpha
 *
 * Required Scopes: [api:admin-read]
 * URL: /v2/admin/roles/getBatch
 */
export declare function getBatch($ctx: $Client | $ClientContext | $OldClient | $OldClientContext, ...args: [
    $body: Array<_Admin.GetRolesBatchRequestElement>,
    $queryParams?: {
        preview?: _Core.PreviewMode | undefined;
    }
]): Promise<_Admin.GetRolesBatchResponse>;
//# sourceMappingURL=Role.d.ts.map
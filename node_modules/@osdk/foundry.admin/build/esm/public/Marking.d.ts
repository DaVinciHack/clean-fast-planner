import type * as _Core from "@osdk/foundry.core";
import type { SharedClient as $OldClient, SharedClientContext as $OldClientContext } from "@osdk/shared.client";
import type { SharedClient as $Client, SharedClientContext as $ClientContext } from "@osdk/shared.client2";
import type * as _Admin from "../_components.js";
/**
 * Creates a new Marking.
 *
 * @beta
 *
 * Required Scopes: [api:admin-write]
 * URL: /v2/admin/markings
 */
export declare function create($ctx: $Client | $ClientContext | $OldClient | $OldClientContext, ...args: [
    $body: _Admin.CreateMarkingRequest,
    $queryParams?: {
        preview?: _Core.PreviewMode | undefined;
    }
]): Promise<_Admin.Marking>;
/**
 * Maximum page size 100.
 *
 * @beta
 *
 * Required Scopes: [api:admin-read]
 * URL: /v2/admin/markings
 */
export declare function list($ctx: $Client | $ClientContext | $OldClient | $OldClientContext, ...args: [
    $queryParams?: {
        pageSize?: _Core.PageSize | undefined;
        pageToken?: _Core.PageToken | undefined;
        preview?: _Core.PreviewMode | undefined;
    }
]): Promise<_Admin.ListMarkingsResponse>;
/**
 * Get the Marking with the specified id.
 *
 * @beta
 *
 * Required Scopes: [api:admin-read]
 * URL: /v2/admin/markings/{markingId}
 */
export declare function get($ctx: $Client | $ClientContext | $OldClient | $OldClientContext, ...args: [
    markingId: _Core.MarkingId,
    $queryParams?: {
        preview?: _Core.PreviewMode | undefined;
    }
]): Promise<_Admin.Marking>;
/**
 * Execute multiple get requests on Marking.
 *
 * The maximum batch size for this endpoint is 500.
 *
 * @beta
 *
 * Required Scopes: [api:admin-read]
 * URL: /v2/admin/markings/getBatch
 */
export declare function getBatch($ctx: $Client | $ClientContext | $OldClient | $OldClientContext, ...args: [
    $body: Array<_Admin.GetMarkingsBatchRequestElement>,
    $queryParams?: {
        preview?: _Core.PreviewMode | undefined;
    }
]): Promise<_Admin.GetMarkingsBatchResponse>;
//# sourceMappingURL=Marking.d.ts.map
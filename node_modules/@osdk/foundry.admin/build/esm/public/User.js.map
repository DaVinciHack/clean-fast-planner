{"version":3,"file":"User.js","names":["foundryPlatformFetch","$foundryPlatformFetch","_deleteUser","deleteUser","$ctx","args","_list","list","_get","get","_getBatch","getBatch","_getCurrent","getCurrent","_getMarkings","getMarkings","_profilePicture","profilePicture","_search","search"],"sources":["User.js"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { foundryPlatformFetch as $foundryPlatformFetch } from \"@osdk/shared.net.platformapi\";\n//\nconst _deleteUser = [3, \"/v2/admin/users/{0}\"];\n/**\n * Delete the User with the specified id.\n *\n * @public\n *\n * Required Scopes: [api:admin-write]\n * URL: /v2/admin/users/{userId}\n */\nexport function deleteUser($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _deleteUser, ...args);\n}\nconst _list = [0, \"/v2/admin/users\", 2];\n/**\n * Lists all Users.\n *\n * This is a paged endpoint. Each page may be smaller or larger than the requested page size. However, it is guaranteed that if there are more results available, the `nextPageToken` field will be populated. To get the next page, make the same request again, but set the value of the `pageToken` query parameter to be value of the `nextPageToken` value of the previous response. If there is no `nextPageToken` field in the response, you are on the last page.\n *\n * @public\n *\n * Required Scopes: [api:admin-read]\n * URL: /v2/admin/users\n */\nexport function list($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _list, ...args);\n}\nconst _get = [0, \"/v2/admin/users/{0}\"];\n/**\n * Get the User with the specified id.\n *\n * @public\n *\n * Required Scopes: [api:admin-read]\n * URL: /v2/admin/users/{userId}\n */\nexport function get($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _get, ...args);\n}\nconst _getBatch = [1, \"/v2/admin/users/getBatch\", 1];\n/**\n * Execute multiple get requests on User.\n *\n * The maximum batch size for this endpoint is 500.\n *\n * @public\n *\n * Required Scopes: [api:admin-read]\n * URL: /v2/admin/users/getBatch\n */\nexport function getBatch($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _getBatch, ...args);\n}\nconst _getCurrent = [\n    0,\n    \"/v2/admin/users/getCurrent\",\n];\n/**\n * @public\n *\n * Required Scopes: [api:admin-read]\n * URL: /v2/admin/users/getCurrent\n */\nexport function getCurrent($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _getCurrent, ...args);\n}\nconst _getMarkings = [0, \"/v2/admin/users/{0}/getMarkings\", 2];\n/**\n * Retrieve Markings that the user is currently a member of.\n *\n * @beta\n *\n * Required Scopes: [api:admin-read]\n * URL: /v2/admin/users/{userId}/getMarkings\n */\nexport function getMarkings($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _getMarkings, ...args);\n}\nconst _profilePicture = [0, \"/v2/admin/users/{0}/profilePicture\", , , \"application/octet-stream\"];\n/**\n * @public\n *\n * Required Scopes: [api:admin-read]\n * URL: /v2/admin/users/{userId}/profilePicture\n */\nexport function profilePicture($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _profilePicture, ...args);\n}\nconst _search = [1, \"/v2/admin/users/search\", 1];\n/**\n * Perform a case-insensitive prefix search for users based on username, given name and family name.\n *\n * @public\n *\n * Required Scopes: [api:admin-read]\n * URL: /v2/admin/users/search\n */\nexport function search($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _search, ...args);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,oBAAoB,IAAIC,qBAAqB,QAAQ,8BAA8B;AAC5F;AACA,MAAMC,WAAW,GAAG,CAAC,CAAC,EAAE,qBAAqB,CAAC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAACC,IAAI,EAAE,GAAGC,IAAI,EAAE;EACtC,OAAOJ,qBAAqB,CAACG,IAAI,EAAEF,WAAW,EAAE,GAAGG,IAAI,CAAC;AAC5D;AACA,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAE,iBAAiB,EAAE,CAAC,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,IAAIA,CAACH,IAAI,EAAE,GAAGC,IAAI,EAAE;EAChC,OAAOJ,qBAAqB,CAACG,IAAI,EAAEE,KAAK,EAAE,GAAGD,IAAI,CAAC;AACtD;AACA,MAAMG,IAAI,GAAG,CAAC,CAAC,EAAE,qBAAqB,CAAC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,GAAGA,CAACL,IAAI,EAAE,GAAGC,IAAI,EAAE;EAC/B,OAAOJ,qBAAqB,CAACG,IAAI,EAAEI,IAAI,EAAE,GAAGH,IAAI,CAAC;AACrD;AACA,MAAMK,SAAS,GAAG,CAAC,CAAC,EAAE,0BAA0B,EAAE,CAAC,CAAC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,QAAQA,CAACP,IAAI,EAAE,GAAGC,IAAI,EAAE;EACpC,OAAOJ,qBAAqB,CAACG,IAAI,EAAEM,SAAS,EAAE,GAAGL,IAAI,CAAC;AAC1D;AACA,MAAMO,WAAW,GAAG,CAChB,CAAC,EACD,4BAA4B,CAC/B;AACD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAACT,IAAI,EAAE,GAAGC,IAAI,EAAE;EACtC,OAAOJ,qBAAqB,CAACG,IAAI,EAAEQ,WAAW,EAAE,GAAGP,IAAI,CAAC;AAC5D;AACA,MAAMS,YAAY,GAAG,CAAC,CAAC,EAAE,iCAAiC,EAAE,CAAC,CAAC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAACX,IAAI,EAAE,GAAGC,IAAI,EAAE;EACvC,OAAOJ,qBAAqB,CAACG,IAAI,EAAEU,YAAY,EAAE,GAAGT,IAAI,CAAC;AAC7D;AACA,MAAMW,eAAe,GAAG,CAAC,CAAC,EAAE,oCAAoC,IAAM,0BAA0B,CAAC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACb,IAAI,EAAE,GAAGC,IAAI,EAAE;EAC1C,OAAOJ,qBAAqB,CAACG,IAAI,EAAEY,eAAe,EAAE,GAAGX,IAAI,CAAC;AAChE;AACA,MAAMa,OAAO,GAAG,CAAC,CAAC,EAAE,wBAAwB,EAAE,CAAC,CAAC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,MAAMA,CAACf,IAAI,EAAE,GAAGC,IAAI,EAAE;EAClC,OAAOJ,qBAAqB,CAACG,IAAI,EAAEc,OAAO,EAAE,GAAGb,IAAI,CAAC;AACxD","ignoreList":[]}
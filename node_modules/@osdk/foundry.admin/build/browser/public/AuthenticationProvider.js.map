{"version":3,"file":"AuthenticationProvider.js","names":["foundryPlatformFetch","$foundryPlatformFetch","_list","list","$ctx","args","_get","get","_preregisterUser","preregisterUser","_preregisterGroup","preregisterGroup"],"sources":["AuthenticationProvider.js"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { foundryPlatformFetch as $foundryPlatformFetch } from \"@osdk/shared.net.platformapi\";\n//\nconst _list = [0, \"/v2/admin/enrollments/{0}/authenticationProviders\", 2];\n/**\n * Lists all AuthenticationProviders.\n *\n * @beta\n *\n * Required Scopes: [api:admin-read]\n * URL: /v2/admin/enrollments/{enrollmentRid}/authenticationProviders\n */\nexport function list($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _list, ...args);\n}\nconst _get = [0, \"/v2/admin/enrollments/{0}/authenticationProviders/{1}\", 2];\n/**\n * Get the AuthenticationProvider with the specified rid.\n *\n * @beta\n *\n * Required Scopes: [api:admin-read]\n * URL: /v2/admin/enrollments/{enrollmentRid}/authenticationProviders/{authenticationProviderRid}\n */\nexport function get($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _get, ...args);\n}\nconst _preregisterUser = [\n    1,\n    \"/v2/admin/enrollments/{0}/authenticationProviders/{1}/preregisterUser\",\n    3,\n];\n/**\n * Register a User with a given username before they log in to the platform for the first time through this\n * Authentication Provider. Preregistered users can be assigned to groups and roles prior to first login.\n *\n * @beta\n *\n * Required Scopes: []\n * URL: /v2/admin/enrollments/{enrollmentRid}/authenticationProviders/{authenticationProviderRid}/preregisterUser\n */\nexport function preregisterUser($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _preregisterUser, ...args);\n}\nconst _preregisterGroup = [\n    1,\n    \"/v2/admin/enrollments/{0}/authenticationProviders/{1}/preregisterGroup\",\n    3,\n];\n/**\n * Register a Group with a given name before any users with this group log in through this Authentication Provider.\n * Preregistered groups can be used anywhere other groups are used in the platform.\n *\n * @beta\n *\n * Required Scopes: []\n * URL: /v2/admin/enrollments/{enrollmentRid}/authenticationProviders/{authenticationProviderRid}/preregisterGroup\n */\nexport function preregisterGroup($ctx, ...args) {\n    return $foundryPlatformFetch($ctx, _preregisterGroup, ...args);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,oBAAoB,IAAIC,qBAAqB,QAAQ,8BAA8B;AAC5F;AACA,MAAMC,KAAK,GAAG,CAAC,CAAC,EAAE,mDAAmD,EAAE,CAAC,CAAC;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,IAAIA,CAACC,IAAI,EAAE,GAAGC,IAAI,EAAE;EAChC,OAAOJ,qBAAqB,CAACG,IAAI,EAAEF,KAAK,EAAE,GAAGG,IAAI,CAAC;AACtD;AACA,MAAMC,IAAI,GAAG,CAAC,CAAC,EAAE,uDAAuD,EAAE,CAAC,CAAC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,GAAGA,CAACH,IAAI,EAAE,GAAGC,IAAI,EAAE;EAC/B,OAAOJ,qBAAqB,CAACG,IAAI,EAAEE,IAAI,EAAE,GAAGD,IAAI,CAAC;AACrD;AACA,MAAMG,gBAAgB,GAAG,CACrB,CAAC,EACD,uEAAuE,EACvE,CAAC,CACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAACL,IAAI,EAAE,GAAGC,IAAI,EAAE;EAC3C,OAAOJ,qBAAqB,CAACG,IAAI,EAAEI,gBAAgB,EAAE,GAAGH,IAAI,CAAC;AACjE;AACA,MAAMK,iBAAiB,GAAG,CACtB,CAAC,EACD,wEAAwE,EACxE,CAAC,CACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACP,IAAI,EAAE,GAAGC,IAAI,EAAE;EAC5C,OAAOJ,qBAAqB,CAACG,IAAI,EAAEM,iBAAiB,EAAE,GAAGL,IAAI,CAAC;AAClE","ignoreList":[]}
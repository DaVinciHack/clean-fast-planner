{"version":3,"file":"StringFilter.js","names":["StringFilter","_typeCheck"],"sources":["StringFilter.ts"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { BaseFilterOptions, CatchThemAll } from \"./BaseFilter.js\";\nimport type { Just } from \"./Just.js\";\n\ninterface StringFilterOptions extends BaseFilterOptions<string> {\n  \"$startsWith\": string;\n  \"$containsAllTermsInOrder\": string;\n  \"$containsAnyTerm\": string | { term: string; fuzzySearch?: boolean };\n  \"$containsAllTerms\": string | { term: string; fuzzySearch?: boolean };\n  \"$in\": ReadonlyArray<string>;\n}\n\nexport namespace StringFilter {\n  export interface $eq extends Just<\"$eq\", StringFilterOptions> {}\n  export interface $ne extends Just<\"$ne\", StringFilterOptions> {}\n  export interface $isNull extends Just<\"$isNull\", StringFilterOptions> {}\n  export interface $startsWith\n    extends Just<\"$startsWith\", StringFilterOptions>\n  {\n  }\n  export interface $containsAllTermsInOrder\n    extends Just<\"$containsAllTermsInOrder\", StringFilterOptions>\n  {\n  }\n  export interface $containsAnyTerm\n    extends Just<\"$containsAnyTerm\", StringFilterOptions>\n  {\n  }\n  export interface $containsAllTerms\n    extends Just<\"$containsAllTerms\", StringFilterOptions>\n  {\n  }\n  export interface $in extends Just<\"$in\", StringFilterOptions> {}\n}\n\nexport type StringFilter =\n  | string\n  | StringFilter.$eq\n  | StringFilter.$ne\n  | StringFilter.$isNull\n  | StringFilter.$in\n  | StringFilter.$startsWith\n  | StringFilter.$containsAllTermsInOrder\n  | StringFilter.$containsAnyTerm\n  | StringFilter.$containsAllTerms;\n\n/** @internal */\nfunction _typeCheck() {\n  const b: StringFilter = {} as CatchThemAll<StringFilterOptions>;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA,WA2BiBA,YAAY;AAkC7B;AACA,SAASC,UAAUA,CAAA,EAAG,CAEtB","ignoreList":[]}
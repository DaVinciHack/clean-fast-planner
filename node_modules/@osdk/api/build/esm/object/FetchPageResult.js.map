{"version":3,"file":"FetchPageResult.js","names":[],"sources":["FetchPageResult.ts"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  ObjectOrInterfaceDefinition,\n  PropertyKeys,\n} from \"../ontology/ObjectOrInterface.js\";\nimport type { SimplePropertyDef } from \"../ontology/SimplePropertyDef.js\";\nimport type { ExtractOptions, IsNever, Osdk } from \"../OsdkObjectFrom.js\";\nimport type { PageResult } from \"../PageResult.js\";\nimport type { NullabilityAdherence } from \"./FetchPageArgs.js\";\n\n/** exposed for a test */\nexport type RespectNullability<S extends NullabilityAdherence> = S extends false\n  ? false\n  : true;\n\n/** exposed for a test */\nexport type UnionIfFalse<S extends string, JUST_S_IF_TRUE extends boolean, E> =\n  IsNever<S> extends true ? never\n    : JUST_S_IF_TRUE extends true ? S\n    : S | E;\n\n/** exposed for a test */\nexport type UnionIfTrue<\n  S extends string,\n  UNION_IF_TRUE extends boolean,\n  E extends string,\n> = IsNever<S> extends true ? never\n  : UNION_IF_TRUE extends true ? S | E\n  : S;\n\n/**\n * Helper type for converting fetch options into an Osdk object\n */\nexport type FetchPageResult<\n  Q extends ObjectOrInterfaceDefinition,\n  L extends PropertyKeys<Q>,\n  R extends boolean,\n  S extends NullabilityAdherence,\n  T extends boolean = false,\n> = PageResult<\n  PropertyKeys<Q> extends L ? Osdk.Instance<Q, ExtractOptions<R, S, T>>\n    : Osdk.Instance<Q, ExtractOptions<R, S, T>, L>\n>;\n\n/**\n * Helper type for converting fetch options into an Osdk object\n */\nexport type SingleOsdkResult<\n  Q extends ObjectOrInterfaceDefinition,\n  L extends PropertyKeys<Q> | (keyof RDPs & string),\n  R extends boolean,\n  S extends NullabilityAdherence,\n  RDPs extends Record<string, SimplePropertyDef> = {},\n  T extends boolean = false,\n> = Osdk.Instance<\n  Q,\n  ExtractOptions<R, S, T>,\n  PropertyKeys<Q> extends L ? PropertyKeys<Q> : PropertyKeys<Q> & L,\n  { [K in Extract<keyof RDPs, L>]: RDPs[K] }\n>;\n\nexport type IsAny<T> = unknown extends T\n  ? [keyof T] extends [never] ? false : true\n  : false;\n"],"mappings":"","ignoreList":[]}
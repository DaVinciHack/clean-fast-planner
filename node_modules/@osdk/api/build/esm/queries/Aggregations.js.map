{"version":3,"file":"Aggregations.js","names":[],"sources":["Aggregations.ts"],"sourcesContent":["/*\n * Copyright 2025 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  DataValueClientToWire,\n  DataValueWireToClient,\n} from \"../mapping/DataValueMapping.js\";\nimport type {\n  AggregationKeyTypes,\n  AggregationRangeKeyTypes,\n  AggregationValueTypes,\n} from \"../ontology/QueryDefinition.js\";\n\nexport type Range<T extends AllowedBucketTypes> = {\n  startValue?: T;\n  endValue: T;\n} | {\n  startValue: T;\n  endValue?: T;\n};\n\nexport type AllowedBucketTypes = string | number | boolean;\nexport type AllowedBucketKeyTypes =\n  | AllowedBucketTypes\n  | Range<AllowedBucketTypes>;\n\nexport type TwoDimensionalAggregation<\n  T extends AllowedBucketKeyTypes,\n  U extends AllowedBucketTypes,\n> = { key: T; value: U }[];\n\nexport type ThreeDimensionalAggregation<\n  T extends AllowedBucketKeyTypes,\n  U extends AllowedBucketKeyTypes,\n  V extends AllowedBucketTypes,\n> = { key: T; groups: { key: U; value: V }[] }[];\n\nexport type AggKeyWireToClient<\n  T extends AggregationKeyTypes,\n  S extends AggregationRangeKeyTypes = never,\n> = T extends keyof DataValueWireToClient ? DataValueWireToClient[T]\n  : T extends \"range\"\n    ? S extends keyof DataValueWireToClient ? Range<DataValueWireToClient[S]>\n    : never\n  : never;\n\nexport type AggKeyClientToWire<\n  T extends AggregationKeyTypes,\n  S extends AggregationRangeKeyTypes = never,\n> = T extends keyof DataValueClientToWire ? DataValueClientToWire[T]\n  : T extends \"range\"\n    ? S extends keyof DataValueClientToWire ? Range<DataValueClientToWire[S]>\n    : never\n  : never;\n\nexport type AggValueWireToClient<T extends AggregationValueTypes> = T extends\n  keyof DataValueWireToClient ? DataValueWireToClient[T] : never;\n\nexport type AggValueClientToWire<T extends AggregationValueTypes> = T extends\n  keyof DataValueClientToWire ? DataValueClientToWire[T] : never;\n"],"mappings":"","ignoreList":[]}
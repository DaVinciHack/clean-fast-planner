{"version":3,"file":"ObjectSetListener.js","names":["ObjectSetSubscription"],"sources":["ObjectSetListener.ts"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  ObjectOrInterfaceDefinition,\n  PropertyKeys,\n} from \"../ontology/ObjectOrInterface.js\";\nimport type { Osdk } from \"../OsdkObjectFrom.js\";\n\nexport namespace ObjectSetSubscription {\n  export interface Listener<\n    O extends ObjectOrInterfaceDefinition,\n    P extends PropertyKeys<O> = PropertyKeys<O>,\n  > {\n    /**\n     * Specific objects have changed and can be immediately updated\n     */\n    onChange?: (\n      objectUpdate: ObjectUpdate<O, P>,\n    ) => void;\n\n    /**\n     * The subscription has been successfully established and updates can be expected to be received.\n     */\n    onSuccessfulSubscription?: () => void;\n\n    /**\n     * The ObjectSet has become outdated and should be re-fetched in its entirety.\n     * This is also sent when the subscription is first initialized.\n     */\n    onOutOfDate?: () => void;\n\n    /**\n     * There was a fatal error with the subscription process. The subscription will close or will not be established.\n     */\n    onError?: (errors: { subscriptionClosed: boolean; error: any }) => void;\n  }\n\n  /**\n   * Options for subscribing to an ObjectSet.\n   *\n   * properties - The properties to request a subscription for. Requesting specific properties limits the possible properties\n   * that can be returned from the subscription. If not provided, all properties will be requested and potentially be returned on updates.\n   */\n  export interface Options<\n    O extends ObjectOrInterfaceDefinition,\n    P extends PropertyKeys<O> = PropertyKeys<O>,\n  > {\n    properties?: Array<P>;\n  }\n}\n\ntype ObjectUpdate<\n  O extends ObjectOrInterfaceDefinition,\n  P extends PropertyKeys<O>,\n> = {\n  object: Osdk.Instance<O, never, P>;\n  state: \"ADDED_OR_UPDATED\" | \"REMOVED\";\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA,WAsBiBA,qBAAqB","ignoreList":[]}
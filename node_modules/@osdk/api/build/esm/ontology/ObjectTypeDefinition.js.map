{"version":3,"file":"ObjectTypeDefinition.js","names":["ObjectMetadata"],"sources":["ObjectTypeDefinition.ts"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { OsdkMetadata } from \"../OsdkMetadata.js\";\nimport type {\n  ObjectOrInterfaceDefinition,\n  PropertyKeys,\n} from \"./ObjectOrInterface.js\";\nimport type { PrimaryKeyTypes } from \"./PrimaryKeyTypes.js\";\nimport type { VersionString } from \"./VersionString.js\";\nimport type { WirePropertyTypes } from \"./WirePropertyTypes.js\";\n\nexport type CompileTimeMetadata<T extends { __DefinitionMetadata?: {} }> =\n  NonNullable<\n    T[\"__DefinitionMetadata\"]\n  >;\n\nexport type ObjectTypePropertyDefinitionFrom2<\n  Q extends ObjectOrInterfaceDefinition,\n  P extends PropertyKeys<Q>,\n> = CompileTimeMetadata<Q>[\"properties\"][P];\n\nexport type ObjectInterfaceBaseMetadata = {\n  type: \"object\" | \"interface\";\n  apiName: string;\n  displayName: string;\n  description: string | undefined;\n  properties: Record<any, ObjectMetadata.Property>;\n  links: Record<\n    string,\n    ObjectMetadata.Link<any, any>\n  >;\n  rid: string;\n  /**\n   * Represents the \"super interfaces\" of this object.\n   *\n   * Optional because they may not exist on legacy.\n   */\n  implements?: ReadonlyArray<string>;\n};\n\nexport interface ObjectInterfaceCompileDefinition {\n  type: \"object\" | \"interface\";\n  objectSet?: any;\n  props?: any;\n  strictProps?: any;\n  linksType?: any;\n}\n\nexport interface VersionBound<V extends VersionString<any, any, any>> {\n  __expectedClientVersion?: V;\n}\n\nexport interface ObjectMetadata extends ObjectInterfaceBaseMetadata {\n  type: \"object\";\n  primaryKeyApiName: keyof this[\"properties\"];\n  titleProperty: keyof this[\"properties\"];\n  primaryKeyType: PrimaryKeyTypes;\n  icon: Icon | undefined;\n  visibility: ObjectTypeVisibility | undefined;\n  pluralDisplayName: string;\n  status: ReleaseStatus | undefined;\n  interfaceMap: Record<\n    /* InterfaceType api name */ string,\n    Record<\n      /* InterfaceType property api name */ string,\n      /* ObjectType property api name */ string\n    >\n  >;\n  inverseInterfaceMap: Record<\n    /* InterfaceType api name */ string,\n    Record<\n      /* ObjectType property api name */ string,\n      /* InterfaceType property api name */ string\n    >\n  >;\n}\n\nexport namespace ObjectMetadata {\n  export interface Property {\n    readonly?: boolean;\n    displayName?: string;\n    description?: string;\n    type: WirePropertyTypes;\n    multiplicity?: boolean;\n    nullable?: boolean;\n  }\n\n  export interface Link<\n    Q extends ObjectTypeDefinition,\n    M extends boolean,\n  > {\n    __OsdkLinkTargetType?: Q;\n    targetType: Q[\"apiName\"];\n    multiplicity: M;\n  }\n}\n\nexport interface ObjectTypeDefinition {\n  type: \"object\";\n  apiName: string;\n  osdkMetadata?: OsdkMetadata;\n  __DefinitionMetadata?:\n    & ObjectMetadata\n    & ObjectInterfaceCompileDefinition;\n}\n\nexport type ObjectTypeLinkKeysFrom2<\n  Q extends ObjectTypeDefinition,\n> =\n  & keyof CompileTimeMetadata<Q>[\"links\"]\n  & string;\n\nexport interface PropertyDef<\n  T extends WirePropertyTypes,\n  N extends \"nullable\" | \"non-nullable\" = \"nullable\",\n  M extends \"array\" | \"single\" = \"single\",\n> extends ObjectMetadata.Property {\n  type: T;\n  multiplicity: M extends \"array\" ? true : false;\n  nullable: N extends \"nullable\" ? true : false;\n}\n\nexport type ReleaseStatus =\n  | \"ACTIVE\"\n  | \"EXPERIMENTAL\"\n  | \"DEPRECATED\"\n  | \"ENDORSED\";\n\ntype ObjectTypeVisibility = \"NORMAL\" | \"PROMINENT\" | \"HIDDEN\";\n\ntype BlueprintIcon = {\n  type: \"blueprint\";\n  color: string;\n  name: string;\n};\n\ntype Icon = BlueprintIcon;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA,WA2FiBA,cAAc","ignoreList":[]}
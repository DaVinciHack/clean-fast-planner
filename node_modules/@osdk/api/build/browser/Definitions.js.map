{"version":3,"file":"Definitions.js","names":[],"sources":["Definitions.ts"],"sourcesContent":["/*\n * Copyright 2023 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type {\n  GetClientPropertyValueFromWire,\n} from \"./mapping/PropertyValueMapping.js\";\nimport type { ObjectMetadata } from \"./ontology/ObjectTypeDefinition.js\";\n\ntype MaybeArray<T extends { multiplicity?: boolean | undefined }, U> =\n  T[\"multiplicity\"] extends true ? Array<U> : U;\n\ntype MaybeNullable<T extends ObjectMetadata.Property, U> = T[\"nullable\"] extends\n  true ? U | undefined\n  : U;\n\ntype Raw<T> = T extends Array<any> ? T[0] : T;\ntype Converted<T> = T extends Array<any> ? T[1] : T;\n\n/**\n * @param {T} ObjectMetadata.Property in literal form\n * @param {STRICTLY_ENFORCE_NULLABLE}  S for strict. If false, always `|undefined`\n */\nexport type OsdkObjectPropertyType<\n  T extends ObjectMetadata.Property,\n  STRICTLY_ENFORCE_NULLABLE extends boolean = true,\n> = STRICTLY_ENFORCE_NULLABLE extends false ?\n    | MaybeArray<T, Converted<GetClientPropertyValueFromWire<T[\"type\"]>>>\n    | undefined\n  : MaybeNullable<\n    T,\n    MaybeArray<T, Converted<GetClientPropertyValueFromWire<T[\"type\"]>>>\n  >;\n\nexport type OsdkObjectRawPropertyType<T extends ObjectMetadata.Property> =\n  MaybeNullable<\n    T,\n    MaybeArray<T, Raw<GetClientPropertyValueFromWire<T[\"type\"]>>>\n  >;\n"],"mappings":"","ignoreList":[]}
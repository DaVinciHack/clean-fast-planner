{"version":3,"file":"SimplePropertyDef.test.js","names":["describe","expectTypeOf","it","test","toEqualTypeOf"],"sources":["SimplePropertyDef.test.ts"],"sourcesContent":["/*\n * Copyright 2025 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { describe, expectTypeOf, it, test } from \"vitest\";\nimport type { PropertyDef } from \"./ObjectTypeDefinition.js\";\nimport type { SimplePropertyDef } from \"./SimplePropertyDef.js\";\n\ndescribe(\"Type conversion\", () => {\n  test(\"SimplePropertyDef.ExtractMultiplicity\", () => {\n    expectTypeOf<SimplePropertyDef.ExtractMultiplicity<\"string\"[]>>()\n      .toEqualTypeOf<\"array\">();\n    expectTypeOf<\n      SimplePropertyDef.ExtractMultiplicity<\"string\"[] | undefined>\n    >()\n      .toEqualTypeOf<\"array\">();\n\n    expectTypeOf<SimplePropertyDef.ExtractMultiplicity<\"string\">>()\n      .toEqualTypeOf<\"single\">();\n    expectTypeOf<SimplePropertyDef.ExtractMultiplicity<\"string\" | undefined>>()\n      .toEqualTypeOf<\"single\">();\n  });\n\n  test(\"SimplePropertyDef.ExtractNullable\", () => {\n    expectTypeOf<SimplePropertyDef.ExtractNullable<\"string\"[]>>()\n      .toEqualTypeOf<\"non-nullable\">();\n    expectTypeOf<SimplePropertyDef.ExtractNullable<\"string\"[] | undefined>>()\n      .toEqualTypeOf<\"nullable\">();\n    expectTypeOf<SimplePropertyDef.ExtractNullable<\"string\">>()\n      .toEqualTypeOf<\"non-nullable\">();\n    expectTypeOf<SimplePropertyDef.ExtractNullable<\"string\" | undefined>>()\n      .toEqualTypeOf<\"nullable\">();\n  });\n\n  test(\"SimplePropertyDef.ExtractWirePropertyType\", () => {\n    expectTypeOf<SimplePropertyDef.ExtractWirePropertyType<\"string\"[]>>()\n      .toEqualTypeOf<\"string\">();\n    expectTypeOf<\n      SimplePropertyDef.ExtractWirePropertyType<\"string\"[] | undefined>\n    >()\n      .toEqualTypeOf<\"string\">();\n    expectTypeOf<SimplePropertyDef.ExtractWirePropertyType<\"string\">>()\n      .toEqualTypeOf<\"string\">();\n    expectTypeOf<\n      SimplePropertyDef.ExtractWirePropertyType<\"string\" | undefined>\n    >()\n      .toEqualTypeOf<\"string\">();\n  });\n\n  it(\"SimplePropertyDef.FromPropertyMetadata\", () => {\n    expectTypeOf<\n      SimplePropertyDef.FromPropertyMetadata<\n        PropertyDef<\"string\", \"nullable\", \"array\">\n      >\n    >()\n      .toEqualTypeOf<\"string\"[] | undefined>();\n\n    expectTypeOf<\n      SimplePropertyDef.FromPropertyMetadata<\n        PropertyDef<\"string\", \"non-nullable\", \"array\">\n      >\n    >()\n      .toEqualTypeOf<\"string\"[]>();\n\n    expectTypeOf<\n      SimplePropertyDef.FromPropertyMetadata<\n        PropertyDef<\"string\", \"non-nullable\", \"single\">\n      >\n    >()\n      .toEqualTypeOf<\"string\">();\n\n    expectTypeOf<\n      SimplePropertyDef.FromPropertyMetadata<\n        PropertyDef<\"string\", \"nullable\", \"single\">\n      >\n    >()\n      .toEqualTypeOf<\"string\" | undefined>();\n  });\n\n  test(\".ToRuntimeProperty\", () => {\n    expectTypeOf<SimplePropertyDef.ToRuntimeProperty<\"string\">>()\n      .toEqualTypeOf<string>();\n\n    expectTypeOf<SimplePropertyDef.ToRuntimeProperty<\"string\" | undefined>>()\n      .toEqualTypeOf<string | undefined>();\n  });\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQ,EAAEC,YAAY,EAAEC,EAAE,EAAEC,IAAI,QAAQ,QAAQ;AAIzDH,QAAQ,CAAC,iBAAiB,EAAE,MAAM;EAChCG,IAAI,CAAC,uCAAuC,EAAE,MAAM;IAClDF,YAAY,CAAoD,CAAC,CAC9DG,aAAa,CAAU,CAAC;IAC3BH,YAAY,CAEV,CAAC,CACAG,aAAa,CAAU,CAAC;IAE3BH,YAAY,CAAkD,CAAC,CAC5DG,aAAa,CAAW,CAAC;IAC5BH,YAAY,CAA8D,CAAC,CACxEG,aAAa,CAAW,CAAC;EAC9B,CAAC,CAAC;EAEFD,IAAI,CAAC,mCAAmC,EAAE,MAAM;IAC9CF,YAAY,CAAgD,CAAC,CAC1DG,aAAa,CAAiB,CAAC;IAClCH,YAAY,CAA4D,CAAC,CACtEG,aAAa,CAAa,CAAC;IAC9BH,YAAY,CAA8C,CAAC,CACxDG,aAAa,CAAiB,CAAC;IAClCH,YAAY,CAA0D,CAAC,CACpEG,aAAa,CAAa,CAAC;EAChC,CAAC,CAAC;EAEFD,IAAI,CAAC,2CAA2C,EAAE,MAAM;IACtDF,YAAY,CAAwD,CAAC,CAClEG,aAAa,CAAW,CAAC;IAC5BH,YAAY,CAEV,CAAC,CACAG,aAAa,CAAW,CAAC;IAC5BH,YAAY,CAAsD,CAAC,CAChEG,aAAa,CAAW,CAAC;IAC5BH,YAAY,CAEV,CAAC,CACAG,aAAa,CAAW,CAAC;EAC9B,CAAC,CAAC;EAEFF,EAAE,CAAC,wCAAwC,EAAE,MAAM;IACjDD,YAAY,CAIV,CAAC,CACAG,aAAa,CAAyB,CAAC;IAE1CH,YAAY,CAIV,CAAC,CACAG,aAAa,CAAa,CAAC;IAE9BH,YAAY,CAIV,CAAC,CACAG,aAAa,CAAW,CAAC;IAE5BH,YAAY,CAIV,CAAC,CACAG,aAAa,CAAuB,CAAC;EAC1C,CAAC,CAAC;EAEFD,IAAI,CAAC,oBAAoB,EAAE,MAAM;IAC/BF,YAAY,CAAgD,CAAC,CAC1DG,aAAa,CAAS,CAAC;IAE1BH,YAAY,CAA4D,CAAC,CACtEG,aAAa,CAAqB,CAAC;EACxC,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}
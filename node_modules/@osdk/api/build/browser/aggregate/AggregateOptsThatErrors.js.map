{"version":3,"file":"AggregateOptsThatErrors.js","names":[],"sources":["AggregateOptsThatErrors.ts"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { SingleKeyObject } from \"type-fest\";\nimport type { GroupByClause } from \"../groupby/GroupByClause.js\";\nimport type { ObjectOrInterfaceDefinition } from \"../ontology/ObjectOrInterface.js\";\nimport type { AggregateOpts } from \"./AggregateOpts.js\";\nimport type { UnorderedAggregationClause } from \"./AggregationsClause.js\";\n\nexport type AggregateOptsThatErrorsAndDisallowsOrderingWithMultipleGroupBy<\n  Q extends ObjectOrInterfaceDefinition,\n  AO extends AggregateOpts<Q>,\n> = SingleKeyObject<AO[\"$groupBy\"]> extends never ? (\n    AO[\"$select\"] extends UnorderedAggregationClause<Q>\n      ? AggregateOptsThatErrors<Q, AO>\n      : {} extends AO[\"$groupBy\"] ? AggregateOptsThatErrors<Q, AO>\n      : {\n        $groupBy: AO[\"$groupBy\"];\n        $select: UnorderedAggregationClause<Q>;\n      }\n  )\n  : AggregateOptsThatErrors<Q, AO>;\n\ntype AggregateOptsThatErrors<\n  Q extends ObjectOrInterfaceDefinition,\n  AO extends AggregateOpts<Q>,\n> =\n  & AO\n  & {\n    $select:\n      & Pick<\n        AO[\"$select\"],\n        keyof AggregateOpts<Q>[\"$select\"] & keyof AO[\"$select\"]\n      >\n      & Record<\n        Exclude<keyof AO[\"$select\"], keyof AggregateOpts<Q>[\"$select\"]>,\n        never\n      >;\n  }\n  & (unknown extends AO[\"$groupBy\"] ? {}\n    : Exclude<AO[\"$groupBy\"], undefined> extends never ? {}\n    : {\n      $groupBy:\n        & Pick<\n          AO[\"$groupBy\"],\n          keyof GroupByClause<Q> & keyof AO[\"$groupBy\"]\n        >\n        & Record<\n          Exclude<keyof AO[\"$groupBy\"], keyof GroupByClause<Q>>,\n          never\n        >;\n    });\n"],"mappings":"","ignoreList":[]}
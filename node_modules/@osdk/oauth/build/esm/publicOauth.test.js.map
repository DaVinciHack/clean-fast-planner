{"version":3,"file":"publicOauth.test.js","names":["afterAll","afterEach","beforeAll","beforeEach","describe","expect","it","vi","commonJs","createPublicOauthClient","hoistedMocks","hoisted","makeTokenAndSaveRefresh","fn","mock","importOriginal","original","default","ms","opts","common","args","result","readLocal","spyOn","readSession","DEFAULT_CUR_URL","URL","fetchFn","mockWindow","location","toString","assign","href","pathname","history","replaceState","mockLocalStorage","setItem","getItem","removeItem","mockSessionStorage","restoreAllMocks","mockRestore","clearAllMocks","mockReset","stubGlobal","unstubAllGlobals","BASE_CLIENT_ARGS","clientId","foundryUrl","redirectUrl","fullLoginUrl","setupWindowLocation","currentUrl","setupLocalState","initialLocalState","mocked","mockImplementation","client","clientArgs","setupClient","clientArgs_","refreshTokenMarker","useHistory","loginPage","postLoginPage","scopes","ctxPath","undefined","expectRedirectToMultipass","tokenPromise","rejects","toThrowError","Error","toHaveBeenCalledOnce","url","calls","origin","toEqual","Object","fromEntries","searchParams","entries","objectContaining","client_id","code_challenge","any","String","redirect_uri","response_type","code_challenge_method","scope","sort","join","state","refresh_token","requestedScopes","mockImplementationOnce","access_token","expires_at","Date","now","expires_in","resolves","toBeCalledTimes","each","name","should","redirectToLoginPage","toHaveBeenCalledWith","token_endpoint_auth_method","createAuthorizationServer","Function","anything","localStorage","sessionStorage","codeVerifier","oldUrl","initialState","ACCESS_TOKEN","Math","random","substring","keys","length","toBeUndefined","toBeCalledWith","JSON","stringify","window","toHaveBeenCalledTimes"],"sources":["publicOauth.test.ts"],"sourcesContent":["/*\n * Copyright 2024 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/consistent-type-imports */\nimport {\n  afterAll,\n  afterEach,\n  beforeAll,\n  beforeEach,\n  describe,\n  expect,\n  it,\n  vi,\n} from \"vitest\";\n\nimport * as commonJs from \"./common.js\";\nimport { LocalStorageState, SessionStorageState } from \"./common.js\";\nimport { createPublicOauthClient } from \"./createPublicOauthClient.js\";\nimport { PublicOauthClient } from \"./PublicOauthClient.js\";\n\nconst hoistedMocks = vi.hoisted(() => {\n  return {\n    makeTokenAndSaveRefresh: vi.fn(),\n  };\n});\n\nvi.mock(\"delay\", async (importOriginal) => {\n  const original = await importOriginal<typeof import(\"delay\")>();\n  return {\n    default: vi.fn<typeof original.default>((ms, opts) => {\n      // speed up the tests\n      return original.default(ms / 100, opts);\n    }),\n  };\n});\n\nvi.mock(\"./common.js\", async (importOriginal) => {\n  const original = await importOriginal<typeof import(\"./common.js\")>();\n  return {\n    ...original,\n    common: vi.fn<typeof commonJs.common>((...args) => {\n      const result = original.common(...args);\n      return {\n        ...result,\n        makeTokenAndSaveRefresh: hoistedMocks.makeTokenAndSaveRefresh,\n      };\n    }),\n    readLocal: vi.spyOn(original, \"readLocal\"),\n    readSession: vi.spyOn(original, \"readSession\"),\n    // vi.fn(original.readLocal),\n  };\n});\n\nvi.mock(\"oauth4webapi\");\n\ninterface BaseClientArgs {\n  clientId: string;\n  foundryUrl: string;\n  redirectUrl: string;\n  fetchFn?: typeof globalThis.fetch;\n}\n\ninterface ClientArgs extends BaseClientArgs {\n  useHistory?: boolean;\n  loginPage?: string;\n  postLoginPage?: string;\n  scopes?: string[];\n  ctxPath?: string;\n  refreshTokenMarker?: string;\n}\n\ndescribe(createPublicOauthClient, () => {\n  const DEFAULT_CUR_URL = new URL(\"https://fauxurl\");\n  const fetchFn = vi.fn<typeof fetch>();\n\n  const mockWindow = {\n    location: {\n      toString: vi.fn(() => DEFAULT_CUR_URL),\n      assign: vi.fn(),\n      href: DEFAULT_CUR_URL.href,\n      pathname: DEFAULT_CUR_URL.pathname,\n    },\n    history: {\n      replaceState: vi.fn<typeof window.history.replaceState>(),\n    },\n  };\n\n  const mockLocalStorage = {\n    setItem: vi.fn(),\n    getItem: vi.fn(),\n    removeItem: vi.fn(),\n  };\n\n  const mockSessionStorage = {\n    setItem: vi.fn(),\n    getItem: vi.fn(),\n    removeItem: vi.fn(),\n  };\n\n  beforeEach((context) => {\n    vi.restoreAllMocks();\n    fetchFn.mockRestore();\n  });\n\n  afterEach((context) => {\n    vi.clearAllMocks();\n    fetchFn.mockReset();\n  });\n\n  beforeAll(() => {\n    vi.stubGlobal(\"window\", mockWindow);\n    vi.stubGlobal(\"localStorage\", mockLocalStorage);\n    vi.stubGlobal(\"sessionStorage\", mockSessionStorage);\n  });\n\n  afterAll(() => {\n    vi.unstubAllGlobals();\n  });\n\n  const BASE_CLIENT_ARGS: BaseClientArgs = {\n    clientId: \"this-would-be-client-id\",\n    foundryUrl: \"https://a.foundry.url.local\",\n    redirectUrl: \"https://my.redirect.url.local\",\n    fetchFn,\n  };\n\n  const fullLoginUrl = new URL(\"/loginPage\", DEFAULT_CUR_URL);\n\n  function setupWindowLocation(currentUrl: string) {\n    mockWindow.location.href = new URL(currentUrl).href;\n    mockWindow.location.pathname = new URL(currentUrl).pathname;\n  }\n\n  function setupLocalState(initialLocalState: LocalStorageState) {\n    vi.mocked(commonJs.readLocal).mockImplementation(() => initialLocalState);\n  }\n\n  let client: PublicOauthClient;\n  let clientArgs: ClientArgs;\n  function setupClient(clientArgs_: ClientArgs) {\n    clientArgs = clientArgs_;\n    if (clientArgs.refreshTokenMarker) {\n      client = createPublicOauthClient(\n        clientArgs.clientId,\n        clientArgs.foundryUrl,\n        clientArgs.redirectUrl,\n        clientArgs,\n      );\n    } else {\n      client = createPublicOauthClient(\n        clientArgs.clientId,\n        clientArgs.foundryUrl,\n        clientArgs.redirectUrl,\n        clientArgs.useHistory,\n        clientArgs.loginPage,\n        clientArgs.postLoginPage,\n        clientArgs.scopes,\n        clientArgs.fetchFn,\n        clientArgs.ctxPath,\n      );\n    }\n  }\n  beforeEach((context) => {\n    // prevents mistakes like forgetting to initialize the client with an\n    // old value around\n    client = undefined!;\n    clientArgs = undefined!;\n  });\n\n  async function expectRedirectToMultipass(\n    tokenPromise: Promise<string>,\n  ) {\n    // we assume window.location.assign will take you away therefore we\n    // also have to expect in this scenario that the thrown error happens\n    await expect(tokenPromise)\n      .rejects.toThrowError(new Error(\"Unable to redirect\"));\n\n    expect(mockWindow.location.assign).toHaveBeenCalledOnce();\n\n    const url = new URL(\n      mockWindow.location.assign.mock.calls[0][0],\n    );\n    expect(url.origin).toEqual(clientArgs.foundryUrl);\n    expect(url.pathname).toEqual(\"/multipass/api/oauth2/authorize\");\n    expect(Object.fromEntries(url.searchParams.entries())).toEqual(\n      expect.objectContaining({\n        client_id: clientArgs.clientId,\n        code_challenge: expect.any(String),\n        redirect_uri: clientArgs.redirectUrl,\n        response_type: \"code\",\n        code_challenge_method: \"S256\",\n        scope: [\n          \"offline_access\",\n          ...(clientArgs.scopes ?? [\"api:read-data\", \"api:write-data\"].sort()),\n        ].join(\" \"),\n        state: expect.any(String),\n      }),\n    );\n  }\n\n  describe(\"refresh token marker and scopes\", () => {\n    beforeEach(() => {\n      setupWindowLocation(\"https://foundry.local\");\n    });\n\n    // Backwards compatibility from when we didn't store scopes\n    it(\"should not allow refresh if scopes in local storage is undefined\", async () => {\n      setupLocalState({\n        refresh_token: \"refreshToken\",\n      });\n\n      setupClient({\n        ...BASE_CLIENT_ARGS,\n        // Testing with default scopes\n      });\n\n      await expectRedirectToMultipass(\n        client(),\n      );\n    });\n\n    it(\"should not allow refresh if requested scopes are different\", async () => {\n      setupLocalState({\n        refresh_token: \"refreshToken\",\n        requestedScopes: \"api:read-data\",\n      });\n\n      setupClient({\n        ...BASE_CLIENT_ARGS,\n        scopes: [\"api:write-data\"],\n      });\n\n      await expectRedirectToMultipass(\n        client(),\n      );\n    });\n\n    it(\"should not allow refresh if the refresh markers do not match\", async () => {\n      setupLocalState({\n        refresh_token: \"refreshToken\",\n        refreshTokenMarker: \"not-the-right-marker\",\n        requestedScopes: \"api:read-data\",\n      });\n\n      setupClient({\n        ...BASE_CLIENT_ARGS,\n        refreshTokenMarker: \"marker\",\n        scopes: [\"api:read-data\"],\n      });\n\n      await expectRedirectToMultipass(\n        client(),\n      );\n    });\n\n    it(\"should try to refresh if refresh markers match and requested scopes are equal\", async () => {\n      setupLocalState({\n        refresh_token: \"refreshToken\",\n        refreshTokenMarker: \"marker\",\n        requestedScopes: \"api:admin-read api:datasets-read\",\n      });\n\n      setupClient({\n        ...BASE_CLIENT_ARGS,\n        refreshTokenMarker: \"marker\",\n        scopes: [\"api:datasets-read\", \"api:admin-read\"],\n      });\n\n      hoistedMocks.makeTokenAndSaveRefresh.mockImplementationOnce(\n        () => ({\n          access_token: \"some token\",\n          expires_at: Date.now(),\n          expires_in: 10000,\n        }),\n      );\n\n      const tokenPromise = client();\n\n      await expect(tokenPromise).resolves.toEqual(\"some token\");\n\n      expect(hoistedMocks.makeTokenAndSaveRefresh).toBeCalledTimes(1);\n    });\n  });\n\n  describe.each<{\n    name: string;\n    currentUrl: URL;\n    clientArgs: BaseClientArgs & {\n      useHistory?: boolean;\n      loginPage?: string;\n      postLoginPage?: string;\n      scopes?: string[];\n      ctxPath?: string;\n    };\n    should: {\n      redirectToLoginPage: boolean;\n    };\n  }>([\n    {\n      name: \"Basic Usage\",\n      currentUrl: DEFAULT_CUR_URL,\n      clientArgs: {\n        ...BASE_CLIENT_ARGS,\n      },\n      should: {\n        redirectToLoginPage: false,\n      },\n    },\n    {\n      name: \"Base w/ full loginPage and curUrl is root\",\n      currentUrl: DEFAULT_CUR_URL,\n      clientArgs: {\n        ...BASE_CLIENT_ARGS,\n        loginPage: fullLoginUrl.toString(),\n      },\n      should: {\n        redirectToLoginPage: true,\n      },\n    },\n    {\n      name: \"Base w/ full loginPage and curUrl is login page\",\n      currentUrl: fullLoginUrl,\n      clientArgs: {\n        ...BASE_CLIENT_ARGS,\n        loginPage: fullLoginUrl.toString(),\n      },\n      should: {\n        redirectToLoginPage: false,\n      },\n    },\n    {\n      name: \"Base w/ short loginPage and curUrl is root\",\n      currentUrl: DEFAULT_CUR_URL,\n      clientArgs: {\n        ...BASE_CLIENT_ARGS,\n        loginPage: \"/loginPage\",\n      },\n      should: {\n        redirectToLoginPage: true,\n      },\n    },\n    {\n      name: \"Base w/ short loginPage and curUrl is loginPage\",\n      currentUrl: new URL(\"/loginPage\", DEFAULT_CUR_URL),\n      clientArgs: {\n        ...BASE_CLIENT_ARGS,\n        loginPage: \"/loginPage\",\n      },\n      should: {\n        redirectToLoginPage: false,\n      },\n    },\n  ])(\"$name\", ({ clientArgs, currentUrl, should }) => {\n    beforeEach(() => {\n      setupClient(clientArgs);\n      setupWindowLocation(currentUrl.toString());\n    });\n\n    it(\"calls common with expected values\", () => {\n      expect(vi.mocked(commonJs.common)).toHaveBeenCalledWith(\n        expect.objectContaining({\n          client_id: clientArgs.clientId,\n          token_endpoint_auth_method: \"none\",\n        }),\n        commonJs.createAuthorizationServer(\n          clientArgs.ctxPath ?? \"/multipass\",\n          clientArgs.foundryUrl,\n        ),\n        expect.any(Function),\n        expect.anything(),\n        expect.any(Function),\n        undefined,\n        (clientArgs.scopes\n          ?? [\"api:read-data\", \"api:write-data\"]).sort().join(\" \"),\n      );\n    });\n\n    describe.each<\n      { localStorage: LocalStorageState; sessionStorage: SessionStorageState }\n    >([\n      {\n        localStorage: {\n          refresh_token: \"a-refresh-token\",\n          requestedScopes: (clientArgs.scopes\n            ?? [\"api:read-data\", \"api:write-data\"]).sort().join(\" \"),\n        },\n        sessionStorage: {},\n      },\n      {\n        localStorage: {},\n        sessionStorage: {\n          codeVerifier: \"hi\",\n          state: \"mom\",\n          oldUrl: \"https://someoldurl.local\",\n        },\n      },\n      { localStorage: {}, sessionStorage: {} },\n    ])(\"Initial Local State: %s\", (initialState) => {\n      const ACCESS_TOKEN = (Math.random() + 1).toString(36).substring(7);\n\n      beforeEach(() => {\n        vi.mocked(commonJs.readLocal).mockImplementation(() =>\n          initialState.localStorage\n        );\n\n        vi.mocked(commonJs.readSession).mockImplementation(() =>\n          initialState.sessionStorage\n        );\n\n        hoistedMocks.makeTokenAndSaveRefresh.mockImplementation(\n          () => ({\n            access_token: ACCESS_TOKEN,\n            expires_at: Date.now(),\n            expires_in: 10000,\n          }),\n        );\n      });\n\n      if (\n        Object.keys(initialState.localStorage).length === 0\n        && Object.keys(initialState.sessionStorage).length === 0\n      ) {\n        if (should.redirectToLoginPage) {\n          it(\"redirects to login page\", async () => {\n            const tokenPromise = client!();\n            expect(vi.mocked(commonJs.common)).toBeCalledTimes(1);\n\n            if (should.redirectToLoginPage) {\n              // expect save local\n              await expect(tokenPromise).resolves.toBeUndefined();\n              expect(mockSessionStorage.setItem).toBeCalledWith(\n                `@osdk/oauth : refresh : ${clientArgs.clientId}`,\n                JSON.stringify({ oldUrl: window.location.toString() }),\n              );\n              expect(mockWindow.history.replaceState).toHaveBeenCalledWith(\n                {},\n                \"\",\n                clientArgs.loginPage,\n              );\n              return;\n            }\n          });\n        } else {\n          it(\"redirects to multipass\", async () => {\n            const tokenPromise = client!();\n            expect(vi.mocked(commonJs.common)).toBeCalledTimes(1);\n\n            if (should.redirectToLoginPage) {\n              // expect save local\n              await expect(tokenPromise).resolves.toBeUndefined();\n              expect(mockSessionStorage.setItem).toBeCalledWith(\n                `@osdk/oauth : refresh : ${clientArgs.clientId}`,\n                JSON.stringify({ oldUrl: window.location.toString() }),\n              );\n\n              expect(mockWindow.history.replaceState).toHaveBeenCalledWith(\n                {},\n                \"\",\n                clientArgs.loginPage,\n              );\n              return;\n            }\n\n            await expectRedirectToMultipass(\n              tokenPromise,\n            );\n          });\n        }\n      }\n\n      if (initialState.sessionStorage.codeVerifier) {\n        it(\"tries to auth with return results\", async () => {\n          await expect(client()).resolves.toEqual(ACCESS_TOKEN);\n          expect(hoistedMocks.makeTokenAndSaveRefresh).toHaveBeenCalledTimes(\n            1,\n          );\n          expect(hoistedMocks.makeTokenAndSaveRefresh).toHaveBeenCalledWith(\n            undefined, // this is only because we didn't mock out the internals\n            \"signIn\",\n          );\n\n          expect(mockWindow.history.replaceState).toHaveBeenCalledTimes(1);\n          expect(mockWindow.history.replaceState).toBeCalledWith(\n            expect.anything(),\n            expect.anything(),\n            initialState.sessionStorage.oldUrl,\n          );\n        });\n      }\n\n      if (initialState.localStorage.refresh_token) {\n        it(\"refreshes\", async () => {\n          await expect(client()).resolves.toEqual(ACCESS_TOKEN);\n\n          expect(hoistedMocks.makeTokenAndSaveRefresh).toHaveBeenCalledTimes(\n            1,\n          );\n          expect(hoistedMocks.makeTokenAndSaveRefresh).toHaveBeenCalledWith(\n            undefined, // this is only because we didn't mock out the internals\n            \"refresh\",\n          );\n        });\n      }\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]}
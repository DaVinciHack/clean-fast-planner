import type { PropertyDef as $PropertyDef } from '@osdk/client';
import { $osdkMetadata } from '../../OntologyMetadata.js';
import type { ObjectTypeDefinition as $ObjectTypeDefinition } from '@osdk/client';
import type { ObjectSet as $ObjectSet, Osdk as $Osdk, PropertyValueWireToClient as $PropType } from '@osdk/client';
export declare namespace NorwayWeatherDatav2 {
    type PropertyKeys = 'waveHeights' | 'windSpeed' | 'uniqueId' | 'rawMetar' | 'fullName' | 'visibilityScore' | 'lightningChance' | 'delayChance' | 'rawTaf' | 'timestamp' | 'windDirection' | 'icaoCode' | 'weatherId' | 'locationId' | 'parsedData';
    type Links = {};
    interface Props {
        /**
         *   display name: 'Delay Chance'
         */
        readonly delayChance: $PropType['double'] | undefined;
        /**
         *   display name: 'Full Name'
         */
        readonly fullName: $PropType['string'] | undefined;
        /**
         *   display name: 'Icao Code'
         */
        readonly icaoCode: $PropType['string'] | undefined;
        /**
         *   display name: 'Lightning Chance'
         */
        readonly lightningChance: $PropType['double'] | undefined;
        /**
         *   display name: 'Location Id'
         */
        readonly locationId: $PropType['integer'] | undefined;
        /**
         *   display name: 'Parsed Data'
         */
        readonly parsedData: $PropType['string'] | undefined;
        /**
         *   display name: 'Raw Metar'
         */
        readonly rawMetar: $PropType['string'] | undefined;
        /**
         *   display name: 'Raw Taf'
         */
        readonly rawTaf: $PropType['string'] | undefined;
        /**
         *   display name: 'Timestamp'
         */
        readonly timestamp: $PropType['timestamp'] | undefined;
        /**
         *   display name: 'Unique ID'
         */
        readonly uniqueId: $PropType['string'];
        /**
         *   display name: 'Visibility Score'
         */
        readonly visibilityScore: $PropType['integer'] | undefined;
        /**
         *   display name: 'Wave Heights'
         */
        readonly waveHeights: $PropType['double'] | undefined;
        /**
         *   display name: 'Weather Id'
         */
        readonly weatherId: $PropType['integer'] | undefined;
        /**
         *   display name: 'Wind Direction'
         */
        readonly windDirection: $PropType['integer'] | undefined;
        /**
         *   display name: 'Wind Speed'
         */
        readonly windSpeed: $PropType['integer'] | undefined;
    }
    type StrictProps = Props;
    interface ObjectSet extends $ObjectSet<NorwayWeatherDatav2, NorwayWeatherDatav2.ObjectSet> {
    }
    type OsdkInstance<OPTIONS extends never | '$rid' = never, K extends keyof NorwayWeatherDatav2.Props = keyof NorwayWeatherDatav2.Props> = $Osdk.Instance<NorwayWeatherDatav2, OPTIONS, K>;
    /** @deprecated use OsdkInstance */
    type OsdkObject<OPTIONS extends never | '$rid' = never, K extends keyof NorwayWeatherDatav2.Props = keyof NorwayWeatherDatav2.Props> = OsdkInstance<OPTIONS, K>;
}
export interface NorwayWeatherDatav2 extends $ObjectTypeDefinition {
    osdkMetadata: typeof $osdkMetadata;
    type: 'object';
    apiName: 'NorwayWeatherDatav2';
    __DefinitionMetadata?: {
        objectSet: NorwayWeatherDatav2.ObjectSet;
        props: NorwayWeatherDatav2.Props;
        linksType: NorwayWeatherDatav2.Links;
        strictProps: NorwayWeatherDatav2.StrictProps;
        apiName: 'NorwayWeatherDatav2';
        description: 'Norway weather hook and parser';
        displayName: 'NorwayWeatherDatav2';
        icon: {
            type: 'blueprint';
            color: '#F5498B';
            name: 'cloud-tick';
        };
        implements: [];
        interfaceMap: {};
        inverseInterfaceMap: {};
        links: {};
        pluralDisplayName: 'Norway Weather Datav2s';
        primaryKeyApiName: 'uniqueId';
        primaryKeyType: 'string';
        properties: {
            /**
             *   display name: 'Delay Chance'
             */
            delayChance: $PropertyDef<'double', 'nullable', 'single'>;
            /**
             *   display name: 'Full Name'
             */
            fullName: $PropertyDef<'string', 'nullable', 'single'>;
            /**
             *   display name: 'Icao Code'
             */
            icaoCode: $PropertyDef<'string', 'nullable', 'single'>;
            /**
             *   display name: 'Lightning Chance'
             */
            lightningChance: $PropertyDef<'double', 'nullable', 'single'>;
            /**
             *   display name: 'Location Id'
             */
            locationId: $PropertyDef<'integer', 'nullable', 'single'>;
            /**
             *   display name: 'Parsed Data'
             */
            parsedData: $PropertyDef<'string', 'nullable', 'single'>;
            /**
             *   display name: 'Raw Metar'
             */
            rawMetar: $PropertyDef<'string', 'nullable', 'single'>;
            /**
             *   display name: 'Raw Taf'
             */
            rawTaf: $PropertyDef<'string', 'nullable', 'single'>;
            /**
             *   display name: 'Timestamp'
             */
            timestamp: $PropertyDef<'timestamp', 'nullable', 'single'>;
            /**
             *   display name: 'Unique ID'
             */
            uniqueId: $PropertyDef<'string', 'non-nullable', 'single'>;
            /**
             *   display name: 'Visibility Score'
             */
            visibilityScore: $PropertyDef<'integer', 'nullable', 'single'>;
            /**
             *   display name: 'Wave Heights'
             */
            waveHeights: $PropertyDef<'double', 'nullable', 'single'>;
            /**
             *   display name: 'Weather Id'
             */
            weatherId: $PropertyDef<'integer', 'nullable', 'single'>;
            /**
             *   display name: 'Wind Direction'
             */
            windDirection: $PropertyDef<'integer', 'nullable', 'single'>;
            /**
             *   display name: 'Wind Speed'
             */
            windSpeed: $PropertyDef<'integer', 'nullable', 'single'>;
        };
        rid: 'ri.ontology.main.object-type.b63775ec-7e22-48f3-b260-8ef6e6ebf00e';
        status: 'EXPERIMENTAL';
        titleProperty: 'icaoCode';
        type: 'object';
        visibility: 'NORMAL';
    };
}
export declare const NorwayWeatherDatav2: NorwayWeatherDatav2;
